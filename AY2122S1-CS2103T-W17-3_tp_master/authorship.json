[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"# Thunder Cats","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W17-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W17-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W17-3/tp/branch/master/graph/badge.svg?token\u003dD02WJBAOUP)](https://codecov.io/gh/AY2122S1-CS2103T-W17-3/tp)","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"Thunder Cats is a desktop application that can help NUS Year 2 Computer Science students who are doing group projectsChan organise primarily the contacts of their group mates so that they can easily keep track of whom to contact for any group project. Thunder Cats is optimised for students who can type fast, who prefer typing over using the mouse, and who are comfortable with command-line interface applications.","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"## More information","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"To find out how to use this application, see the [user guide](https://ay2122s1-cs2103t-w17-3.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"To find out how this application works, see the [developer guide](https://ay2122s1-cs2103t-w17-3.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"This project is based on the [AddressBook Level-3 project](https://se-education.org/addressbook-level3/) created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jayasting98":16,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"run {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jayasting98":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"### Nikki Than Win","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"\u003cimg src\u003d\"images/thanwinnikki.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"[[github](http://github.com/thanwinikki)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"[[portfolio](team/thanwinnikki.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"* Responsibilities: Project Documentation","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"### Won Ye Ji","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"\u003cimg alt\u003d\"Ye Ji\u0027s photo\" src\u003d\"images/wonyeji.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"[[github](https://github.com/wonyeji)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"[[portfolio](team/wonyeji.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"### Nguyen Thuan Hung","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"\u003cimg src\u003d\"images/hungkhoaitay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"[[Github](https://github.com/hungkhoaitay)][[portfolio](team/hungkhoaitay.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"* Responsibilities: Git expert","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"### Wang Hong Yong","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"\u003cimg src\u003d\"images/asherhy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"[[github](http://github.com/asherhy)]","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"[[portfolio](team/asherhy.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"### Jay Aljelo Saez Ting","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"\u003cimg alt\u003d\"Jay\u0027s Photo\" src\u003d\"images/jayasting98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"[[github](https://github.com/jayasting98)]","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"[[portfolio](team/jayasting98.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"thanwinnikki":4,"asherhy":5,"wonyeji":3,"hungkhoaitay":4,"jayasting98":9,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"This project is based on the [AddressBook Level-3 project](https://se-education.org/addressbook-level3/) created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"thanwinnikki"},"content":"* Year 2 Computer Science Student","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"thanwinnikki"},"content":"* Taking the mods CS2103T, CS2101 and ES2660","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"thanwinnikki"},"content":"* Has a need to manage and organise a significant number of contacts of group mates","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"thanwinnikki"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"thanwinnikki"},"content":"* Can type fast","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"thanwinnikki"},"content":"* Prefers typing to mouse interactions to navigate applications","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"thanwinnikki"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"thanwinnikki"},"content":"* Has other applications to message group mates","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"wonyeji"},"content":"**Value proposition**: Thunder Cats is able to manage contacts faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"wonyeji"},"content":"It centralises all information the user needs about a person and even allows users","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"wonyeji"},"content":"to group multiple contacts.","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | have a fast and easy way to input multiple contact details of a group mate | save time when I’m doing work |","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | input the details of my group mates in a simple command |save time when I input the information|","lastModifiedDate":"2021-09-27"},{"lineNumber":283,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | delete a contact which will remove them from all groups within my address book in case there is a change of groupings | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":284,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | only have a few basic commands to use my address book. | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":285,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | delete contacts out of my address book | I can remove them when there is a change in group members |","lastModifiedDate":"2021-09-27"},{"lineNumber":286,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | create groups | locate the bulk of people in groups easily |","lastModifiedDate":"2021-09-27"},{"lineNumber":287,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | list all groups | have a overview of all the groups |","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"asherhy"},"content":"| `* * *`  | user  | delete a group | I can remove them once they are not needed anymore |","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | easily access the contacts of my group mates, for centralising all the contact details | I can access them when I need them on my laptop |","lastModifiedDate":"2021-09-28"},{"lineNumber":290,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | input shared links of project groups (tele chat, msteams grp etc)| have all documents/information of my group on 1 place and don’t have to spend a long time to find these details/documents |","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | access my group mates’ contacts with a hyperlink | single tap to copy to clipboard. |","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | be able to archive contacts of old group mates once a project is over | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":293,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | categorise by different group projects | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":294,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  |  find project members by categories| - |","lastModifiedDate":"2021-09-28"},{"lineNumber":295,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | have a visually bright address book| lift my mood amidst the tiresome group projects.  |","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | be able to update the contacts of my group mates  | update them if I have keyed them in wrongly or they have been changed |","lastModifiedDate":"2021-09-28"},{"lineNumber":297,"author":{"gitId":"asherhy"},"content":"| `* * `  | student with many contacts  | be able to search for their contact by date/time created| - |","lastModifiedDate":"2021-09-28"},{"lineNumber":298,"author":{"gitId":"asherhy"},"content":"| `* * `  | student with many groups  | be able to search for a module by date/time created | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":299,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  |  be able to search through the bulk of contacts using their name | search with more efficiency |","lastModifiedDate":"2021-09-28"},{"lineNumber":300,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  |  be able to use my computer to search for contacts | use my computer instead of my phone which is more convenient for a heavy computer user |","lastModifiedDate":"2021-09-28"},{"lineNumber":301,"author":{"gitId":"asherhy"},"content":"| `* * `  | student rushing deadlines  |have more than one way of contacting one person (emergency contact) | reach him in times of emergency |","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | be able to see my overlapping groups with a person | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | be able to star/favourite a group as a way of categorising people | find them more easily |","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | divide my contacts to many different types |see each type when it is needed|","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | look for my contact by it’s type, group | I can find it when i cannot remember the name |","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | automatically imports the contact from my current contacts | avoid typing it all over again|","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | be able to set reminders | so that I will remember to perform a task for this contact|","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"asherhy"},"content":"| `* * `  | user  | find what groups are associated with a module| find details of any of those groups|","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"asherhy"},"content":"| `* * `  | student taking modules  | find a module by searching for its code | I can find its details |","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"asherhy"},"content":"| `* * `  | student taking modules  | find a module by searching for its name | I can find its details |","lastModifiedDate":"2021-09-28"},{"lineNumber":311,"author":{"gitId":"asherhy"},"content":"| `* * `  | student doing modules with group projects  | find what modules a group is associated with | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":312,"author":{"gitId":"asherhy"},"content":"| `* * `  | student doing modules  | update module details | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":313,"author":{"gitId":"asherhy"},"content":"| `*  `  | student doing group projects  | find out what tasks need to be done in the group project | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"asherhy"},"content":"| `*  `  | student doing group projects  | find out what tasks was assigned to each group member | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":315,"author":{"gitId":"asherhy"},"content":"| `*  `  | student doing group projects  | I can find out what tasks that were assigned are not yet done | - |","lastModifiedDate":"2021-09-28"},{"lineNumber":316,"author":{"gitId":"asherhy"},"content":"| `*  `  | student doing group projects  | reassign tasks to indicate somebody else is doing them now| - |","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":318,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"hungkhoaitay"},"content":"(For all use cases below, the **System** is the `ThunderCat AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"hungkhoaitay"},"content":"**Use case1: UC01 - Input the detail of group mate**","lastModifiedDate":"2021-09-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"hungkhoaitay"},"content":"1. User type adding command into the terminal","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"hungkhoaitay"},"content":"2. ThunderCat announces that the contact is successfully added","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"hungkhoaitay"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":333,"author":{"gitId":"hungkhoaitay"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":334,"author":{"gitId":"hungkhoaitay"},"content":"* 1a. ThunderCat detects an error in the entered command.","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"hungkhoaitay"},"content":"  * 1a1. ThunderCat requests for the correct command, and gives examples.","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"hungkhoaitay"},"content":"  * 1a2. User enters a new command.","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"hungkhoaitay"},"content":"    Steps 1a1-1a2 are repeated until the commands entered are correct.","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"hungkhoaitay"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"hungkhoaitay"},"content":"**Use case: UC02 - Totally delete the contact**","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"hungkhoaitay"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"hungkhoaitay"},"content":"1. User enters the user\u0027s ID to be deleted.","lastModifiedDate":"2021-09-26"},{"lineNumber":344,"author":{"gitId":"hungkhoaitay"},"content":"2. ThunderCat makes warning about the contact that will be deleted, and all groups that the contact is in.","lastModifiedDate":"2021-09-26"},{"lineNumber":345,"author":{"gitId":"hungkhoaitay"},"content":"3. User confirms the deletion.","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"hungkhoaitay"},"content":"4. ThunderCat announces that the address is successfully deleted.","lastModifiedDate":"2021-09-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"hungkhoaitay"},"content":"* 1a. ThunderCat detects an error in the entered command (UC01 - extension 1a).","lastModifiedDate":"2021-09-26"},{"lineNumber":351,"author":{"gitId":"hungkhoaitay"},"content":"* 1b. ThunderCat cannot find the contact needed to be deleted.","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"hungkhoaitay"},"content":"  * 1b1. ThunderCat announces that the contact cannot be found.","lastModifiedDate":"2021-09-26"},{"lineNumber":353,"author":{"gitId":"hungkhoaitay"},"content":"  * 1b2. User start again from step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"hungkhoaitay"},"content":"* 2a. User cancels the request.","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"hungkhoaitay"},"content":"  * 2a1. User choose not to delete the contact.","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"hungkhoaitay"},"content":"  * 2a2.  ThunderCat announces that the deleting process is canceled.","lastModifiedDate":"2021-09-26"},{"lineNumber":357,"author":{"gitId":"hungkhoaitay"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"hungkhoaitay"},"content":"**Use case: UC03 - View basic instructions**","lastModifiedDate":"2021-09-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"hungkhoaitay"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":362,"author":{"gitId":"hungkhoaitay"},"content":"1. User types help command into the terminal or click “help” button.","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"hungkhoaitay"},"content":"2. ThunderCat open the instruction page for user.","lastModifiedDate":"2021-09-26"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"hungkhoaitay"},"content":"**Use case: UC04 - Delete the contact from a group**","lastModifiedDate":"2021-09-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"hungkhoaitay"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"hungkhoaitay"},"content":"1. User enters the user\u0027s ID to be deleted and group\u0027s ID that the contact is in.","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"hungkhoaitay"},"content":"2. ThunderCat announces that the address is successfully deleted from the group.","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"hungkhoaitay"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"hungkhoaitay"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":373,"author":{"gitId":"hungkhoaitay"},"content":"* 1a. ThunderCat detects an error in the entered command (UC01 - extension 1a).","lastModifiedDate":"2021-09-26"},{"lineNumber":374,"author":{"gitId":"hungkhoaitay"},"content":"* 1b. ThunderCat cannot find the group with the given group\u0027s ID.","lastModifiedDate":"2021-09-26"},{"lineNumber":375,"author":{"gitId":"hungkhoaitay"},"content":"    * 1b1. ThunderCat announces that the group cannot be found.","lastModifiedDate":"2021-09-26"},{"lineNumber":376,"author":{"gitId":"hungkhoaitay"},"content":"    * 1b2. User start again from step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":377,"author":{"gitId":"hungkhoaitay"},"content":"* 1c. ThunderCat cannot find the contact needed to be deleted in the group.","lastModifiedDate":"2021-09-26"},{"lineNumber":378,"author":{"gitId":"hungkhoaitay"},"content":"    * 1c1. ThunderCat announces that the contact cannot be found.","lastModifiedDate":"2021-09-26"},{"lineNumber":379,"author":{"gitId":"hungkhoaitay"},"content":"    * 1c2. User start again from step 1.","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"jayasting98"},"content":"1. Should work if Java `11` or above is installed.","lastModifiedDate":"2021-09-26"},{"lineNumber":385,"author":{"gitId":"jayasting98"},"content":"2. Should be platform-independent, minimally working on any _mainstream OS_.","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"jayasting98"},"content":"3. Should be able to hold up to 1000 records (persons, groups, etc.) without a noticeable sluggishness in performance","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"jayasting98"},"content":"for typical usage.","lastModifiedDate":"2021-09-26"},{"lineNumber":388,"author":{"gitId":"jayasting98"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-09-28"},{"lineNumber":389,"author":{"gitId":"jayasting98"},"content":"able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-26"},{"lineNumber":390,"author":{"gitId":"jayasting98"},"content":"5. Should be intended for use by a single user.","lastModifiedDate":"2021-09-28"},{"lineNumber":391,"author":{"gitId":"jayasting98"},"content":"6. Data should be stored locally.","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"jayasting98"},"content":"7. Data should be stored in a human-editable format.","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"jayasting98"},"content":"8. Data should not be stored with a database management system.","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"jayasting98"},"content":"9. Should be portable; it should not require any installer.","lastModifiedDate":"2021-09-28"},{"lineNumber":395,"author":{"gitId":"jayasting98"},"content":"10. Should not depend on a remote server to function.","lastModifiedDate":"2021-09-28"},{"lineNumber":396,"author":{"gitId":"jayasting98"},"content":"11. Should have a GUI that works well for screen resolutions 1920x1080 and higher.","lastModifiedDate":"2021-09-28"},{"lineNumber":397,"author":{"gitId":"jayasting98"},"content":"12. Should have a GUI that works well for screen scales of 100% and 125%.","lastModifiedDate":"2021-09-28"},{"lineNumber":398,"author":{"gitId":"jayasting98"},"content":"13. Should have a GUI that is still usable for screen resolutions 1280x720 and higher.","lastModifiedDate":"2021-09-28"},{"lineNumber":399,"author":{"gitId":"jayasting98"},"content":"14. Should have a GUI that is still usable for screen scales of 150%.","lastModifiedDate":"2021-09-28"},{"lineNumber":400,"author":{"gitId":"jayasting98"},"content":"15. Should be packaged into a single file, ideally a JAR file.","lastModifiedDate":"2021-09-28"},{"lineNumber":401,"author":{"gitId":"jayasting98"},"content":"16. Should have a total app size of at most 100 MB.","lastModifiedDate":"2021-09-28"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"thanwinnikki":8,"asherhy":38,"wonyeji":3,"hungkhoaitay":42,"jayasting98":21,"-":347}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"Thundercat (TC) is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TC can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"1. Download the latest `thundercat.jar` from [here](https://github.com/AY2122S1-CS2103T-W17-3/tp/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the application\u0027s records.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"Adds a person to the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"wonyeji"},"content":"### Creating a group : `group`","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"Creates a group in Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"wonyeji"},"content":"Format: `group g/GROUP_NAME`","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"wonyeji"},"content":"Examples:  ","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"wonyeji"},"content":"* `group g/CS2103 Project Group`","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"wonyeji"},"content":"* `group g/Family`","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"wonyeji"},"content":"### Viewing all groups: `groups`","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"asherhy"},"content":"List all groups in Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"wonyeji"},"content":"Format: `groups`","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"asherhy"},"content":"Shows a list of all persons in the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"asherhy"},"content":"Edits an existing person in the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"asherhy"},"content":"### Deleting a person : `delete` [update coming soon]","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"asherhy"},"content":"Deletes the specified person from the Thundercat (removes all groups related to this contact automatically).","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"asherhy"},"content":"* Deletes the person at the specified `INDEX` and removes it from all related groups automatically.","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"asherhy"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"thanwinnikki"},"content":"### Deleting a group : `deleteG` [coming soon]","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"asherhy"},"content":"Deletes a specified group from the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"thanwinnikki"},"content":"Format: `deleteG g/GROUP_INDEX`","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"thanwinnikki"},"content":"* Deletes the group at the specified `GROUP_INDEX`.","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"thanwinnikki"},"content":"* The group index refers to the group number shown in the displayed group list.","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"thanwinnikki"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"thanwinnikki"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"asherhy"},"content":"* `groups` followed by `deleteG g/2` deletes the 2nd group in the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"thanwinnikki"},"content":"### Adding multiple people to a group : `addG` [coming soon]","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"thanwinnikki"},"content":"Adds multiple specified people to a specified group.","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"thanwinnikki"},"content":"Format: `addG p/PERSON_INDEX_1, p/PERSON_INDEX_2, …​ g/GROUP_INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"thanwinnikki"},"content":"* Adds to a group specified at `GROUP_INDEX`, multiple people specified at `PERSON_INDEX_1, PERSON_INDEX_2, …​`","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"thanwinnikki"},"content":"* The group index refers to the group number shown in the displayed group list.","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"thanwinnikki"},"content":"* The person index refers to the person index number show in the displayed person list.","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"thanwinnikki"},"content":"* Group index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"thanwinnikki"},"content":"* Person index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"thanwinnikki"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"thanwinnikki"},"content":"* `groups` followed by `list` and finally `addG 1,2,3 g/2` adds the persons indexed 1, 2 and ","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"thanwinnikki"},"content":"  3 to the group indexed 2.","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"thanwinnikki"},"content":"  ","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"jayasting98"},"content":"### Adding a person to multiple groups: `join`","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"jayasting98"},"content":"Adds a person to a list of groups.","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"jayasting98"},"content":"Format: `join PERSON_INDEX g/GROUP_INDEX_1[,GROUP_INDEX_2]...`","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"jayasting98"},"content":"* The person at the specified `PERSON_INDEX` is set to join all the group(s) at the specified `GROUP_INDEX_1`,","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"jayasting98"},"content":"`GROUP_INDEX_2`, etc.","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"jayasting98"},"content":"* The `PERSON_INDEX` refers to the index number shown in the last displayed person list.","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"jayasting98"},"content":"* `GROUP_INDEX_1`, `GROUP_INDEX_2`, etc. refer to the index numbers shown in the last displayed group list.","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"jayasting98"},"content":"* The indices **must all be positive integers** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":202,"author":{"gitId":"jayasting98"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"jayasting98"},"content":"* `join 1 g/2`","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"jayasting98"},"content":"* `join 2 g/1,3,6,8`","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"jayasting98"},"content":"### Listing all group mates in a group: `mates`","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"jayasting98"},"content":"Lists out all the group mates in a group.","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"jayasting98"},"content":"Format: `mates GROUP_INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"jayasting98"},"content":"* The group mates in the group at the specified `GROUP_INDEX` are listed out.","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"jayasting98"},"content":"* The `GROUP_INDEX` refers to the index number shown in the last displayed group list.","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"jayasting98"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":216,"author":{"gitId":"jayasting98"},"content":"Example:","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"jayasting98"},"content":"* `mates 7`","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"asherhy"},"content":"### Remove a person from the current group: `remove`","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"asherhy"},"content":"Remove the person from the group that Thundercat is displaying.","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"asherhy"},"content":"Format: `remove PERSON_INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"asherhy"},"content":"* The group mates with the specified `PERSON_INDEX` will be removed from the group.","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"asherhy"},"content":"* The `PERSON_INDEX` refers to the index number shown in the last displayed person list.","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"asherhy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"asherhy"},"content":"Example:","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"asherhy"},"content":"* `remove 2`","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"asherhy"},"content":"Clears all entries from the Thundercat.","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"jayasting98"},"content":"The data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":250,"author":{"gitId":"jayasting98"},"content":"The data is saved as a JSON file `[JAR file location]/data/records.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":253,"author":{"gitId":"jayasting98"},"content":"If any of your changes to the data file makes its format invalid, the application will discard all the data and start with an empty data file on the next run.","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"jayasting98"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data from the home folder of the application in your original computer.","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"hungkhoaitay"},"content":"Action | Format | Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":272,"author":{"gitId":"hungkhoaitay"},"content":"--------|---------|---------","lastModifiedDate":"2021-09-26"},{"lineNumber":273,"author":{"gitId":"hungkhoaitay"},"content":"**Add contact** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` | `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-09-26"},{"lineNumber":274,"author":{"gitId":"hungkhoaitay"},"content":"**Clear all** | `clear`","lastModifiedDate":"2021-09-26"},{"lineNumber":275,"author":{"gitId":"hungkhoaitay"},"content":"**Delete contact** | `delete INDEX` | `delete 3`","lastModifiedDate":"2021-09-26"},{"lineNumber":276,"author":{"gitId":"hungkhoaitay"},"content":"**Edit contact** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`|`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-26"},{"lineNumber":277,"author":{"gitId":"hungkhoaitay"},"content":"**Find contact** | `find KEYWORD [MORE_KEYWORDS]` | `find James Jake`","lastModifiedDate":"2021-09-26"},{"lineNumber":278,"author":{"gitId":"hungkhoaitay"},"content":"**List all contacts** | `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":279,"author":{"gitId":"hungkhoaitay"},"content":"**Create Group** | `group GROUP_NAME` | `group CS2103 Project Group`","lastModifiedDate":"2021-09-26"},{"lineNumber":280,"author":{"gitId":"hungkhoaitay"},"content":"**Show all Groups** | `groups`","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"hungkhoaitay"},"content":"**Delete Group** | `deleteG g/GROUP_INDEX` | `deleteG g/2`","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"thanwinnikki"},"content":"**Adding people to Group** | `addG p/PERSON_INDEX_1, p/PERSON_INDEX_2.. g/GROUP_INDEX` |`addG p/1, p/2, p/3 g/2`","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"hungkhoaitay"},"content":"**Join Person to Groups** | `join PERSON_INDEX g/GROUP_INDEX_1[,GROUP_INDEX_2]...` | `join 2 g/1,3,6,8`","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"hungkhoaitay"},"content":"**Show all people in Group** | `mates GROUP_INDEX` | `mates 7`","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"asherhy"},"content":"**Remove person from Group** | `remove PERSON_INDEX` | `remove 2`","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"thanwinnikki":29,"asherhy":28,"wonyeji":14,"hungkhoaitay":13,"jayasting98":34,"-":168}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"thanwinnikki"},"content":"    content: \"ThunderCats\";","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"thanwinnikki":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"title: Thunder Cats","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W17-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W17-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W17-3/tp/branch/master/graph/badge.svg?token\u003dD02WJBAOUP)](https://codecov.io/gh/AY2122S1-CS2103T-W17-3/tp)","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"**Thunder Cats is a desktop application that can help NUS Year 2 Computer Science students who are doing group projects organise primarily the contacts of their group mates so that they can easily keep track of whom to contact for any group project.** Thunder Cats is optimised for students who can type fast, who prefer typing over using the mouse, and who are comfortable with command-line interface applications.","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"* To find out how to use this application, see the [user guide](https://ay2122s1-cs2103t-w17-3.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"* To find out how this application works, see the [developer guide](https://ay2122s1-cs2103t-w17-3.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"This project is based on the [AddressBook Level-3 project](https://se-education.org/addressbook-level3/) created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jayasting98":8,"-":13}},{"path":"docs/team/asherhy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"title: Wang Hong Yong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"### Project: Thunder Cats","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"[Thunder Cats is still a work in progress.]","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"Thunder Cats is an application to manage NUS CS Y2 group projects.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"  [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dasherhy\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"    * Managed releases `v1.1` 1 releases on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"        * Added documentation for the features `delete` and `destroy`","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"        * Added the user stories of this application.","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"asherhy":24}},{"path":"docs/team/hungkhoaitay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"title: Nguyen Thuan Hung\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"  * Create team\u0027s organization on GitHub.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dhungkhoaitay\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~other~test-code\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"  * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"    * Add use cases [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"  * Add Codecov badge [\\#15a5108](https://github.com/AY2122S1-CS2103T-W17-3/tp/commit/ba53b8cea3aa025d17094dbd6c541b046a5f5d7a)","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"hungkhoaitay":29}},{"path":"docs/team/jayasting98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"title: Jay Aljelo Saez Ting\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"### Project: Thunder Cats","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"Thunder Cats is a desktop application that can help NUS Year 2 Computer Science students who are doing group projects","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"organise primarily the contacts of their group mates so that they can easily keep track of whom to contact for any group","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"project. Thunder Cats is optimised for students who can type fast, who prefer typing over using the mouse, and who are ","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"comfortable with command-line interface applications.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djayasting98)","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"  * Managed release `v1.1` on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"  * Maintained the issue tracker for `v1.1`","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"  * Reviewed pull requests","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"  * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    * Added documentation for the features `join` and `mates` [\\#25]()","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    * Added the non-functional requirements [\\#26]()","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"jayasting98":26}},{"path":"docs/team/thanwinnikki.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"title: Nikki Than Win\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"### Project: Thunder Cats","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"[Thunder Cats is still a work in progress.]","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"Thunder Cats is an application to manage NUS CS Y2 group projects.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"  [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dthanwin\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dthanwinnikki\u0026tabRepo\u003dAY2122S1-CS2103T-W17-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"    * Managed releases `v1.1` 1 releases on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"        * Added documentation for the features `deleteG` and `addG`","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"        * Added the target user profile of this application.","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"thanwinnikki":24}},{"path":"docs/team/wonyeji.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"title: Won Ye Ji\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"### Project: Thunder Cats","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"Thunder Cats is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003dwonyeji)","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"  * Managed releases `v1.1` on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"  ","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"  * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"    * Added documentation for the features `group` and `groups` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    * Added value proposition","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wonyeji":22}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getRecordsFilePath());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jayasting98":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_INDEX \u003d \"The group index provided is invalid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"    public static final String MESSAGE_GROUPS_LISTED_OVERVIEW \u003d \"%1$d groups listed!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wonyeji":1,"hungkhoaitay":1,"-":12}},{"path":"src/main/java/seedu/address/logic/AppState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":" * An enum representing an application state.","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"public enum AppState {","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"    HOME,","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"    GROUP_INFORMATION","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"jayasting98":9}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wonyeji":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_COMMAND_EXECUTION_IN_INVALID_APP_STATE \u003d \"This command cannot be run here.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    private AppState currentAppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"        currentAppState \u003d AppState.HOME;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"        if (!command.isAbleToRunInAppState(currentAppState)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"            throw new CommandException(MESSAGE_COMMAND_EXECUTION_IN_INVALID_APP_STATE);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"        currentAppState \u003d commandResult.getNextAppState();","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"wonyeji"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wonyeji":6,"jayasting98":7,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddGCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"/** Adds a person to a group in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"public class AddGCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    public static final String COMMAND_WORD \u003d \"addG\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"            + \": Adds person to a group identified by the index number used in the displayed \"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"            + \"person and group lists in the address book.\\n \"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"            + \"Parameters: PERSON_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"            + \"GROUP_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"            + \"Example: \" + COMMAND_WORD + \" p/1 g/2\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Person(s) added to group : %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"    public static final String MESSAGE_INVALID_GROUP_INDEX \u003d \"Please enter a valid group number\";","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"    public static final String MESSAGE_INVALID_PERSON_INDEX \u003d \"Please enter all valid person indexes\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"    private final Index groupIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"    private final Set\u003cIndex\u003e personIndexes;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"     * Creates an AddGCommand to add the specified {@code Person} objects to the specified {@code Group}.","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"     * @param groupIndex","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"     * @param personIndexes","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"    public AddGCommand(Index groupIndex, Set\u003cIndex\u003e personIndexes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"        requireAllNonNull(groupIndex, personIndexes);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"        this.groupIndex \u003d groupIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"        this.personIndexes \u003d personIndexes;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"        List\u003cGroup\u003e lastShownGroupList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"        if (groupIndex.getZeroBased() \u003e\u003d lastShownGroupList.size()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"            throw new CommandException(MESSAGE_INVALID_GROUP_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"        for (int i \u003d 0; i \u003c personIndexes.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"            Object[] personArray \u003d personIndexes.toArray();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"            Index curr \u003d (Index) personArray[i];","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"            if (curr.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"                throw new CommandException(MESSAGE_INVALID_PERSON_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"        Group groupToChange \u003d lastShownGroupList.get(groupIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cPerson\u003e personSet \u003d personIndexes.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"                .map(x -\u003e lastShownPersonList.get(x.getZeroBased()))","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"        model.addToGroup(groupToChange, personSet);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, groupToChange));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"thanwinnikki"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"thanwinnikki"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"thanwinnikki"},"content":"                || (other instanceof AddGCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"thanwinnikki"},"content":"                \u0026\u0026 groupIndex.equals(((AddGCommand) other).groupIndex));","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"thanwinnikki":82}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"     * Checks if the command can run while the application is currently in the given application state.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"     * @param appState The given application state.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"     * @return True if the command can run while the application is currently in the given state, false otherwise.","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"    public boolean isAbleToRunInAppState(AppState appState) {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"        return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jayasting98":10,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    private String feedbackToUser;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    private boolean showHelp;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    private boolean exit;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    private AppState nextAppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"     * Builder class to help with creating different types of {@code CommandResult} objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"    public static class Builder {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"        private CommandResult commandResultToBuild;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"         * Creates a {@code CommandResult.Builder} to help with creating a {@code CommandResult} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"         * @param feedbackToUser The feedback to be shown to the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        public Builder(String feedbackToUser) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"            commandResultToBuild \u003d new CommandResult(feedbackToUser);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"         * Completes the creation of the {@code CommandResult} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"         * @return The {@code CommandResult} object that was created.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        public CommandResult build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"            return commandResultToBuild;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"         * Sets whether the {@code CommandResult} object will cause help information to be shown to the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"         * @param willShowHelp Whether help information will be shown.","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"         * @return This {@code CommandResult.Builder} instance.","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"        public Builder setShowHelp(boolean willShowHelp) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"            commandResultToBuild.showHelp \u003d willShowHelp;","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"            return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"         * Sets the {@code CommandResult} object to cause help information to be shown to the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"         * @return This {@code CommandResult.Builder} instance.","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"        public Builder showHelp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"            return setShowHelp(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"         * Sets whether the {@code CommandResult} object will cause the application to exit.","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"         * @param willExit Whether the application will exit.","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"         * @return This {@code CommandResult.Builder} instance.","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"        public Builder setExit(boolean willExit) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"            commandResultToBuild.exit \u003d willExit;","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"            return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"         * Sets the {@code CommandResult} object to cause the application to exit.","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"         * @return This {@code CommandResult.Builder} instance.","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"        public Builder goExit() {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"            return setExit(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"         * Sets the {@code CommandResult} object to cause the application to change to the given state.","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"         * @param nextAppState The application state to change to as a result of the command execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"         * @return This {@code CommandResult.Builder} instance.","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"        public Builder setNextAppState(AppState nextAppState) {","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"            commandResultToBuild.nextAppState \u003d nextAppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"            return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"        nextAppState \u003d AppState.HOME;","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"        showHelp \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"        exit \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"        nextAppState \u003d AppState.HOME;","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"    public AppState getNextAppState() {","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"        return nextAppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"jayasting98"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"jayasting98"},"content":"                \u0026\u0026 nextAppState.equals(otherCommandResult.nextAppState);","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"jayasting98"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, nextAppState);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jayasting98":96,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"    public static final String COMMAND_WORD \u003d \"deleteG\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"            + \": Deletes the group identified by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted Group: %1$s\";","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"    public DeleteGroupCommand(Index targetIndex) {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"hungkhoaitay"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"hungkhoaitay"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"hungkhoaitay"},"content":"        Group groupToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"hungkhoaitay"},"content":"        model.deleteGroup(groupToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"hungkhoaitay"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete));","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"hungkhoaitay"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"hungkhoaitay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"hungkhoaitay"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"hungkhoaitay"},"content":"                || (other instanceof DeleteGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"hungkhoaitay"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteGroupCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"hungkhoaitay":53}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"thanwinnikki":1,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"    private final PersonNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"    public FindCommand(PersonNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wonyeji":3,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/FindGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":" * Finds and lists all groups in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"public class FindGroupCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"    public static final String COMMAND_WORD \u003d \"findG\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all groups whose names contain any of \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2100 ES2660\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"    private final GroupNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"    public FindGroupCommand(GroupNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"        model.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"                String.format(Messages.MESSAGE_GROUPS_LISTED_OVERVIEW, model.getFilteredGroupList().size()));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"hungkhoaitay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"hungkhoaitay"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"                || (other instanceof FindGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"hungkhoaitay"},"content":"                \u0026\u0026 predicate.equals(((FindGroupCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"hungkhoaitay":42}},{"path":"src/main/java/seedu/address/logic/commands/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"public class GroupCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the address book\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a group to the address book. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"            + PREFIX_NAME + \"Favourite Group\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    private final Group toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"     * Creates an GroupCommand to add the specified {@code Group}","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    public GroupCommand(Group group) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        toAdd \u003d group;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"        model.addGroup(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"        return new CommandResult.Builder(String.format(MESSAGE_SUCCESS, toAdd))","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"                .setNextAppState(AppState.GROUP_INFORMATION)","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"                || (other instanceof GroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"                \u0026\u0026 toAdd.equals(((GroupCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"asherhy":54,"jayasting98":2}},{"path":"src/main/java/seedu/address/logic/commands/GroupsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":" * Lists all groups in the address book to the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"public class GroupsCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"    public static final String COMMAND_WORD \u003d \"groups\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all groups\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"        return new CommandResult.Builder(MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"                .setNextAppState(AppState.GROUP_INFORMATION)","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"                .build();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"wonyeji":24,"jayasting98":2}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"        return new CommandResult.Builder(MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"                .setNextAppState(AppState.HOME)","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"                .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wonyeji":2,"jayasting98":2,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/MatesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.IsGroupPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.IsGroupMemberPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":" * Lists all persons in the given group.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"public class MatesCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    public static final String COMMAND_WORD \u003d \"mates\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"            + \": Lists members in group index indicated.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all members in group.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"    private final Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"    public MatesCommand(Index index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"        Group group \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"wonyeji"},"content":"        model.updateFilteredPersonList(new IsGroupMemberPredicate(group));","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"        model.updateFilteredGroupList(new IsGroupPredicate(group));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"wonyeji"},"content":"        return new CommandResult.Builder(MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"                .setNextAppState(AppState.HOME)","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"wonyeji"},"content":"                .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"                || (other instanceof MatesCommand // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 index.equals(((MatesCommand) other).index)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"wonyeji":53,"jayasting98":2}},{"path":"src/main/java/seedu/address/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.person.IsGroupMemberPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"            + \": Removes the person identified by the index number used in the persons list in the group\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"            + \" from the group.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_REMOVE_PERSON_SUCCESS \u003d \"Removed Person: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    private final Index firstIndex \u003d Index.fromZeroBased(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"    public RemoveCommand(Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"        List\u003cGroup\u003e lastShownGroupList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"        if (lastShownGroupList.size() !\u003d 1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"        Person personToRemove \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"        Group group \u003d lastShownGroupList.get(firstIndex.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"        UniquePersonList persons \u003d group.getPersons();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"        persons.remove(personToRemove);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"        model.updateFilteredPersonList(new IsGroupMemberPredicate(group));","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_PERSON_SUCCESS, personToRemove));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"                || (other instanceof RemoveCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"                \u0026\u0026 targetIndex.equals(((RemoveCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"asherhy":64}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"thanwinnikki":1,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddGCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"public class AddGCommandParser implements Parser\u003cAddGCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"     * and returns an AddGCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"     * @throws ParseException if  the user does not conform to the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    public AddGCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP, PREFIX_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP)","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"        Index groupIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cIndex\u003e personIndexes \u003d ParserUtil.parseIndexes(argMultimap.getAllValues(PREFIX_PERSON));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"        return new AddGCommand(groupIndex, personIndexes);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"thanwinnikki":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.GroupsCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.MatesCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"        case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"            return new GroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"wonyeji"},"content":"        case GroupsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"wonyeji"},"content":"            return new GroupsCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"        case MatesCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"wonyeji"},"content":"            return new MatesCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"wonyeji"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"hungkhoaitay"},"content":"            return new DeleteGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"hungkhoaitay"},"content":"        case FindGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"hungkhoaitay"},"content":"            return new FindGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"asherhy"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"            return new RemoveCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"thanwinnikki"},"content":"        case AddGCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"thanwinnikki"},"content":"            return new AddGCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thanwinnikki":4,"asherhy":7,"wonyeji":10,"hungkhoaitay":6,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"    public static final Prefix PREFIX_PERSON \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"thanwinnikki":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"            return new DeleteGroupCommand(index);","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"hungkhoaitay":29}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"        return new FindCommand(new PersonNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wonyeji":2,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/FindGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"public class FindGroupCommandParser implements Parser\u003cFindGroupCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"    public FindGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"        return new FindGroupCommand(new GroupNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"hungkhoaitay":33}},{"path":"src/main/java/seedu/address/logic/parser/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"public class GroupCommandParser implements Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     * and returns an AddGCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    public GroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"        Group group \u003d new Group(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        return new GroupCommand(group);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"asherhy":43}},{"path":"src/main/java/seedu/address/logic/parser/MatesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.MatesCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"public class MatesCommandParser implements Parser\u003cMatesCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"     * Parses the given {@code String} of arguments in the context of the MatesCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"     * and returns a MatesCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"    public MatesCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"            return new MatesCommand(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatesCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"wonyeji":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"thanwinnikki"},"content":"     * Parses {@code Collection\u003cString\u003e indexes} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"thanwinnikki"},"content":"    public static Set\u003cIndex\u003e parseIndexes(Collection\u003cString\u003e indexes) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"thanwinnikki"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"thanwinnikki"},"content":"        for (String indexNumber : indexes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"thanwinnikki"},"content":"            indexSet.add(parseIndex(indexNumber));","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"thanwinnikki"},"content":"        return indexSet;","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"thanwinnikki":13,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"public class RemoveCommandParser implements Parser\u003cRemoveCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"     * and returns a RemoveCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    public RemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"            return new RemoveCommand(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"asherhy":25}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"        return groups.contains(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"asherhy"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"asherhy"},"content":"        groups.add(g);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"thanwinnikki"},"content":"    public void addToGroup(Group target, Set\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"thanwinnikki"},"content":"        persons.forEach(x -\u003e target.add(x));","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":124,"author":{"gitId":"hungkhoaitay"},"content":"        groups.removePersonFromAllGroups(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"hungkhoaitay"},"content":"    //// group-level operations","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"hungkhoaitay"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"hungkhoaitay"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"hungkhoaitay"},"content":"    public void removeGroup(Group key) {","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"hungkhoaitay"},"content":"        groups.remove(key);","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"hungkhoaitay"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"hungkhoaitay"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"hungkhoaitay"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups));","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thanwinnikki":11,"asherhy":16,"wonyeji":2,"hungkhoaitay":19,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"     * Adds the given group.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"     * {@code group} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"    void addGroup(Group group);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"hungkhoaitay"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Group \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"hungkhoaitay"},"content":"     * Deletes the given group.","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"hungkhoaitay"},"content":"     * The group must exist in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"hungkhoaitay"},"content":"    void deleteGroup(Group target);","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"hungkhoaitay"},"content":"    /** Returns an unmodifiable view of the filtered Group list */","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"hungkhoaitay"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"hungkhoaitay"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"hungkhoaitay"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"hungkhoaitay"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"thanwinnikki"},"content":"     * Adds the person objects in the set to the specified group.","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"thanwinnikki"},"content":"     * The group must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"thanwinnikki"},"content":"     * @param target","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"thanwinnikki"},"content":"    void addToGroup(Group target, Set\u003cPerson\u003e persons);","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thanwinnikki":8,"asherhy":11,"wonyeji":3,"hungkhoaitay":18,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"hungkhoaitay"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"        return userPrefs.getRecordsFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        userPrefs.setRecordsFilePath(addressBookFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"hungkhoaitay"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"asherhy"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"asherhy"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"asherhy"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"asherhy"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"asherhy"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"asherhy"},"content":"        //updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"wonyeji"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"wonyeji"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"wonyeji"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"wonyeji"},"content":"        return filteredGroups;","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"hungkhoaitay"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Group \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"hungkhoaitay"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"hungkhoaitay"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"hungkhoaitay"},"content":"        addressBook.removeGroup(target);","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"thanwinnikki"},"content":"     * Adds the set of person objects to a specified group in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"thanwinnikki"},"content":"     * @param target","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"thanwinnikki"},"content":"     * @param persons","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"thanwinnikki"},"content":"    public void addToGroup(Group target, Set\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"thanwinnikki"},"content":"        addressBook.addToGroup(target, persons);","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"hungkhoaitay"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"wonyeji"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"wonyeji"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 filteredGroups.equals(other.filteredGroups);","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thanwinnikki":11,"asherhy":12,"wonyeji":17,"hungkhoaitay":14,"jayasting98":2,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"     * Returns an unmodifiable view of the groups list.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wonyeji":7,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    Path getRecordsFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jayasting98":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    private Path recordsFilePath \u003d Paths.get(\"data\" , \"records.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        setRecordsFilePath(newUserPrefs.getRecordsFilePath());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"    public Path getRecordsFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"        return recordsFilePath;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"    public void setRecordsFilePath(Path recordsFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"        requireNonNull(recordsFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"        this.recordsFilePath \u003d recordsFilePath;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"                \u0026\u0026 recordsFilePath.equals(o.recordsFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"        return Objects.hash(guiSettings, recordsFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"        sb.append(\"\\nLocal data file location : \" + recordsFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jayasting98":10,"-":77}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":" * Guarantees: Details are present and not null. persons is not validated todo","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"public class Group {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"    // Identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"    private final Name name;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"    // Data fields","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"     * Name must be present and not null.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"    public Group(Name name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"        this.persons \u003d new UniquePersonList();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"        return name;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"    public UniquePersonList getPersons() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"        return persons;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"     * Adds a person to the group.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"     * @param person Person to be added to the group.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"    public void add(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"        this.persons.add(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"     * Only checks if 2 groups have the same name or are the same group.","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"     * @param otherGroup Other group to compare.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"     * @return Returns true if both groups have the same name or are the same group;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"        boolean same \u003d (otherGroup !\u003d null)","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"                \u0026\u0026 otherGroup.getName().equals(this.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"        return same;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"     * This checks if both names and person lists are the same.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"     * @param other Other object to compare.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"     * @return Return true if both groups have the same name and person list.","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"thanwinnikki"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"thanwinnikki"},"content":"        return otherGroup.getName().equals(this.getName())","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"thanwinnikki"},"content":"                \u0026\u0026 otherGroup.getPersons().equals(this.getPersons());","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"thanwinnikki"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"thanwinnikki"},"content":"        return Objects.hash(name, persons);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"thanwinnikki"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"thanwinnikki"},"content":"        return getName().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"thanwinnikki":92}},{"path":"src/main/java/seedu/address/model/group/GroupNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":" * Tests that a {@code Group}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"public class GroupNameContainsKeywordsPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"    public GroupNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(group.getName().fullName, keyword));","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"                || (other instanceof GroupNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 keywords.equals(((GroupNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wonyeji":30}},{"path":"src/main/java/seedu/address/model/group/IsGroupPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":" * Tests that a {@code Person} is in the given group.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"public class IsGroupPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"    private final Group group;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"    public IsGroupPredicate(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"        return this.group.equals(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"                || (other instanceof IsGroupPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 group.equals(((IsGroupPredicate) other).group)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"wonyeji":26}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":" * A list of groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":" * todo","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"     * Checks if the group list contains a specified group.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"     * @param toCheck Specified group to check whether it exists in the group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"     * @return True if group list contains the specified group.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"     * Adds a group with a unique name to the group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"     * @param toAdd Group to add to the group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"     * Replaces the group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"     * {@code target} must exist in the group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"     * @param target The target group you are trying to replace.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"     * @param editedGroup The group you are trying to replace with.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"        if (!target.isSameGroup(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"        internalList.set(index, editedGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"     * The group must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"hungkhoaitay"},"content":"     * Removes the equivalent person from all groups.","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"hungkhoaitay"},"content":"    public void removePersonFromAllGroups(Person toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"hungkhoaitay"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"hungkhoaitay"},"content":"        internalList.stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"hungkhoaitay"},"content":"                .filter(group -\u003e group.getPersons().contains(toRemove))","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"hungkhoaitay"},"content":"                .forEach(group -\u003e group.getPersons().remove(toRemove));","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"thanwinnikki"},"content":"     * Replace the current group list with {@code replacement} group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"thanwinnikki"},"content":"     * The new group must not be null.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"thanwinnikki"},"content":"     * @param replacement The replacement group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups(UniqueGroupList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"thanwinnikki"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"thanwinnikki"},"content":"     * Replaces the current group list with {@code groups}. {@code List} of groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"thanwinnikki"},"content":"     * List of groups must not contain any duplicates.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"thanwinnikki"},"content":"     * @param groups The {@code List} of groups to replace the current list.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"thanwinnikki"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"thanwinnikki"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"thanwinnikki"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"thanwinnikki"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"thanwinnikki"},"content":"     * Returns the list of groups as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"thanwinnikki"},"content":"     * @return ObservableList containing the groups in the group list.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"thanwinnikki"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"thanwinnikki"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"thanwinnikki"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"thanwinnikki"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"thanwinnikki"},"content":"     * Checks whether other object is the same group list or has the same list of groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"thanwinnikki"},"content":"     * @param other Other object to check.","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"thanwinnikki"},"content":"     * @return Returns true if other object is the same group list or has the same list of groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"thanwinnikki"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"thanwinnikki"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"thanwinnikki"},"content":"                || (other instanceof UniqueGroupList","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"thanwinnikki"},"content":"                        \u0026\u0026 internalList.equals(((UniqueGroupList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"thanwinnikki"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"thanwinnikki"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"thanwinnikki"},"content":"     * Checks if the groups in the {@code List} of groups have the same name or are the same group.","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"thanwinnikki"},"content":"     * @param groups {@code List} of groups to be checked.","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"thanwinnikki"},"content":"     * @return","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"thanwinnikki"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"thanwinnikki"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"thanwinnikki"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"thanwinnikki"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"thanwinnikki"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"thanwinnikki"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"thanwinnikki"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thanwinnikki":146,"hungkhoaitay":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"        super(\"Group with that name already exists in the list!\");","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thanwinnikki":7}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"    public GroupNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"        super(\"The group that you are finding does not exist!\");","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"thanwinnikki":7}},{"path":"src/main/java/seedu/address/model/names/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.names;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":" * Represents a Name in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thanwinnikki":2,"-":57}},{"path":"src/main/java/seedu/address/model/person/IsGroupMemberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":" * Tests that a {@code Person} is in the given group.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"public class IsGroupMemberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"    private final Group group;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"    public IsGroupMemberPredicate(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"        return group.getPersons()","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"                .contains(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"                || (other instanceof IsGroupMemberPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 group.equals(((IsGroupMemberPredicate) other).group)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"wonyeji":29}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thanwinnikki":1,"-":123}},{"path":"src/main/java/seedu/address/model/person/PersonNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"public class PersonNameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"    public PersonNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"                || (other instanceof PersonNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 keywords.equals(((PersonNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wonyeji":4,"-":27}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":" * Guarantees: Details are present and not null. There are no restrictions to what is allowed as a description.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"public class Task {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"    private static final String DONE_TASK \u003d \"[DONE] \";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"    private static final String UNDONE_TASK \u003d \"[    ] \";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"    private final String description;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"     * description must be present and not null.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"        return description;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"    public void setDoneTask() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"        done \u003d true;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"    public void setUndoneTask() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"        done \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"    public boolean getDoneTask() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"        return done;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"     * Returns true if both {@code Task} have the same {@code description}.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"     * Does not check whether the tasks are done or not.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"     * This defines a weaker notion of equality between the two {@code Tasks}.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"        if (done) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"            return DONE_TASK + description;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"            return UNDONE_TASK + description;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"    public boolean equals (Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"                || (other instanceof Task","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"                \u0026\u0026 description.equals(((Task) other).getDescription())","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"                \u0026\u0026 (done \u003d\u003d ((Task) other).getDoneTask()));","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"        return description.hashCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"thanwinnikki":76}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":" * A list of Tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":" * A Task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":" * Tasks uses Task#isSameTask(Task) for equality so as to ensure that the Task being added or updated is","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a Task uses Task#equals(Object) so","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":" * as to ensure that the Task with exactly the same fields will be removed.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":" *","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":" *","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"     * Returns true if the list contains an equivalent Task as the given argument.","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"     * Adds a Task to the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"     * The Task must not already exist in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wonyeji"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wonyeji"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"     * Replaces the Task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wonyeji"},"content":"     * The Task identity of {@code editedTask} must not be the same as another existing Task in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wonyeji"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"wonyeji"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wonyeji"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"wonyeji"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"wonyeji"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"wonyeji"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"wonyeji"},"content":"     * Removes the equivalent Task from the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"wonyeji"},"content":"     * The Task must exist in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"wonyeji"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"wonyeji"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"wonyeji"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"wonyeji"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"wonyeji"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"wonyeji"},"content":"     * Replaces the contents of this list with {@code Tasks}.","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"wonyeji"},"content":"     * {@code Tasks} must not contain duplicate Tasks.","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"wonyeji"},"content":"    public void setTasks(List\u003cTask\u003e Tasks) {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"wonyeji"},"content":"        requireAllNonNull(Tasks);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"wonyeji"},"content":"        if (!tasksAreUnique(Tasks)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"wonyeji"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"wonyeji"},"content":"        internalList.setAll(Tasks);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"wonyeji"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"wonyeji"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"wonyeji"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"wonyeji"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"wonyeji"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"wonyeji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"wonyeji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"wonyeji"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"wonyeji"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"wonyeji"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"wonyeji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"wonyeji"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"wonyeji"},"content":"     * Returns true if {@code Tasks} contains only unique Tasks.","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"wonyeji"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e Tasks) {","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"wonyeji"},"content":"        for (int i \u003d 0; i \u003c Tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"wonyeji"},"content":"            for (int j \u003d i + 1; j \u003c Tasks.size(); j++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"wonyeji"},"content":"                if (Tasks.get(i).isSameTask(Tasks.get(j))) {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"wonyeji"},"content":"                    return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"wonyeji"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"wonyeji"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"wonyeji"},"content":"        return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wonyeji":137}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":" * identity).","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"        super(\"Operation would result in duplicate Tasks\");","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wonyeji":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"        super(\"The task that you are looking for does not exist!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wonyeji":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"thanwinnikki":1,"-":59}},{"path":"src/main/java/seedu/address/storage/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"public class Id implements Comparable\u003cId\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_MALFORMED_ID \u003d \"This ID is malformed.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    private static final String DELIMITER \u003d \"-\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    private static final int EPOCH_DAY_TOKEN_INDEX \u003d 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    private static final int NANO_OF_DAY_TOKEN_INDEX \u003d 1;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    private static final int HEX_RADIX \u003d 16;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    private static final String STRING_REPRESENTATION_FORMAT \u003d \"%s-%s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    private final LocalDateTime localDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    private Id() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"        localDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    private Id(LocalDateTime localDateTime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"     * Generates an {@code Id} object that is unique within the passed set of {@code Id} objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"     * @param idSet The set of {@code Id} objects that the generated {@code Id} must be unique in.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"     * @return The generated {@code Id}.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    public static Id generateUniqueId(Set\u003cId\u003e idSet) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"        Id id \u003d generateId();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"        while (idSet.contains(id)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"            id \u003d generateId();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"        return id;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"     * Generates an {@code Id}.","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"     * @return The generated {@code Id}.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"    public static Id generateId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        return new Id();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"     * Parses the given {@code String} ID to produce the corresponding {@code Id}.","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"     * @param idString The {@code String} ID.","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"     * @return The corresponding {@code Id}.","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"     * @throws IllegalValueException If a malformed {@code String} ID is passed.","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"    public static Id parse(String idString) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d getTokens(idString);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"        String epochDayHex \u003d tokens[EPOCH_DAY_TOKEN_INDEX];","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"        LocalDate localDate \u003d parseLocalDate(epochDayHex);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"        String nanoOfDayHex \u003d tokens[NANO_OF_DAY_TOKEN_INDEX];","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"        LocalTime localTime \u003d parseLocalTime(nanoOfDayHex);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(localDate, localTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"        return new Id(localDateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"    private static String[] getTokens(String idString) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"        if (idString.startsWith(DELIMITER) || idString.endsWith(DELIMITER)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(MESSAGE_MALFORMED_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"        String[] tokens \u003d idString.split(DELIMITER);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(MESSAGE_MALFORMED_ID);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        return tokens;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"    private static LocalDate parseLocalDate(String epochDayHex) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"        long epochDay;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"        LocalDate localDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"            epochDay \u003d Long.parseLong(epochDayHex, HEX_RADIX);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(MESSAGE_MALFORMED_ID);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"            localDate \u003d LocalDate.ofEpochDay(epochDay);","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(MESSAGE_MALFORMED_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"        return localDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"    private static LocalTime parseLocalTime(String nanoOfDayHex) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"        long nanoOfDay;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"        LocalTime localTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"            nanoOfDay \u003d Long.parseLong(nanoOfDayHex, HEX_RADIX);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(MESSAGE_MALFORMED_ID);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"            localTime \u003d LocalTime.ofNanoOfDay(nanoOfDay);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(MESSAGE_MALFORMED_ID);","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"        return localTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"    public int compareTo(Id o) {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"        return localDateTime.compareTo(o.localDateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"        if (!(o instanceof Id)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"jayasting98"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"jayasting98"},"content":"        Id other \u003d (Id) o;","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"jayasting98"},"content":"        return localDateTime.equals(other.localDateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"jayasting98"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"        return Objects.hash(localDateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"        long epochDay \u003d localDateTime.toLocalDate().toEpochDay();","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"        long nanoOfDay \u003d localDateTime.toLocalTime().toNanoOfDay();","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"        String epochDayHex \u003d Long.toHexString(epochDay);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"        String nanoOfDayHex \u003d Long.toHexString(nanoOfDay);","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"        String stringRepresentation \u003d String.format(STRING_REPRESENTATION_FORMAT, epochDayHex, nanoOfDayHex);","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":"        return stringRepresentation;","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jayasting98":149}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"@JsonDeserialize(builder \u003d JsonAdaptedGroup.Builder.class)","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP_MATE \u003d \"Duplicate group mates(s) found in storage.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_NO_SUCH_PERSON \u003d \"There is no such person that has the ID of this group mate.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    private final String name;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    private final List\u003cString\u003e groupMateIds;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"     * Builder class for {@code JsonAdaptedGroup}.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"    public static class Builder {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        private JsonAdaptedGroup groupToBuild;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"         * Constructs a {@code JsonAdaptedGroup.Builder} for a {@code JsonAdaptedPerson} with the given group details.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"         * @param name The group\u0027s name.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"         * @param groupMateIds The list of the person IDs of all the group mates that belong to the group.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        @JsonCreator","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        public Builder(@JsonProperty(\"name\") String name, @JsonProperty(\"groupMateIds\") List\u003cString\u003e groupMateIds) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"            groupToBuild \u003d new JsonAdaptedGroup(name, groupMateIds);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"         * Converts the given {@code Group} to a {@code JsonAdaptedGroup} using a {@code JsonAdaptedGroup.Builder}.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"         * @param source The {@code Group} object to be converted.","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"         * @param personToIdMap The mapping from each {@code Person} object to its respective stored person ID.","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"        public Builder(Group source, Map\u003cPerson, Id\u003e personToIdMap) {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"            groupToBuild \u003d new JsonAdaptedGroup(source, personToIdMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"         * Completes the {@code JsonAdaptedGroup} being built by this {@code JsonAdaptedGroup.Builder}.","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"         *","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"         * @return The completed {@code JsonAdaptedGroup} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"        public JsonAdaptedGroup build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"            return groupToBuild;","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"    private JsonAdaptedGroup(String name, List\u003cString\u003e groupMateIds) {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"        this.groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"        if (groupMateIds !\u003d null) {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"            this.groupMateIds.addAll(groupMateIds);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"    private JsonAdaptedGroup(Group source, Map\u003cPerson, Id\u003e personToIdMap) {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"        groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        UniquePersonList persons \u003d source.getPersons();","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"            Id personId \u003d personToIdMap.get(person);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"            groupMateIds.add(personId.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"     * The mapping from each stored person ID to its respective {@code Person} object is required in order to add the","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"     * correct group mates that belong to this {@code Group} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"     * @param idToPersonMap The mapping from each stored person ID to its respective {@code Person} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"     * @return The {@code Group} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted group.","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"    public Group toModelType(Map\u003cId, Person\u003e idToPersonMap) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"        final Name modelName \u003d createName();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"        Group group \u003d new Group(modelName);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"        addGroupMates(group, idToPersonMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"        return group;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"    private Name createName() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"        return new Name(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"    private void addGroupMates(Group group, Map\u003cId, Person\u003e idToPersonMap) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"        for (String personIdString : groupMateIds) {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"            Id personId \u003d Id.parse(personIdString);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"            Person person \u003d idToPersonMap.get(personId);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"            if (person \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"                throw new IllegalValueException(MESSAGE_NO_SUCH_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"                group.add(person);","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"            } catch (DuplicatePersonException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP_MATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"jayasting98"},"content":"        if (!(other instanceof JsonAdaptedGroup)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"jayasting98"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup o \u003d (JsonAdaptedGroup) other;","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"        return name.equals(o.name) \u0026\u0026 groupMateIds.equals(o.groupMateIds);","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"jayasting98":139}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"thanwinnikki":1,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"import com.fasterxml.jackson.annotation.JsonGetter;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Duplicate person(s) found in storage.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Duplicate group(s) found in storage.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    private final Map\u003cString, JsonAdaptedPerson\u003e idToJsonAdaptedPersonMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    private final Map\u003cString, JsonAdaptedGroup\u003e idToJsonAdaptedGroupMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    public JsonSerializableAddressBook(","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"            @JsonProperty(\"persons\") Map\u003cString, JsonAdaptedPerson\u003e idToJsonAdaptedPersonMap,","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"            @JsonProperty(\"groups\") Map\u003cString, JsonAdaptedGroup\u003e idToJsonAdaptedGroupMap) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"        this.idToJsonAdaptedPersonMap \u003d new HashMap\u003c\u003e(idToJsonAdaptedPersonMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"        this.idToJsonAdaptedGroupMap \u003d new HashMap\u003c\u003e(idToJsonAdaptedGroupMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"        idToJsonAdaptedPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        Iterable\u003cPerson\u003e sourcePersons \u003d source.getPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"        Map\u003cPerson, Id\u003e personToIdMap \u003d createModelEntityToIdMap(sourcePersons);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"        initialisePersonIdToJsonAdaptedPersonMap(sourcePersons, personToIdMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"        idToJsonAdaptedGroupMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"        Iterable\u003cGroup\u003e sourceGroups \u003d source.getGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"        Map\u003cGroup, Id\u003e groupToIdMap \u003d createModelEntityToIdMap(sourceGroups);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"        initialiseGroupIdToJsonAdaptedGroupMap(sourceGroups, groupToIdMap, personToIdMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d createPersonIdToPersonMap();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"        Iterable\u003cPerson\u003e persons \u003d idToPersonMap.values();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"        addPersons(addressBook, persons);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"        Iterable\u003cJsonAdaptedGroup\u003e jsonAdaptedGroups \u003d idToJsonAdaptedGroupMap.values();","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"        Iterable\u003cGroup\u003e groups \u003d createGroups(jsonAdaptedGroups, idToPersonMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"        addGroups(addressBook, groups);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"        return addressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"    @JsonGetter(\"persons\")","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"    public Map\u003cString, JsonAdaptedPerson\u003e getIdToJsonAdaptedPersonMap() {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"        return idToJsonAdaptedPersonMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"    @JsonGetter(\"groups\")","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"    public Map\u003cString, JsonAdaptedGroup\u003e getIdToJsonAdaptedGroupMap() {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"        return idToJsonAdaptedGroupMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"    private \u003cT\u003e Map\u003cT, Id\u003e createModelEntityToIdMap(Iterable\u003cT\u003e modelEntities) {","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"        Set\u003cId\u003e idSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"        Map\u003cT, Id\u003e modelEntityToIdMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"        for (T modelEntity : modelEntities) {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"            Id id \u003d Id.generateUniqueId(idSet);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"            modelEntityToIdMap.put(modelEntity, id);","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"            idSet.add(id);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"        return modelEntityToIdMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"    private void initialisePersonIdToJsonAdaptedPersonMap(Iterable\u003cPerson\u003e persons, Map\u003cPerson, Id\u003e personToIdMap) {","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"            Id personId \u003d personToIdMap.get(person);","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"            JsonAdaptedPerson jsonAdaptedPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"            idToJsonAdaptedPersonMap.put(personId.toString(), jsonAdaptedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"    private void initialiseGroupIdToJsonAdaptedGroupMap(","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"            Iterable\u003cGroup\u003e groups, Map\u003cGroup, Id\u003e groupToIdMap, Map\u003cPerson, Id\u003e personToIdMap) {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"        for (Group group : groups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"            Id personId \u003d groupToIdMap.get(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"            JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(group, personToIdMap)","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"            idToJsonAdaptedGroupMap.put(personId.toString(), jsonAdaptedGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"    private Map\u003cId, Person\u003e createPersonIdToPersonMap() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e jsonAdaptedPersonToPersonMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"        for (Map.Entry\u003cString, JsonAdaptedPerson\u003e idToJaPersonEntry : idToJsonAdaptedPersonMap.entrySet()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"            String personIdString \u003d idToJaPersonEntry.getKey();","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"            Id personId \u003d Id.parse(personIdString);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"            JsonAdaptedPerson jsonAdaptedPerson \u003d idToJaPersonEntry.getValue();","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"            jsonAdaptedPersonToPersonMap.put(personId, person);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"jayasting98"},"content":"        return jsonAdaptedPersonToPersonMap;","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"    private void addPersons(AddressBook addressBook, Iterable\u003cPerson\u003e persons) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"    private List\u003cGroup\u003e createGroups(","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":"            Iterable\u003cJsonAdaptedGroup\u003e jsonAdaptedGroups,","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"            Map\u003cId, Person\u003e idToPersonMap) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"        List\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : jsonAdaptedGroups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType(idToPersonMap);","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"            groups.add(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"        return groups;","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":"    private void addGroups(AddressBook addressBook, Iterable\u003cGroup\u003e groups) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"jayasting98"},"content":"        for (Group group : groups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"jayasting98"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"jayasting98"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"jayasting98"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":104,"-":52}},{"path":"src/main/java/seedu/address/ui/Card.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":" * A UI component that displays information of a {@code Listable}.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"abstract class Card extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"     * Creates a {@code Card} with the given FXML file.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    Card(String fxmlFileName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"        super(fxmlFileName);","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jayasting98":16}},{"path":"src/main/java/seedu/address/ui/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":" * A UI component that displays information of a {@code Group}.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"public class GroupCard extends Card {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    private static final String FXML \u003d \"GroupCard.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    public final Group group;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    private Label name;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    private Label id;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"     * Creates a {@code GroupCard} with the given {@code Group} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"    public GroupCard(Group group, int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"        name.setText(group.getName().fullName);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"        if (!(other instanceof GroupCard)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"        // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"                \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jayasting98":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jayasting98":1,"-":101}},{"path":"src/main/java/seedu/address/ui/ListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":" * Panel containing the list of listable entities, such as persons, or groups.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"public class ListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    private static final String FXML \u003d \"ListPanel.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ListPanel.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    private List\u003c?\u003e lastModelList;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    private ListView\u003cListable\u003e listableListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"     * Creates a {@code ListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    public ListPanel() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"        lastModelList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"     * Sets the list of listable model entities that are currently displayed on the UI.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"     * Listable model entities are model entities that are intended to be displayed on the list panel, like a Person or","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"     * a Group.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"     * @param list The list of listable model entity instances.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"     * @param \u003cT\u003e The type of the listable model entity.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"    public \u003cT\u003e void setList(ObservableList\u003cT\u003e list) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        if (list.equals(lastModelList)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"            return;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"        lastModelList \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        ObservableList\u003cListable\u003e listableList \u003d list.stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"                .map(Listable::convertModelEntityToListable)","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"        listableListView.setItems(listableList);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"        listableListView.setCellFactory(listView -\u003e new ListViewCell());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Listable} using a {@code Card}.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    class ListViewCell extends ListCell\u003cListable\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"        protected void updateItem(Listable listable, boolean empty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"            super.updateItem(listable, empty);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"            if (empty || listable \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"                int displayedIndex \u003d getIndex() + 1;","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"                Card card \u003d listable.getCard(displayedIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"                setGraphic(card.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jayasting98":42,"-":33}},{"path":"src/main/java/seedu/address/ui/Listable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":" * A model entity that is intended to be displayed on the list panel, like a {@code Group}, or a {@code Person}.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"abstract class Listable {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    private static final Map\u003cClass\u003c?\u003e, Function\u003cObject, Listable\u003e\u003e modelEntityToListableMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    static {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"        modelEntityToListableMap.put(Person.class, person -\u003e convertPersonToListable((Person) person));","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"        modelEntityToListableMap.put(Group.class, group -\u003e convertGroupToListable((Group) group));","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"     * Converts a model entity to a {@code Listable} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"     * @param modelEntity The model entity.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"     * @param \u003cT\u003e The type of the model entity.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"     * @return The listable model entity.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    static \u003cT\u003e Listable convertModelEntityToListable(T modelEntity) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"        Class\u003c?\u003e modelEntityClass \u003d modelEntity.getClass();","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"        assert modelEntityToListableMap.containsKey(modelEntityClass);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"        return modelEntityToListableMap.get(modelEntityClass).apply(modelEntity);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"     * Gets the {@code Card} used to display the information of this {@code Listable} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"     * @param displayedIndex The index to display on the card.","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"     * @return The {@code Card} object of this {@code Listable} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"    abstract Card getCard(int displayedIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"    private static Listable convertPersonToListable(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        return new Listable() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"            @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"            Card getCard(int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"                return new PersonCard(person, displayedIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        };","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"    private static Listable convertGroupToListable(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"        return new Listable() {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"            @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"            Card getCard(int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"                return new GroupCard(group, displayedIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"        };","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jayasting98":60}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"    public static final String MESSAGE_TEMPLATE_APP_STATE_NOT_IMPLEMENTED \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"            \"The %s application state is not implemented.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    private ListPanel listPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"        listPanel \u003d new ListPanel();","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"        listPanel.setList(logic.getFilteredPersonList());","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"        listPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"jayasting98"},"content":"    public ListPanel getListPanel() {","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"jayasting98"},"content":"        return listPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"jayasting98"},"content":"            AppState nextAppState \u003d commandResult.getNextAppState();","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"jayasting98"},"content":"            changeDisplayForNextAppState(nextAppState);","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"jayasting98"},"content":"    private void changeDisplayForNextAppState(AppState nextAppState) {","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"jayasting98"},"content":"        switch (nextAppState) {","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"jayasting98"},"content":"        case HOME:","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"jayasting98"},"content":"            changeDisplayForHomeAppState();","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"jayasting98"},"content":"            break;","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"jayasting98"},"content":"        case GROUP_INFORMATION:","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"jayasting98"},"content":"            changeDisplayForGroupInformationAppState();","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"jayasting98"},"content":"            break;","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"jayasting98"},"content":"        default:","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"jayasting98"},"content":"            assert false : String.format(MESSAGE_TEMPLATE_APP_STATE_NOT_IMPLEMENTED, nextAppState);","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"jayasting98"},"content":"    private void changeDisplayForHomeAppState() {","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"jayasting98"},"content":"        listPanel.setList(logic.getFilteredPersonList());","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"jayasting98"},"content":"    private void changeDisplayForGroupInformationAppState() {","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"jayasting98"},"content":"        listPanel.setList(logic.getFilteredGroupList());","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jayasting98":33,"-":192}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"public class PersonCard extends Card {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    private static final String FXML \u003d \"PersonCard.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jayasting98":4,"-":72}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"jayasting98"},"content":"#filterField, #personWebpage {","lastModifiedDate":"2021-10-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jayasting98":1,"-":351}},{"path":"src/main/resources/view/GroupCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jayasting98":31}},{"path":"src/main/resources/view/ListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"  \u003cListView fx:id\u003d\"listableListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jayasting98":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"         title\u003d\"Thunder Cats\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"        \u003cVBox fx:id\u003d\"listPanel\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"thanwinnikki":1,"jayasting98":2,"-":58}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"persons\": {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    \"0-1\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : { }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":7,"-":10}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"persons\": {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : { }","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":5,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateGroupAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"{","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"persons\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    \"0-1\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"98765432\",","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    \"0-2\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"95352563\",","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"wall street\",","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    \"1-0\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"      \"groupMateIds\" : [ \"0-0\", \"0-1\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"    \"1-1\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"      \"groupMateIds\" : [ \"0-0\", \"0-1\", \"0-2\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jayasting98":35}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"persons\": {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    \"0-1\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : { }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":7,"-":11}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidGroupAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"{","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"persons\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    \"0-1\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"98765432\",","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"    \"1-0\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"CS2103@\",","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"      \"groupMateIds\" : [ \"0-0\", \"0-1\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jayasting98":24}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"persons\": {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : { }","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":5,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalGroupsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"{","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"  \"_comment\": \"AddressBook save file which contains the same Group values as in TypicalGroups#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"  \"persons\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"    \"0-1\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"98765432\",","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    \"0-2\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"95352563\",","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"wall street\",","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    \"0-3\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"10th street\",","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    \"0-4\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"9482224\",","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"werner@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"michegan ave\",","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"    \"0-5\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"9482427\",","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"lydia@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"little tokyo\",","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"    \"0-6\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"George Best\",","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"      \"phone\" : \"9482442\",","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"      \"email\" : \"anna@example.com\",","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"      \"address\" : \"4th street\",","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"    \"1-0\" : {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"CS2103T Project Group\",","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"      \"groupMateIds\" : [ \"0-0\", \"0-1\", \"0-2\" ]","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"    \"1-1\" : {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"      \"name\" : \"CS2101 Project Group\",","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"      \"groupMateIds\" : [ \"0-4\", \"0-5\", \"0-6\" ]","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jayasting98":64}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"  \"persons\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"    \"0-0\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"    \"0-1\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"    \"0-2\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    \"0-3\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    \"0-4\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"    \"0-5\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"    },","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"    \"0-6\" : {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"  },","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"  \"groups\" : { }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":17,"-":38}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"  \"recordsFilePath\" : \"records.json\"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jayasting98":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"  \"recordsFilePath\" : \"records.json\"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jayasting98":1,"-":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"asherhy"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"asherhy"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"asherhy"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"hungkhoaitay"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"hungkhoaitay"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"hungkhoaitay"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"asherhy"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"thanwinnikki"},"content":"        public void addToGroup(Group target, Set\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"thanwinnikki":7,"asherhy":22,"hungkhoaitay":4,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddGCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_INVALID;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"public class AddGCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"    private Set\u003cIndex\u003e emptySet \u003d Collections.emptySet();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"    public void constructor_nullGroupIndex_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddGCommand(null, emptySet));","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"    public void constructor_nullPersonIndexSet_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddGCommand(Index.fromZeroBased(0), null));","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"        Group validGroup \u003d model.getFilteredGroupList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cPerson\u003e personSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"        personSet.add(validPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cIndex\u003e personIndexesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"        personIndexesSet.add(INDEX_FIRST);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(INDEX_SECOND, personIndexesSet);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"        String expectedMessage \u003d String.format(AddGCommand.MESSAGE_SUCCESS, validGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"        expectedModel.addToGroup(validGroup, personSet);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"        assertCommandSuccess(addGCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cIndex\u003e personIndexesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"        personIndexesSet.add(INDEX_INVALID);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(INDEX_SECOND, personIndexesSet);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"        String expectedMessage \u003d AddGCommand.MESSAGE_INVALID_PERSON_INDEX;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"        assertCommandFailure(addGCommand, model, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"thanwinnikki"},"content":"    public void execute_invalidGroupIndex_throwsCommandException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cIndex\u003e personIndexesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"thanwinnikki"},"content":"        personIndexesSet.add(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"thanwinnikki"},"content":"        AddGCommand addGCommand \u003d new AddGCommand(Index.fromOneBased(30), personIndexesSet);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"thanwinnikki"},"content":"        String expectedMessage \u003d AddGCommand.MESSAGE_INVALID_GROUP_INDEX;","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"thanwinnikki"},"content":"        assertCommandFailure(addGCommand, model, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"thanwinnikki"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"thanwinnikki"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"thanwinnikki"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"thanwinnikki"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"thanwinnikki"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"thanwinnikki"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"thanwinnikki"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"thanwinnikki"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"thanwinnikki"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"thanwinnikki"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"thanwinnikki"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"thanwinnikki"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"thanwinnikki"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"thanwinnikki"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"thanwinnikki"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"thanwinnikki"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"thanwinnikki"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"thanwinnikki"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"thanwinnikki"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"thanwinnikki"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"thanwinnikki"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"thanwinnikki"},"content":"        public void addToGroup(Group target, Set\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"thanwinnikki"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"thanwinnikki"},"content":"     * A Model stub that always accept the group being added.","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"thanwinnikki"},"content":"    private class ModelStubAcceptingGroupAdded extends AddGCommandTest.ModelStub {","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"thanwinnikki"},"content":"        final ArrayList\u003cGroup\u003e groupsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"thanwinnikki"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"thanwinnikki"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"thanwinnikki"},"content":"            return groupsAdded.stream().anyMatch(group::isSameGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"thanwinnikki"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"thanwinnikki"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"thanwinnikki"},"content":"            groupsAdded.add(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"thanwinnikki"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"thanwinnikki"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"thanwinnikki":219}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"    public static final String VALID_NAME_SWIMMING \u003d \"Swimming Club\";","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"    public static final String VALID_NAME_TENNIS \u003d \"Tennis Club\";","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"    public static final String VALID_NAME_VOLLEYBALL \u003d \"Tennis Club\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"    public static final String VALID_GROUP_NAME_CS2101 \u003d \"CS2101\";","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"    public static final String NAME_DESC_TENNIS \u003d \" \" + PREFIX_NAME + VALID_NAME_TENNIS;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"    public static final String NAME_DESC_SWIMMING \u003d \" \" + PREFIX_NAME + VALID_NAME_SWIMMING;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"    public static final String NAME_DESC_VOLLEYBALL \u003d \" \" + PREFIX_NAME + VALID_NAME_VOLLEYBALL;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"    public static final String INDEX_DESC_PERSON1 \u003d \" \" + PREFIX_PERSON + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"    public static final String INDEX_DESC_GROUP1 \u003d \" \" + PREFIX_GROUP + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"wonyeji"},"content":"        List\u003cPerson\u003e expectedFilteredPersonList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"wonyeji"},"content":"        List\u003cGroup\u003e expectedFilteredGroupList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGroupList());","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"wonyeji"},"content":"        assertEquals(expectedFilteredPersonList, actualModel.getFilteredPersonList());","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"wonyeji"},"content":"        assertEquals(expectedFilteredGroupList, actualModel.getFilteredGroupList());","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"wonyeji"},"content":"     * Updates {@code model}\u0027s filtered person list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"wonyeji"},"content":"        model.updateFilteredPersonList(new PersonNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"wonyeji"},"content":"     * Updates {@code model}\u0027s filtered group list to show only the group at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"wonyeji"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"wonyeji"},"content":"    public static void showGroupAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"wonyeji"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGroupList().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"wonyeji"},"content":"        Group group \u003d model.getFilteredGroupList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"wonyeji"},"content":"        final String[] splitName \u003d group.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"wonyeji"},"content":"        model.updateFilteredGroupList(new GroupNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"wonyeji"},"content":"        assertEquals(1, model.getFilteredGroupList().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"thanwinnikki":6,"asherhy":4,"wonyeji":24,"-":123}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"    private Model modelWithGroups \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_validIndexUnfilteredListOfFirstGroups_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"hungkhoaitay"},"content":"        Group firstGroup \u003d modelWithGroups.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"hungkhoaitay"},"content":"        int initialSizeOfFirstGroup \u003d firstGroup.getPersons().asUnmodifiableObservableList().size();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"hungkhoaitay"},"content":"        Person personToDelete \u003d firstGroup.getPersons()","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"hungkhoaitay"},"content":"                .asUnmodifiableObservableList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"hungkhoaitay"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"hungkhoaitay"},"content":"        ModelManager expectedModel \u003d new ModelManager(modelWithGroups.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"hungkhoaitay"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandSuccess(deleteCommand, modelWithGroups, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"hungkhoaitay"},"content":"        int currentSizeOfFirstGroup \u003d firstGroup.getPersons().asUnmodifiableObservableList().size();","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"hungkhoaitay"},"content":"        // ensures that the first group also delete the person","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"hungkhoaitay"},"content":"        assertEquals(initialSizeOfFirstGroup - 1, currentSizeOfFirstGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"wonyeji"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"wonyeji"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"wonyeji"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"wonyeji"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"wonyeji"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"wonyeji"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wonyeji":12,"hungkhoaitay":26,"-":97}},{"path":"src/test/java/seedu/address/logic/commands/DeleteGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.commands.DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":" * {@code DeleteGroupCommand}.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"public class DeleteGroupCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_validIndexUnfilteredGroupList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"        // ensures that the filtered group list has at least one element","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(model.getFilteredGroupList().size() \u003e 0);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"hungkhoaitay"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"hungkhoaitay"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"hungkhoaitay"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"hungkhoaitay"},"content":"        showGroupAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"hungkhoaitay"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"hungkhoaitay"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"hungkhoaitay"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"hungkhoaitay"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"hungkhoaitay"},"content":"        showNoGroup(expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"hungkhoaitay"},"content":"        showGroupAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"hungkhoaitay"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"hungkhoaitay"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"hungkhoaitay"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteFirstGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteSecondGroupCommand \u003d new DeleteGroupCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"hungkhoaitay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(deleteFirstGroupCommand.equals(deleteFirstGroupCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"hungkhoaitay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"hungkhoaitay"},"content":"        DeleteGroupCommand deleteFirstGroupCommandCopy \u003d new DeleteGroupCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(deleteFirstGroupCommand.equals(deleteFirstGroupCommandCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"hungkhoaitay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(deleteFirstGroupCommand.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"hungkhoaitay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(deleteFirstGroupCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"hungkhoaitay"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(deleteFirstGroupCommand.equals(deleteSecondGroupCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"hungkhoaitay"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"hungkhoaitay"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"hungkhoaitay"},"content":"        model.updateFilteredGroupList(g -\u003e false);","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"hungkhoaitay":115}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"wonyeji"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"wonyeji"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"wonyeji"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"wonyeji"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"wonyeji"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"wonyeji"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"wonyeji"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"wonyeji"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"wonyeji"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"wonyeji"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"wonyeji"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"wonyeji"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"wonyeji":19,"-":154}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"wonyeji"},"content":"    private PersonNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"wonyeji"},"content":"        return new PersonNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wonyeji":9,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/FindGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_GROUPS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103T_GROUP_BUILDER;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"public class FindGroupCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"        GroupNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"                new GroupNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"        GroupNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"                new GroupNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"        FindGroupCommand findFirstCommand \u003d new FindGroupCommand(firstPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"        FindGroupCommand findSecondCommand \u003d new FindGroupCommand(secondPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"hungkhoaitay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"hungkhoaitay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"hungkhoaitay"},"content":"        FindGroupCommand findFirstCommandCopy \u003d new FindGroupCommand(firstPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"hungkhoaitay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"hungkhoaitay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"hungkhoaitay"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"hungkhoaitay"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"hungkhoaitay"},"content":"        GroupNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"hungkhoaitay"},"content":"        FindGroupCommand command \u003d new FindGroupCommand(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"hungkhoaitay"},"content":"        expectedModel.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"hungkhoaitay"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGroupList());","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"hungkhoaitay"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"hungkhoaitay"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"hungkhoaitay"},"content":"        GroupNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"CS1101 CS2103T ES2660\");","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"hungkhoaitay"},"content":"        FindGroupCommand command \u003d new FindGroupCommand(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"hungkhoaitay"},"content":"        expectedModel.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"hungkhoaitay"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"        assertEquals(Arrays.asList(CS2103T_GROUP_BUILDER.build()), model.getFilteredGroupList());","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"hungkhoaitay"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"hungkhoaitay"},"content":"     * Parses {@code userInput} into a {@code GroupNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"hungkhoaitay"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"hungkhoaitay"},"content":"    private GroupNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"hungkhoaitay"},"content":"        return new GroupNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"hungkhoaitay":79,"jayasting98":2}},{"path":"src/test/java/seedu/address/logic/commands/GroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"public class GroupCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    public void constructor_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupCommand(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"        ModelStubAcceptingGroupAdded modelStub \u003d new ModelStubAcceptingGroupAdded();","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"        CommandResult commandResult \u003d new GroupCommand(validGroup).execute(modelStub);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"        assertEquals(String.format(GroupCommand.MESSAGE_SUCCESS, validGroup), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"        assertEquals(Arrays.asList(validGroup), modelStub.groupsAdded);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"    public void execute_duplicateGroup_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(validGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"        ModelStub modelStub \u003d new ModelStubWithGroup(validGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"        assertThrows(CommandException.class, GroupCommand.MESSAGE_DUPLICATE_GROUP, () -\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"                groupCommand.execute(modelStub));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"        Group tennis \u003d new GroupBuilder().withName(\"Tennis\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"        Group swimming \u003d new GroupBuilder().withName(\"Swimming\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"        GroupCommand tennisGroupCommand \u003d new GroupCommand(tennis);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"        GroupCommand swimmingGroupCommand \u003d new GroupCommand(swimming);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"        assertTrue(tennisGroupCommand.equals(tennisGroupCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"        GroupCommand tennisGroupCommandCopy \u003d new GroupCommand(tennis);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"        assertTrue(tennisGroupCommand.equals(tennisGroupCommandCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"        assertFalse(tennisGroupCommand.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"        assertFalse(tennisGroupCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"        assertFalse(tennisGroupCommand.equals(swimmingGroupCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"asherhy"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"asherhy"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"asherhy"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"asherhy"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"asherhy"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"asherhy"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"asherhy"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"asherhy"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"asherhy"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"asherhy"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"asherhy"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"asherhy"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"asherhy"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"asherhy"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"asherhy"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"asherhy"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"asherhy"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"asherhy"},"content":"        public void addToGroup(Group target, Set\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"asherhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"asherhy"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"asherhy"},"content":"    private class ModelStubWithGroup extends GroupCommandTest.ModelStub {","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"asherhy"},"content":"        private final Group group;","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"asherhy"},"content":"        ModelStubWithGroup(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"asherhy"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"asherhy"},"content":"            this.group \u003d group;","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"asherhy"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"asherhy"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"asherhy"},"content":"            return this.group.isSameGroup(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":207,"author":{"gitId":"asherhy"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-10-16"},{"lineNumber":208,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":209,"author":{"gitId":"asherhy"},"content":"    private class ModelStubAcceptingGroupAdded extends GroupCommandTest.ModelStub {","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"asherhy"},"content":"        final ArrayList\u003cGroup\u003e groupsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":212,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"asherhy"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"asherhy"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"asherhy"},"content":"            return groupsAdded.stream().anyMatch(group::isSameGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":217,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":218,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"asherhy"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"asherhy"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"asherhy"},"content":"            groupsAdded.add(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"asherhy"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"asherhy"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"asherhy"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"asherhy":229}},{"path":"src/test/java/seedu/address/logic/commands/GroupsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"import seedu.address.logic.AppState;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":" * Contains integration tests (interaction with the Model) and unit tests for GroupsCommand.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"public class GroupsCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    private Model model;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"        assertCommandSuccess(new GroupsCommand(), model,","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"                new CommandResult.Builder(GroupsCommand.MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"                        .setNextAppState(AppState.GROUP_INFORMATION)","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"                        .build(),","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"                expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"        showGroupAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"        assertCommandSuccess(new GroupsCommand(), model,","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"                new CommandResult.Builder(GroupsCommand.MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"                        .setNextAppState(AppState.GROUP_INFORMATION)","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"                        .build(),","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"                expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wonyeji":37,"jayasting98":11}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wonyeji":2,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/MatesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.IsGroupPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.IsGroupMemberPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":" * {@code MatesCommand}.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"public class MatesCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"        Group groupToDisplay \u003d model.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate personPredicate \u003d prepareGroupMemberPredicate(groupToDisplay);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate groupPredicate \u003d prepareGroupPredicate(groupToDisplay);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"wonyeji"},"content":"        MatesCommand command \u003d new MatesCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"wonyeji"},"content":"        String expectedMessage \u003d MatesCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"        expectedModel.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"        expectedModel.updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"wonyeji"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"wonyeji"},"content":"        MatesCommand command \u003d new MatesCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"wonyeji"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"wonyeji"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"wonyeji"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"wonyeji"},"content":"        Group groupToDisplay \u003d model.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate personPredicate \u003d prepareGroupMemberPredicate(groupToDisplay);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate groupPredicate \u003d prepareGroupPredicate(groupToDisplay);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"wonyeji"},"content":"        MatesCommand command \u003d new MatesCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"wonyeji"},"content":"        String expectedMessage \u003d MatesCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"wonyeji"},"content":"        expectedModel.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"wonyeji"},"content":"        expectedModel.updateFilteredGroupList(groupPredicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"wonyeji"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"wonyeji"},"content":"        showGroupAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"wonyeji"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"wonyeji"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"wonyeji"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"wonyeji"},"content":"        MatesCommand command \u003d new MatesCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"wonyeji"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"wonyeji"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"wonyeji"},"content":"        MatesCommand matesFirstCommand \u003d new MatesCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"wonyeji"},"content":"        MatesCommand matesSecondCommand \u003d new MatesCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"wonyeji"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"wonyeji"},"content":"        assertTrue(matesFirstCommand.equals(matesFirstCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"wonyeji"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"wonyeji"},"content":"        MatesCommand matesFirstCommandCopy \u003d new MatesCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"wonyeji"},"content":"        assertTrue(matesFirstCommand.equals(matesFirstCommandCopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"wonyeji"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"wonyeji"},"content":"        assertFalse(matesFirstCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"wonyeji"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"wonyeji"},"content":"        assertFalse(matesFirstCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"wonyeji"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"wonyeji"},"content":"        assertFalse(matesFirstCommand.equals(matesSecondCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"wonyeji"},"content":"     * Parses {@code userInput} into a {@code IsGroupMemberPredicate}.","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"wonyeji"},"content":"    private IsGroupMemberPredicate prepareGroupMemberPredicate(Group userInput) {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"wonyeji"},"content":"        return new IsGroupMemberPredicate(userInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"wonyeji"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"wonyeji"},"content":"     * Parses {@code userInput} into a {@code IsGroupPredicate}.","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"wonyeji"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"wonyeji"},"content":"    private IsGroupPredicate prepareGroupPredicate(Group userInput) {","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"wonyeji"},"content":"        return new IsGroupPredicate(userInput);","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wonyeji":127}},{"path":"src/test/java/seedu/address/logic/commands/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.IsGroupPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.person.IsGroupMemberPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"public class RemoveCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    public void execute_validIndexFilteredList_success() throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"        // identify group to have its person removed from","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"        Group group \u003d getFirstGroup(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"        // set the filtered list for both groups and person","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"        setFilteredList(model, group);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"        // set person to remove as the first person","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"        Person personToRemove \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"        String expectedMessage \u003d String.format(RemoveCommand.MESSAGE_REMOVE_PERSON_SUCCESS, personToRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"        setFilteredList(expectedModel, getFirstGroup(expectedModel));","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"        getFirstGroup(expectedModel).getPersons().remove(personToRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"        setFilteredList(expectedModel, getFirstGroup(expectedModel));","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"        assertCommandSuccess(removeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"        Group group \u003d model.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"        // set the filtered list for both groups and person","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"        setFilteredList(model, group);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"        assertCommandFailure(removeCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"        RemoveCommand removeFirstCommand \u003d new RemoveCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"        RemoveCommand removeSecondCommand \u003d new RemoveCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"        assertTrue(removeFirstCommand.equals(removeFirstCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"        RemoveCommand removeFirstCommandCopy \u003d new RemoveCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"        assertTrue(removeFirstCommand.equals(removeFirstCommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"        assertFalse(removeFirstCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"asherhy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"        assertFalse(removeFirstCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"        assertFalse(removeFirstCommand.equals(removeSecondCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"asherhy"},"content":"    public Group getFirstGroup(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"asherhy"},"content":"        return model.getFilteredGroupList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"    public void setFilteredList(Model model, Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"        model.updateFilteredPersonList(new IsGroupMemberPredicate(group));","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"asherhy"},"content":"        model.updateFilteredGroupList(new IsGroupPredicate(group));","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"asherhy":97}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"thanwinnikki":1,"-":140}},{"path":"src/test/java/seedu/address/logic/parser/AddGCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_DESC_GROUP1;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_DESC_PERSON1;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.logic.commands.AddGCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"public class AddGCommandParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"    private AddGCommandParser parser \u003d new AddGCommandParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"        Set\u003cIndex\u003e personIndexesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"        personIndexesSet.add(INDEX_FIRST);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"                parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"                INDEX_DESC_PERSON1 + INDEX_DESC_GROUP1,","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"                new AddGCommand(INDEX_FIRST, personIndexesSet)","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"        );","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"                parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"                \"hello\",","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGCommand.MESSAGE_USAGE)","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"        );","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"thanwinnikki":40}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.GroupsCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.MatesCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"import seedu.address.testutil.GroupUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"wonyeji"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"wonyeji"},"content":"    public void parseCommand_mates() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"wonyeji"},"content":"        MatesCommand command \u003d (MatesCommand) parser.parseCommand(","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"wonyeji"},"content":"                MatesCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"wonyeji"},"content":"        assertEquals(new MatesCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"wonyeji"},"content":"        assertEquals(new FindCommand(new PersonNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"asherhy"},"content":"    public void parseCommand_group() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"        GroupCommand command \u003d (GroupCommand) parser.parseCommand(GroupUtil.getGroupCommand(group));","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"        assertEquals(new GroupCommand(group), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"wonyeji"},"content":"    public void parseCommand_groups() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"wonyeji"},"content":"        assertTrue(parser.parseCommand(GroupsCommand.COMMAND_WORD) instanceof GroupsCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"wonyeji"},"content":"        assertTrue(parser.parseCommand(GroupsCommand.COMMAND_WORD + \" 3\") instanceof GroupsCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"asherhy"},"content":"    public void parseCommand_remove() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"asherhy"},"content":"        RemoveCommand command \u003d (RemoveCommand) parser.parseCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"asherhy"},"content":"                RemoveCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"asherhy"},"content":"        assertEquals(new RemoveCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"asherhy":20,"wonyeji":20,"-":96}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wonyeji":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"public class DeleteGroupCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"    private DeleteGroupCommandParser parser \u003d new DeleteGroupCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"        assertParseSuccess(parser, \"1\", new DeleteGroupCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"                parser,","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"                \"a\",","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"        );","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"hungkhoaitay":36}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"wonyeji"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"wonyeji"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"wonyeji"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"wonyeji"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"wonyeji"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"wonyeji"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"thanwinnikki":1,"wonyeji":9,"-":201}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"                new FindCommand(new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"wonyeji":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/FindGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hungkhoaitay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"hungkhoaitay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"hungkhoaitay"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"hungkhoaitay"},"content":"public class FindGroupCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"hungkhoaitay"},"content":"    private FindGroupCommandParser parser \u003d new FindGroupCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"hungkhoaitay"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"hungkhoaitay"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"hungkhoaitay"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"hungkhoaitay"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"hungkhoaitay"},"content":"        FindGroupCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"hungkhoaitay"},"content":"                new FindGroupCommand(new GroupNameContainsKeywordsPredicate(Arrays.asList(\"CS2100\", \"ES2660\")));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"hungkhoaitay"},"content":"        assertParseSuccess(parser, \"CS2100 ES2660\", expectedFindCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"        assertParseSuccess(parser, \" \\n CS2100 \\n \\t ES2660  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"hungkhoaitay":35}},{"path":"src/test/java/seedu/address/logic/parser/GroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TENNIS;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_VOLLEYBALL;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TENNIS;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"import seedu.address.testutil.TypicalGroups;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"public class GroupCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    private GroupCommandParser parser \u003d new GroupCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"        Group expectedGroup \u003d TypicalGroups.VOLLEYBALL.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"        assertParseSuccess(parser, NAME_DESC_VOLLEYBALL, new GroupCommand(expectedGroup));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"        assertParseFailure(parser, VALID_NAME_TENNIS, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"        // invalid name","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_TENNIS,","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"asherhy":48}},{"path":"src/test/java/seedu/address/logic/parser/MatesCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import seedu.address.logic.commands.MatesCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":" * outside of the MatesCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":" * same path through the MatesCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"public class MatesCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    private MatesCommandParser parser \u003d new MatesCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"    public void parse_validArgs_returnsMatesCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"        assertParseSuccess(parser, \"1\", new MatesCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MatesCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wonyeji":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"thanwinnikki":1,"wonyeji":3,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/RemoveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"public class RemoveCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    private RemoveCommandParser parser \u003d new RemoveCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    public void parse_validArgs_returnsRemoveCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"        assertParseSuccess(parser, \"1\", new RemoveCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"asherhy":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"thanwinnikki"},"content":"        private final ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"thanwinnikki"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"thanwinnikki"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"thanwinnikki"},"content":"            return groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"thanwinnikki":7,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.person.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"        userPrefs.setRecordsFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        userPrefs.setRecordsFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"wonyeji"},"content":"        modelManager.updateFilteredPersonList(new PersonNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"        differentUserPrefs.setRecordsFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wonyeji":2,"jayasting98":3,"-":127}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setRecordsFilePath(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jayasting98":1,"-":20}},{"path":"src/test/java/seedu/address/model/group/GroupNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"public class GroupNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"        GroupNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"                new GroupNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"        GroupNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"                new GroupNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"        GroupNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"                new GroupNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"wonyeji"},"content":"        // different Group -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"wonyeji"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"        // One keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"        GroupNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"                new GroupNameContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"        assertTrue(predicate.test(new GroupBuilder().withName(\"CS2103T CS2101\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"wonyeji"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new GroupNameContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"CS2101\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"wonyeji"},"content":"        assertTrue(predicate.test(new GroupBuilder().withName(\"CS2103T CS2101\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"wonyeji"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new GroupNameContainsKeywordsPredicate(Arrays.asList(\"ES2660\", \"CS2103T\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"wonyeji"},"content":"        assertTrue(predicate.test(new GroupBuilder().withName(\"CS2103T CS2101\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"wonyeji"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new GroupNameContainsKeywordsPredicate(Arrays.asList(\"cS2103t\", \"Cs2101\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"wonyeji"},"content":"        assertTrue(predicate.test(new GroupBuilder().withName(\"CS2103T CS2101\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"wonyeji"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"wonyeji"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"wonyeji"},"content":"        GroupNameContainsKeywordsPredicate predicate \u003d new GroupNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"wonyeji"},"content":"        assertFalse(predicate.test(new GroupBuilder().withName(\"CS2101\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"wonyeji"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new GroupNameContainsKeywordsPredicate(Arrays.asList(\"ES2660\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"        assertFalse(predicate.test(new GroupBuilder().withName(\"CS2101 CS2103T\").build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"wonyeji"},"content":"        // Keywords match members, but does not match name","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new GroupNameContainsKeywordsPredicate(Arrays.asList(\"ALICE\", \"BENSON\", \"CARL\", \"DANIEL\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"wonyeji"},"content":"        assertFalse(predicate.test(new GroupBuilder().withName(\"CS2103T\")","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"wonyeji"},"content":"                .withMembers(ALICE, BENSON, CARL, DANIEL).build()));","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wonyeji":83}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_CS2101;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalGroups.CS2101_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"hungkhoaitay"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103T_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"public class GroupTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"hungkhoaitay"},"content":"    private Group groupCS2103T \u003d CS2103T_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"hungkhoaitay"},"content":"    private Group groupCS2101 \u003d CS2101_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"hungkhoaitay"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e group.getPersons()","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"                .asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"    public void isSameGroup() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(groupCS2103T.isSameGroup(groupCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.isSameGroup(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"        // same group name, group members different -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"        Group editedGroupCS2103T \u003d new GroupBuilder(groupCS2101).withName(\"CS2103T Project Group\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(groupCS2103T.isSameGroup(editedGroupCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"        // different group name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"hungkhoaitay"},"content":"        editedGroupCS2103T \u003d new GroupBuilder(groupCS2103T).withName(\"CS2101\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.isSameGroup(editedGroupCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"        // group name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"hungkhoaitay"},"content":"        Group editedCS2101 \u003d new GroupBuilder(groupCS2101).withName(VALID_GROUP_NAME_CS2101.toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"                .build();","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2101.isSameGroup(editedCS2101));","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"        // group name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"        String groupNameWithTrailingSpaces \u003d VALID_GROUP_NAME_CS2101 + \" \";","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"hungkhoaitay"},"content":"        editedCS2101 \u003d new GroupBuilder(groupCS2101).withName(groupNameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2101.isSameGroup(editedCS2101));","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"        //same object","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(groupCS2103T.equals(groupCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"hungkhoaitay"},"content":"        Group copyCS2103T \u003d new GroupBuilder(groupCS2103T).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"hungkhoaitay"},"content":"        assertTrue(groupCS2103T.equals(copyCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.equals(6));","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.equals(groupCS2101));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"hungkhoaitay"},"content":"        Group editedCS2103T \u003d new GroupBuilder(groupCS2103T).withName(\"ES2660\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.equals(editedCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"thanwinnikki"},"content":"        // different group members -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"hungkhoaitay"},"content":"        editedCS2103T \u003d new GroupBuilder(groupCS2103T).withMembers(CARL).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"hungkhoaitay"},"content":"        assertFalse(groupCS2103T.equals(editedCS2103T));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"thanwinnikki":59,"hungkhoaitay":25}},{"path":"src/test/java/seedu/address/model/group/IsGroupPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalGroups.CS2101_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103T_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"public class IsGroupPredicateTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"    private Group firstPredicateGroup \u003d CS2103T_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"    private Group secondPredicateGroup \u003d CS2101_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"                new IsGroupPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"                new IsGroupPredicate(secondPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"                new IsGroupPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"        // different Group -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"    public void test_isGroup_returnsTrue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate predicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"                new IsGroupPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wonyeji"},"content":"        assertTrue(predicate.test(CS2103T_GROUP_BUILDER.build()));","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"    public void test_isNotGroup_returnsFalse() {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wonyeji"},"content":"        IsGroupPredicate predicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"                new IsGroupPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"        assertFalse(predicate.test(CS2101_GROUP_BUILDER.build()));","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wonyeji":53}},{"path":"src/test/java/seedu/address/model/group/UniqueGroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalGroups.CS2101_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103T_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"public class UniqueGroupListTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    private final UniqueGroupList uniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"    private final Group CS2103T \u003d CS2103T_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"    private final Group CS2101 \u003d CS2101_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.contains(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"    public void contains_groupNotInList_returnsFalse() {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"        assertFalse(uniqueGroupList.contains(CS2103T_GROUP_BUILDER.build()));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"    public void contains_groupInList_returnsTrue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T_GROUP_BUILDER.build());","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"        assertTrue(uniqueGroupList.contains(CS2103T_GROUP_BUILDER.build()));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"    public void contains_groupWithSameNameField_returnsTrue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"        Group editedCS2103T \u003d new GroupBuilder(CS2103T).withMembers(CARL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"        assertTrue(uniqueGroupList.contains(editedCS2103T));","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"    public void add_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.add(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"    public void add_duplicateGroup_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.add(CS2103T));","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroup_nullTargetGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(null, CS2103T));","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"    public void setPerson_nullEditedGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(CS2103T, null));","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"    public void setPerson_targetGroupNotInList_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.setGroup(CS2103T, CS2103T));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroup_editedGroupIsSameGroup_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.setGroup(CS2103T, CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"thanwinnikki"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"thanwinnikki"},"content":"        expectedUniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"thanwinnikki"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroup_editedGroupHasSameIdentity_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"thanwinnikki"},"content":"        Group editedGroup \u003d new GroupBuilder(CS2103T).withMembers(CARL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.setGroup(CS2103T, editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"thanwinnikki"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"thanwinnikki"},"content":"        expectedUniqueGroupList.add(editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"thanwinnikki"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroup_editedGroupHasDifferentIdentity_success() { //todo changes after Yeji merge","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.setGroup(CS2103T, CS2101);","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"thanwinnikki"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"thanwinnikki"},"content":"        expectedUniqueGroupList.add(CS2101);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"thanwinnikki"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroup_editedGroupHasNonUniqueIdentity_throwsDuplicatePersonException() { //todo changes after Yeji","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2101);","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroup(CS2103T, CS2101));","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"thanwinnikki"},"content":"    public void remove_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.remove(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"thanwinnikki"},"content":"    public void remove_groupDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.remove(CS2103T));","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"thanwinnikki"},"content":"    public void remove_existingGroup_removesGroup() {","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.remove(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"thanwinnikki"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"thanwinnikki"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups_nullUniqueGroupList_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((UniqueGroupList) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups_uniqueGroupList_replacesOwnListWithProvidedUniqueGroupList() { //todo change","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"thanwinnikki"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"thanwinnikki"},"content":"        expectedUniqueGroupList.add(CS2101);","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.setGroups(expectedUniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"thanwinnikki"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((List\u003cGroup\u003e) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() { // todo change","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.add(CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"thanwinnikki"},"content":"        List\u003cGroup\u003e groupList \u003d Collections.singletonList(CS2101);","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"thanwinnikki"},"content":"        uniqueGroupList.setGroups(groupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"thanwinnikki"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"thanwinnikki"},"content":"        expectedUniqueGroupList.add(CS2101);","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"thanwinnikki"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"thanwinnikki"},"content":"    public void setGroups_listWithDuplicateGroups_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"thanwinnikki"},"content":"        List\u003cGroup\u003e listWithDuplicateGroups \u003d Arrays.asList(CS2103T, CS2103T);","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroups(listWithDuplicateGroups));","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"thanwinnikki"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"thanwinnikki"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"thanwinnikki"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"thanwinnikki"},"content":"                uniqueGroupList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"thanwinnikki":171}},{"path":"src/test/java/seedu/address/model/person/IsGroupMemberPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wonyeji"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalGroups.CS2101_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalGroups.CS2103T_GROUP_BUILDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"public class IsGroupMemberPredicateTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"    private Group firstPredicateGroup \u003d CS2103T_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"    private Group secondPredicateGroup \u003d CS2101_GROUP_BUILDER.build();","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wonyeji"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"                new IsGroupMemberPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"                new IsGroupMemberPredicate(secondPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wonyeji"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wonyeji"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wonyeji"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"                new IsGroupMemberPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wonyeji"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"wonyeji"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wonyeji"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wonyeji"},"content":"        // different Group -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wonyeji"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wonyeji"},"content":"    public void test_isGroupMember_returnsTrue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate predicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"                new IsGroupMemberPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"    public void test_isNotGroupMember_returnsFalse() {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wonyeji"},"content":"        IsGroupMemberPredicate predicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wonyeji"},"content":"                new IsGroupMemberPredicate(firstPredicateGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"wonyeji"},"content":"        assertFalse(predicate.test(HOON));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wonyeji"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wonyeji":57}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"thanwinnikki":2,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"// todo","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"public class PersonNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"wonyeji"},"content":"        PersonNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"wonyeji"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"wonyeji"},"content":"        predicate \u003d new PersonNameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"wonyeji"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wonyeji":18,"-":63}},{"path":"src/test/java/seedu/address/storage/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"public class IdTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"    public void parse_noDelimiter_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"12\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    public void parse_delimiterAtStart_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"-1-2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"    public void parse_delimiterAtEnd_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1-2-\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"    public void parse_extraDelimiters_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1--2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1---2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"    public void parse_extraValues_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1-2-3\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1-2-3-5\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"    public void parse_invalidDateCharacters_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"!@#-2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"    public void parse_invalidTimeCharacters_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1-!@#\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"    public void parse_invalidDateRadix_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"g-2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    public void parse_invalidTimeRadix_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1-g\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"    public void parse_invalidDateRange_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"550a1b48f8-2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"    public void parse_invalidTimeRange_throwsIllegalValueException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e Id.parse(\"1-4e94914f0000\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"        assertNotEquals(null, Id.generateId());","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"        assertNotEquals(new IdTest(), Id.generateId());","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"    public void equals_sameReference_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"        Id id \u003d Id.generateId();","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"        assertEquals(id, id);","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"    public void equals_differentDateTime_returnsFalse() throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"        Id id1 \u003d Id.parse(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"        Id id2 \u003d Id.parse(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"        assertNotEquals(id1, id2);","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"    public void equals_sameDateTime_returnsTrue() throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"        Id id1 \u003d Id.parse(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"        Id id2 \u003d Id.parse(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"        assertEquals(id1, id2);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"    public void generateUniqueId_multipleIds_generatesUniqueId() {","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"        Set\u003cId\u003e idSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"        Id id1 \u003d Id.generateUniqueId(idSet);","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"        idSet.add(id1);","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"            Id id2 \u003d Id.generateUniqueId(idSet);","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"            idSet.add(id2);","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"            assertNotEquals(id1, id2);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"            id1 \u003d id2;","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jayasting98":122}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayasting98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jayasting98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jayasting98"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.storage.JsonAdaptedGroup.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"jayasting98"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jayasting98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jayasting98"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jayasting98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jayasting98"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"jayasting98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jayasting98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jayasting98"},"content":"public class JsonAdaptedGroupTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_validGroupDetails_returnsGroup() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"1-2\");","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3-5\"), CARL);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"jayasting98"},"content":"        Name groupName \u003d new Name(\"group\");","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"jayasting98"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"jayasting98"},"content":"        group.add(ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"jayasting98"},"content":"        group.add(BENSON);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"jayasting98"},"content":"        group.add(CARL);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"        group.add(DANIEL);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group, jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d null;","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"T3@m\";","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_nullGroupMateIds_returnsGroupWithNoGroupMates() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d null;","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"jayasting98"},"content":"        Name groupName \u003d new Name(\"group\");","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"jayasting98"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group, jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_emptyGroupMateIds_returnsGroupWithNoGroupMates() throws IllegalValueException {","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"jayasting98"},"content":"        Name groupName \u003d new Name(\"group\");","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"jayasting98"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group, jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_invalidGroupMateIdFormat_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"g-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3-5\"), CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d Id.MESSAGE_MALFORMED_ID;","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_missingGroupMateId_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d JsonAdaptedGroup.MESSAGE_NO_SUCH_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_duplicateGroupMateId_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3-5\"), CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d JsonAdaptedGroup.MESSAGE_DUPLICATE_GROUP_MATE;","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_differentGroupMateIdReferencingSameGroupMate_throwsIllegalValueException()","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"jayasting98"},"content":"            throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3-5\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"jayasting98"},"content":"        String expectedMessage \u003d JsonAdaptedGroup.MESSAGE_DUPLICATE_GROUP_MATE;","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_groupMateOrdering_returnsGroupWithCorrectGroupMateOrdering() throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3-5\"), CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"jayasting98"},"content":"        Name groupName \u003d new Name(\"group\");","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"jayasting98"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"jayasting98"},"content":"        group.add(ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"jayasting98"},"content":"        group.add(BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"jayasting98"},"content":"        group.add(CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"jayasting98"},"content":"        group.add(DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"jayasting98"},"content":"        assertNotEquals(group, jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"jayasting98"},"content":"        groupName \u003d new Name(\"group\");","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"jayasting98"},"content":"        group \u003d new Group(groupName);","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"jayasting98"},"content":"        group.add(DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"jayasting98"},"content":"        group.add(CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"jayasting98"},"content":"        group.add(BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"jayasting98"},"content":"        group.add(ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group, jsonAdaptedGroup.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":207,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":208,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":209,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_respectiveGroupMatesOnly_returnsGroupWithOnlyRespectiveGroupMates()","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"jayasting98"},"content":"            throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"jayasting98"},"content":"        Map\u003cId, Person\u003e idToPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":212,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"0-1\"), ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"1-2\"), BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3-5\"), CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"8-d\"), DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"15-22\"), ELLE);","lastModifiedDate":"2021-10-16"},{"lineNumber":217,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"37-59\"), FIONA);","lastModifiedDate":"2021-10-16"},{"lineNumber":218,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"90-e9\"), GEORGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"179-262\"), HOON);","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"jayasting98"},"content":"        idToPersonMap.put(Id.parse(\"3db-63d\"), IDA);","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"jayasting98"},"content":"        String group1NameString \u003d \"group1\";","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e group1MateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"jayasting98"},"content":"        group1MateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"jayasting98"},"content":"        group1MateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"jayasting98"},"content":"        group1MateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"jayasting98"},"content":"        group1MateIds.add(\"37-59\");","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup1 \u003d new JsonAdaptedGroup.Builder(group1NameString, group1MateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"jayasting98"},"content":"        Name group1Name \u003d new Name(\"group1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"jayasting98"},"content":"        Group group1 \u003d new Group(group1Name);","lastModifiedDate":"2021-10-16"},{"lineNumber":232,"author":{"gitId":"jayasting98"},"content":"        group1.add(ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":233,"author":{"gitId":"jayasting98"},"content":"        group1.add(CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"jayasting98"},"content":"        group1.add(DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"jayasting98"},"content":"        group1.add(FIONA);","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":237,"author":{"gitId":"jayasting98"},"content":"        String group2NameString \u003d \"group2\";","lastModifiedDate":"2021-10-16"},{"lineNumber":238,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e group2MateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":239,"author":{"gitId":"jayasting98"},"content":"        group2MateIds.add(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":240,"author":{"gitId":"jayasting98"},"content":"        group2MateIds.add(\"179-262\");","lastModifiedDate":"2021-10-16"},{"lineNumber":241,"author":{"gitId":"jayasting98"},"content":"        group2MateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":242,"author":{"gitId":"jayasting98"},"content":"        group2MateIds.add(\"37-59\");","lastModifiedDate":"2021-10-16"},{"lineNumber":243,"author":{"gitId":"jayasting98"},"content":"        group2MateIds.add(\"15-22\");","lastModifiedDate":"2021-10-16"},{"lineNumber":244,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup2 \u003d new JsonAdaptedGroup.Builder(group2NameString, group2MateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":245,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":246,"author":{"gitId":"jayasting98"},"content":"        Name group2Name \u003d new Name(\"group2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":247,"author":{"gitId":"jayasting98"},"content":"        Group group2 \u003d new Group(group2Name);","lastModifiedDate":"2021-10-16"},{"lineNumber":248,"author":{"gitId":"jayasting98"},"content":"        group2.add(BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":249,"author":{"gitId":"jayasting98"},"content":"        group2.add(HOON);","lastModifiedDate":"2021-10-16"},{"lineNumber":250,"author":{"gitId":"jayasting98"},"content":"        group2.add(CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":251,"author":{"gitId":"jayasting98"},"content":"        group2.add(FIONA);","lastModifiedDate":"2021-10-16"},{"lineNumber":252,"author":{"gitId":"jayasting98"},"content":"        group2.add(ELLE);","lastModifiedDate":"2021-10-16"},{"lineNumber":253,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":254,"author":{"gitId":"jayasting98"},"content":"        String group3NameString \u003d \"group3\";","lastModifiedDate":"2021-10-16"},{"lineNumber":255,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e group3MateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":256,"author":{"gitId":"jayasting98"},"content":"        group3MateIds.add(\"3db-63d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":257,"author":{"gitId":"jayasting98"},"content":"        group3MateIds.add(\"179-262\");","lastModifiedDate":"2021-10-16"},{"lineNumber":258,"author":{"gitId":"jayasting98"},"content":"        group3MateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":259,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup3 \u003d new JsonAdaptedGroup.Builder(group3NameString, group3MateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":260,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":261,"author":{"gitId":"jayasting98"},"content":"        Name group3Name \u003d new Name(\"group3\");","lastModifiedDate":"2021-10-16"},{"lineNumber":262,"author":{"gitId":"jayasting98"},"content":"        Group group3 \u003d new Group(group3Name);","lastModifiedDate":"2021-10-16"},{"lineNumber":263,"author":{"gitId":"jayasting98"},"content":"        group3.add(IDA);","lastModifiedDate":"2021-10-16"},{"lineNumber":264,"author":{"gitId":"jayasting98"},"content":"        group3.add(HOON);","lastModifiedDate":"2021-10-16"},{"lineNumber":265,"author":{"gitId":"jayasting98"},"content":"        group3.add(ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":266,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":267,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group1, jsonAdaptedGroup1.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":268,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group2, jsonAdaptedGroup2.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":269,"author":{"gitId":"jayasting98"},"content":"        assertEquals(group3, jsonAdaptedGroup3.toModelType(idToPersonMap));","lastModifiedDate":"2021-10-16"},{"lineNumber":270,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":271,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":272,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":273,"author":{"gitId":"jayasting98"},"content":"    public void jsonAdaptedGroupBuilder_sameGroupDifferentConstructors_returnsSameJsonAdaptedGroup()","lastModifiedDate":"2021-10-16"},{"lineNumber":274,"author":{"gitId":"jayasting98"},"content":"            throws IllegalValueException {","lastModifiedDate":"2021-10-16"},{"lineNumber":275,"author":{"gitId":"jayasting98"},"content":"        Map\u003cPerson, Id\u003e personToIdMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":276,"author":{"gitId":"jayasting98"},"content":"        personToIdMap.put(ALICE, Id.parse(\"0-1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":277,"author":{"gitId":"jayasting98"},"content":"        personToIdMap.put(BENSON, Id.parse(\"1-2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":278,"author":{"gitId":"jayasting98"},"content":"        personToIdMap.put(CARL, Id.parse(\"3-5\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":279,"author":{"gitId":"jayasting98"},"content":"        personToIdMap.put(DANIEL, Id.parse(\"8-d\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":280,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":281,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":282,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":283,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"0-1\");","lastModifiedDate":"2021-10-16"},{"lineNumber":284,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"1-2\");","lastModifiedDate":"2021-10-16"},{"lineNumber":285,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"3-5\");","lastModifiedDate":"2021-10-16"},{"lineNumber":286,"author":{"gitId":"jayasting98"},"content":"        groupMateIds.add(\"8-d\");","lastModifiedDate":"2021-10-16"},{"lineNumber":287,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroupFromJson \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":289,"author":{"gitId":"jayasting98"},"content":"        Name groupName \u003d new Name(\"group\");","lastModifiedDate":"2021-10-16"},{"lineNumber":290,"author":{"gitId":"jayasting98"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2021-10-16"},{"lineNumber":291,"author":{"gitId":"jayasting98"},"content":"        group.add(ALICE);","lastModifiedDate":"2021-10-16"},{"lineNumber":292,"author":{"gitId":"jayasting98"},"content":"        group.add(BENSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":293,"author":{"gitId":"jayasting98"},"content":"        group.add(CARL);","lastModifiedDate":"2021-10-16"},{"lineNumber":294,"author":{"gitId":"jayasting98"},"content":"        group.add(DANIEL);","lastModifiedDate":"2021-10-16"},{"lineNumber":295,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroupFromModel \u003d new JsonAdaptedGroup.Builder(group, personToIdMap)","lastModifiedDate":"2021-10-16"},{"lineNumber":296,"author":{"gitId":"jayasting98"},"content":"                .build();","lastModifiedDate":"2021-10-16"},{"lineNumber":297,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":298,"author":{"gitId":"jayasting98"},"content":"        assertEquals(jsonAdaptedGroupFromJson, jsonAdaptedGroupFromModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":299,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":300,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":301,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":302,"author":{"gitId":"jayasting98"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":303,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":304,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":305,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":306,"author":{"gitId":"jayasting98"},"content":"        assertNotEquals(null, jsonAdaptedGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":307,"author":{"gitId":"jayasting98"},"content":"        assertNotEquals(new JsonAdaptedGroupTest(), jsonAdaptedGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":308,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":309,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":310,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":311,"author":{"gitId":"jayasting98"},"content":"    public void equals_sameReference_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":312,"author":{"gitId":"jayasting98"},"content":"        String groupNameString \u003d \"group\";","lastModifiedDate":"2021-10-16"},{"lineNumber":313,"author":{"gitId":"jayasting98"},"content":"        List\u003cString\u003e groupMateIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":314,"author":{"gitId":"jayasting98"},"content":"        JsonAdaptedGroup jsonAdaptedGroup \u003d new JsonAdaptedGroup.Builder(groupNameString, groupMateIds).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":315,"author":{"gitId":"jayasting98"},"content":"        assertEquals(jsonAdaptedGroup, jsonAdaptedGroup);","lastModifiedDate":"2021-10-16"},{"lineNumber":316,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":317,"author":{"gitId":"jayasting98"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jayasting98":317}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"thanwinnikki":1,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jayasting98"},"content":"import seedu.address.testutil.TypicalGroups;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jayasting98"},"content":"    private static final Path TYPICAL_GROUPS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGroupsAddressBook.json\");","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"jayasting98"},"content":"    private static final Path INVALID_GROUP_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGroupAddressBook.json\");","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"jayasting98"},"content":"    private static final Path DUPLICATE_GROUP_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGroupAddressBook.json\");","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_typicalGroupsFile_success() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"jayasting98"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_GROUPS_FILE,","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jayasting98"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"jayasting98"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"jayasting98"},"content":"        AddressBook typicalGroupsAddressBook \u003d TypicalGroups.getTypicalAddressBookWithGroups();","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"jayasting98"},"content":"        assertEquals(addressBookFromFile, typicalGroupsAddressBook);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_invalidGroupFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"jayasting98"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GROUP_FILE,","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"jayasting98"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"jayasting98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"jayasting98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"jayasting98"},"content":"    public void toModelType_duplicateGroups_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"jayasting98"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GROUP_FILE,","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jayasting98"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"jayasting98"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_GROUP,","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"jayasting98"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"jayasting98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jayasting98":27,"-":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jayasting98"},"content":"        userPrefs.setRecordsFilePath(Paths.get(\"records.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jayasting98":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"thanwinnikki":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":" * A utility class to help with building Group objects.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"    public static final String DEFAULT_GROUP_NAME \u003d \"CS2103T\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"    private Name name;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"    private UniquePersonList persons;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"        name \u003d new Name(DEFAULT_GROUP_NAME);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"     * Initializes the GroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"        name \u003d groupToCopy.getName();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"        persons \u003d groupToCopy.getPersons();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"     * Sets the {@code Name} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"    public GroupBuilder withName(String name) {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"        return this;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"     * Sets the {@code UniquePersonList} of the {@code Group} to contain specified {@code Person}.","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"     * @return","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"    public GroupBuilder withMembers(Person... personList) {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"        UniquePersonList editedList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"        Arrays.stream(personList).forEach(person -\u003e editedList.add(person));","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"        this.persons \u003d editedList;","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"        return this;","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"     * Builds the {@code Group} as intended for testing.","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"     * @return","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"    public Group build() {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"        Group buildGroup \u003d new Group(name);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"        ObservableList\u003cPerson\u003e personList \u003d persons.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"        for (int i \u003d 0; i \u003c personList.size(); i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"            buildGroup.add(personList.get(i));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"        return buildGroup;","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"thanwinnikki":69}},{"path":"src/test/java/seedu/address/testutil/GroupUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"public class GroupUtil {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"     * Returns an group command string for adding the {@code group}.","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    public static String getGroupCommand(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"        return GroupCommand.COMMAND_WORD + \" \" + getGroupDetails(group);","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     * Returns the part of command string for the given {@code group}\u0027s details.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    public static String getGroupDetails(Group group) {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"        sb.append(PREFIX_NAME + group.getName().fullName + \" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"asherhy":24}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.names.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"thanwinnikki":1,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_SWIMMING;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TENNIS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_VOLLEYBALL;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wonyeji"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":" * A utility class containing a list of {@code Group} objects to be used in tests.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"public class TypicalGroups {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"hungkhoaitay"},"content":"    public static final GroupBuilder CS2103T_GROUP_BUILDER \u003d new GroupBuilder().withName(\"CS2103T Project Group\")","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"hungkhoaitay"},"content":"            .withMembers(ALICE, BENSON, CARL);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"hungkhoaitay"},"content":"    public static final GroupBuilder CS2101_GROUP_BUILDER \u003d new GroupBuilder().withName(\"CS2101 Project Group\")","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"hungkhoaitay"},"content":"            .withMembers(ELLE, FIONA, GEORGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"    // Manually added","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"hungkhoaitay"},"content":"    public static final GroupBuilder FAMILY \u003d new GroupBuilder().withName(\"Family\")","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"hungkhoaitay"},"content":"            .withMembers(DANIEL, ELLE, ALICE);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"hungkhoaitay"},"content":"    public static final GroupBuilder FRIENDS \u003d new GroupBuilder().withName(\"Friends\")","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"hungkhoaitay"},"content":"            .withMembers(HOON, IDA);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"wonyeji"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"    public static final GroupBuilder TENNIS \u003d new GroupBuilder().withName(VALID_NAME_TENNIS)","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"            .withMembers(AMY, BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"    public static final GroupBuilder SWIMMING \u003d new GroupBuilder().withName(VALID_NAME_SWIMMING)","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"            .withMembers(BOB, AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"    public static final GroupBuilder VOLLEYBALL \u003d new GroupBuilder().withName(VALID_NAME_VOLLEYBALL);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"wonyeji"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"wonyeji"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"    private TypicalGroups() {} // prevents instantiation","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"wonyeji"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"    public static AddressBook getTypicalAddressBookWithGroups() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"wonyeji"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"wonyeji"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"wonyeji"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"wonyeji"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"hungkhoaitay"},"content":"        for (GroupBuilder groupBuilder : getTypicalGroupBuilder()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"hungkhoaitay"},"content":"            ab.addGroup(groupBuilder.build());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"        return ab;","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"hungkhoaitay"},"content":"    public static List\u003cGroupBuilder\u003e getTypicalGroupBuilder() {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"hungkhoaitay"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103T_GROUP_BUILDER, CS2101_GROUP_BUILDER));","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"thanwinnikki":30,"asherhy":6,"wonyeji":24,"hungkhoaitay":12}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"wonyeji"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wonyeji"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wonyeji"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"    public static final Index INDEX_INVALID \u003d Index.fromOneBased(300);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"thanwinnikki":1,"wonyeji":3,"-":9}}]
