[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"# RecruitIn","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F11-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-2/tp/actions)","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F11-2/tp/branch/master/graph/badge.svg?token\u003d5X6ISPCNZA)](https://codecov.io/gh/AY2122S1-CS2103T-F11-2/tp)","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"### Preview","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"- - -","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"### About","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"- - -","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"* RecruitIn is a desktop app for **recruiters in Singapore** to keep track of the plethora of clients with different skill sets, availability and experience. It is optimized for quick text-based inputs via a **Command Line Interface** (CLI) while still having the ease of use of a Graphical User Interface (GUI). This product will make recruitersâ€™ lives **easier** through categorisation and filter features to easily access candidates they have in mind.\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"### Example Usages","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"- - -","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"* as a main database for recruiters to keep track of their list of clients","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"* as a quick tool to match employers to applicants","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"* as a quick tool to filter employers and applicants","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"### Notes","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"- - -","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"* It is named `RecruitIn` because it functions like LinkedIn as a tool for recruiters to manage employers and applicants.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"* For the detailed documentation of this project, see the **[RecruitIn Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"kaushikkrdy":2,"twothicc":18,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"run {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"    archiveName \u003d \u0027recruitIn.jar\u0027","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"twothicc":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"### Ajjagottu Kaushik Kumar Reddy","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"\u003cimg src\u003d\"images/kaushikkrdy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"[[github](https://github.com/kaushikkrdy)]","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"Email: kaushikumar99@gmail.com","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"* Role: Developer","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"### Bryann Yeap Kok Keong","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"\u003cimg src\u003d\"images/bryannyeap.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"[[github](https://github.com/BryannYeap)]","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"Email: bryannyeapkk@gmail.com","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"* Role: Developer","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"### Liu Chen En","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"\u003cimg src\u003d\"images/twothicc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"[[github](https://github.com/twothicc)]","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"Email: chenenliuu@gmail.com","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"### Toh Wei Jie","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"\u003cimg src\u003d\"images/tohweijie01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"[[github](https://github.com/TohWeiJie01)]","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"Email: tohweijie01@gmail.com","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"### Yao Yi","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"\u003cimg src\u003d\"images/pulpy-y.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"[[github](https://github.com/Pulpy-y)]","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"Email: yaoyi2000326@gmail.com","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaushikkrdy":3,"twothicc":11,"TohWeiJie01":2,"Pulpy-y":4,"-":35,"BryannYeap":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"twothicc"},"content":"### Show feature","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"#### Implementation","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"kaushikkrdy"},"content":"The ```show``` command is facilitated by creating an ```ObservableList``` of ```Person``` objects from the","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"kaushikkrdy"},"content":"```AddressBook```. A ```List``` of unique ```String``` objects is created, with ```String``` content depending on","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"kaushikkrdy"},"content":"the prefix provided by the user. ","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"kaushikkrdy"},"content":"The following activity diagram summarizes what happens when a user executes a ```show``` command:","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"kaushikkrdy"},"content":"![images](images/ShowCommandActivityDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"Given below is an example usage scenario and how the show operation behaves at each step.","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"Step 1. A valid command `show n/` is given as user input. This invokes `LogicManager#execute()`, which calls","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"twothicc"},"content":"`AddressBookParser#parseCommand()` to parse `show n/` into command word `show` and command argument ` n/`.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"twothicc"},"content":"Step 2. `ShowCommandParser` is initialized based on the parse results and `ShowCommandParser#parse()` is called","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"twothicc"},"content":"to identify the first prefix in the user input ` n/`. `ShowCommandParser#parse()` then initializes a","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"twothicc"},"content":"`ShowCommand` with the first prefix `Name` as argument.","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"Step 3. `ShowCommand#execute()` is then called, which will first obtain a `ReadOnlyAddressBook` from `Model`, from which","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"twothicc"},"content":"the `ObservableList\u003cPerson\u003e` belonging to the `ReadOnlyAddressBook` is obtained. The names of each applicant within","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"twothicc"},"content":"the `ObservableList\u003cPerson\u003e` is then accumulated to form a string of all applicant names.","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"twothicc"},"content":"Step 4. Once the string of all applicant names is formed, `CommandResult` is initialized with this string as argument","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"and returned.","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"The following sequence diagram shows how the show operation works.","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"kaushikkrdy"},"content":"![images](images/ShowCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ShowCommandParser`","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"should not exceed the destroy marker X. This is a known limitation of PlantUML.\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"kaushikkrdy"},"content":"### Filter interview feature","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"kaushikkrdy"},"content":"The ```filter_interview``` command is facilitated by creating a ```FilterInterviewCommand``` depending on the given","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"kaushikkrdy"},"content":"input. This command then updates the ```model``` accordingly. ","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"kaushikkrdy"},"content":"The following activity diagram summarizes what happens when a user executes a ```filter_interview``` command:","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"kaushikkrdy"},"content":"![images](images/FilterInterviewCommandActivityDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"kaushikkrdy"},"content":"Step 1. A valid command `filter_interview past` is given as user input. This invokes `LogicManager#execute()`, which calls","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"kaushikkrdy"},"content":"`AddressBookParser#parseCommand()` to parse `filter_interview past` into command word `filter_interview` and command argument ` past`.","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"kaushikkrdy"},"content":"Step 2. `FilterInterviewCommandParser` is initialized based on the parse results and `FilterInterviewCommandParser#parse()` is called","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"kaushikkrdy"},"content":"to identify the user input ` past`. `FilterInterviewCommandParser#parse` then initializes a","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"kaushikkrdy"},"content":"`FilterInterviewPastCommand`.","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"kaushikkrdy"},"content":"Step 3. `FilterInterviewPastCommand#execute()` is then called, which will in turn call `Model#updateFilteredPersonList()`","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"kaushikkrdy"},"content":"and filters for applicants that have interviews that have already passed. ","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"kaushikkrdy"},"content":" ","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"kaushikkrdy"},"content":"Step 4. Once the list has been filtered, `CommandResult` is initialized with `String` indicating how many applicants ","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"kaushikkrdy"},"content":"have interviews that have passed. This `CommandResult` is then returned. ","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"kaushikkrdy"},"content":"Given below is an example usage scenario and how the show operation behaves at each step.","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"kaushikkrdy"},"content":"The following sequence diagram shows how the show operation works.","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"kaushikkrdy"},"content":"![images](images/FilterInterviewCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"kaushikkrdy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"kaushikkrdy"},"content":" **Note:** The lifeline for `FilterInterviewCommandParser`","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"kaushikkrdy"},"content":"should not exceed the destroy marker X. This is a known limitation of PlantUML.\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"Pulpy-y"},"content":"### Find feature","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"Pulpy-y"},"content":"The ```find``` command is facilitated by creating a ```FindCommand``` depending on the given","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"Pulpy-y"},"content":"input. This command then updates the ```model``` accordingly.","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"Pulpy-y"},"content":"The following activity diagram summarizes what happens when a user executes a ```find``` command:","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"Pulpy-y"},"content":"![images](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"Pulpy-y"},"content":"Given below is an example usage scenario illustrated by a sequence diagram for ```find``` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"Pulpy-y"},"content":"Step 1. A valid command `find n/Alex y/0` is given as user input. This invokes `LogicManager#execute()`, which calls","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"Pulpy-y"},"content":"`AddressBookParser#parseCommand()` to parse `find n/Alex y/0` into command word `find` and command argument ` n/Alex y/0`.","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"Pulpy-y"},"content":"Step 2. `FindCommandParser` is initialized based on the parse results and `FindCommandParser#parse()` is called","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"Pulpy-y"},"content":"to identify the predicates present in ` n/Alex y/0`. `FindCommandParser#parse()` then initializes a","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"Pulpy-y"},"content":"`FindCommand` with the predicates as argument.","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"Pulpy-y"},"content":"Step 3. `FindCommand#execute()` is then called, which will in turn call `Model#updateFilteredPersonList()`","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"Pulpy-y"},"content":"and filters for applicants that have `Alex` in their names and `0` year of experience.","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"Pulpy-y"},"content":"Step 4. Once the string of all applicant names is formed, `CommandResult` is initialized with this string as argument","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"Pulpy-y"},"content":"and returned.","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"Pulpy-y"},"content":"![images](images/FindCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"Pulpy-y"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"Pulpy-y"},"content":" **Note:** The lifeline for `FindCommandParser`","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"Pulpy-y"},"content":"should not exceed the destroy marker X. This is a known limitation of PlantUML.\u003c/div\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"Pulpy-y"},"content":"### Datetime for interview ","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"Pulpy-y"},"content":"The `Interview` class accepts `yyyy-M-d, H:m` as parsed time format and provides `MMM dd yyyy , HH:mm` as display format.","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"Pulpy-y"},"content":"- `yyyy` : year-of-era in 4 digits, e.g. `2021`","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"Pulpy-y"},"content":"- `M` : month-of-year, e.g. `7`, `07`","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"Pulpy-y"},"content":"- `d` : day-of-month, e.g. `10`","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"Pulpy-y"},"content":"- `H` : hour-of-day (0-23), e.g. `0`","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"Pulpy-y"},"content":"- `m` : minute-of-hour, e.g. `30`","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":259,"author":{"gitId":"Pulpy-y"},"content":"`Interview#isValidInterviewTime` uses `java.time.format.DateTimeFormatter` to generate a formatter using `Interview#PARSE_FORMAT`,","lastModifiedDate":"2021-10-31"},{"lineNumber":260,"author":{"gitId":"Pulpy-y"},"content":"and checks for `DateTimeParseException` when parsing the input with the formatter via `LocalDate#parse()`. ","lastModifiedDate":"2021-10-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":262,"author":{"gitId":"Pulpy-y"},"content":"The `display()` method uses `java.text.DateFormat` and returns the formatted time which is displayed GUI.","lastModifiedDate":"2021-10-31"},{"lineNumber":263,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"Pulpy-y"},"content":"For example, the add command `add n/John ... i/2021-01-01, 10:30` will add a person John with interview time shown as `Jan 01 2021, 10:30`.","lastModifiedDate":"2021-10-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"kaushikkrdy"},"content":"A recruiter that","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":290,"author":{"gitId":"kaushikkrdy"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"kaushikkrdy"},"content":"* has a need to manage a significant number of applications","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"kaushikkrdy"},"content":"* works for a company that gets applications for variety of roles","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"kaushikkrdy"},"content":"* has a need to filter and categorise applicants by different fields","lastModifiedDate":"2021-09-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":296,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":297,"author":{"gitId":"kaushikkrdy"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"kaushikkrdy"},"content":"It can be hard for recruiters to keep track of the plethora of clients with different skill sets, availability","lastModifiedDate":"2021-09-26"},{"lineNumber":300,"author":{"gitId":"kaushikkrdy"},"content":"and experience.","lastModifiedDate":"2021-09-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"kaushikkrdy"},"content":"This product will make recruitersâ€™ lives easier through categorisation and filter features to easily access candidates","lastModifiedDate":"2021-09-26"},{"lineNumber":303,"author":{"gitId":"kaushikkrdy"},"content":"they have in mind. Recruiters can manage contacts faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-09-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                    | I want to â€¦â€‹                            | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"TohWeiJie01"},"content":"| -------- | ------------------------------------------ | --------------------------------------------- | ------------------------------------------------------------------------- |","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                        | refer to instructions when I forget how to use the App                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | list all applicants                           | keep track of all my applicants                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":314,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | add an applicant                              | update my list of applicants with new people                              |","lastModifiedDate":"2021-10-07"},{"lineNumber":315,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | delete an applicant                           | remove applicants I no longer need                                        |","lastModifiedDate":"2021-10-07"},{"lineNumber":316,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | delete multiple applicants at once            | so that I can delete applicants more efficiently                          |","lastModifiedDate":"2021-10-22"},{"lineNumber":317,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | edit an applicant\u0027s information               | update their information without having to delete and add them again      |","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their name                 | locate details of applicants without having to go through the entire list |","lastModifiedDate":"2021-10-07"},{"lineNumber":319,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their phone number         | locate details of applicants without having to go through the entire list |","lastModifiedDate":"2021-10-07"},{"lineNumber":320,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their email                | locate details of applicants without having to go through the entire list |","lastModifiedDate":"2021-10-07"},{"lineNumber":321,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | find applicants by their applied roles        | filter out applicants that match the desired role                        |","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their employment type      | filter out applicants that match the desired employment type              |","lastModifiedDate":"2021-10-07"},{"lineNumber":323,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | find applicants by their expected salary      | filter out applicants that match the desired salary range of the hiring company   |","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their level of education   | filter out applicants that match the desired highest level of education   |","lastModifiedDate":"2021-10-07"},{"lineNumber":325,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | find applicants by their years of experience  | filter out applicants that match the desired years of experience                    |","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | find applicants by their tags                 | filter out applicants that match the desired tags                                   |","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | find applicants by their interview time       | filter out applicants that match the desired interview times           |","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their notes                | filter out applicants that match the desired note                         |","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | find applicants by their done status          | filter out applicants that match the desire done status                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | save applicant data                           | refer to it in the future without having to type in their data again      |","lastModifiedDate":"2021-10-07"},{"lineNumber":331,"author":{"gitId":"kaushikkrdy"},"content":"| `* * *`  | user                                       | see all names available in the list           | check easily if a certain name is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all phone numbers available in the list   | check easily if a certain number is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all emails available in the list          | check easily if a certain email is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all applied roles available in the list   | check easily if a certain role is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all employment types available in the list| check easily if a certain employment type is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all expected salaries available in the list | check easily if a certain expected salary is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all interview times available in the list | check easily if a certain interview time is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | see all tags available in the list | check easily if a certain tag is present in the list without having to go through the entire list      |","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | mark applicants as \"Done\"                     | know which applicants I have attended to                                  |","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"TohWeiJie01"},"content":"| `* * *`  | user                                       | unmark applicants from \"Done\" to \"Not Done\"   | reflect the correct current status I have with the applicant              |","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"kaushikkrdy"},"content":"| `* *`    | user                                       | delete all applicants that are marked as done | so that I can focus only on applicants that I have not worked on, and easily reduce clutter in the address book |","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"BryannYeap"},"content":"(For all use cases below, the **System** is the `RecruitIn` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":351,"author":{"gitId":"kaushikkrdy"},"content":"**Use case: UC01 - Asking for help**","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"BryannYeap"},"content":"1.  User requests for help to use RecruitIn.","lastModifiedDate":"2021-10-02"},{"lineNumber":356,"author":{"gitId":"BryannYeap"},"content":"2.  RecruitIn informs user on how to access user guide.","lastModifiedDate":"2021-10-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"kaushikkrdy"},"content":"* 2a. User cancels request for help.","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"kaushikkrdy"},"content":"**Use case: UC02 - List all applicants**","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"kaushikkrdy"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"kaushikkrdy"},"content":"1.  User requests to list all applicants.","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"BryannYeap"},"content":"2.  RecruitIn shows a list of all applicants.","lastModifiedDate":"2021-10-02"},{"lineNumber":372,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":373,"author":{"gitId":"kaushikkrdy"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":374,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":375,"author":{"gitId":"kaushikkrdy"},"content":"**Use case: UC03 - Adding an applicant**","lastModifiedDate":"2021-09-26"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"kaushikkrdy"},"content":"1.  User requests to add an applicant with provided information.","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"BryannYeap"},"content":"2.  RecruitIn adds the applicant to the storage.","lastModifiedDate":"2021-10-02"},{"lineNumber":381,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":382,"author":{"gitId":"kaushikkrdy"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"kaushikkrdy"},"content":"* 1a. The input format is invalid.","lastModifiedDate":"2021-09-26"},{"lineNumber":387,"author":{"gitId":"BryannYeap"},"content":"    * 1a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-02"},{"lineNumber":388,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":389,"author":{"gitId":"Pulpy-y"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-25"},{"lineNumber":390,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":391,"author":{"gitId":"BryannYeap"},"content":"**Use case: UC04 - Deleting an applicant**","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"kaushikkrdy"},"content":"1.  User requests to \u003cu\u003elist applicants (UC01)\u003c/u\u003e.","lastModifiedDate":"2021-09-26"},{"lineNumber":396,"author":{"gitId":"BryannYeap"},"content":"2.  RecruitIn displays a list of applicants.","lastModifiedDate":"2021-10-02"},{"lineNumber":397,"author":{"gitId":"BryannYeap"},"content":"3.  User requests to delete applicant(s) in the displayed list.","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"BryannYeap"},"content":"4.  RecruitIn deletes the applicant(s).","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"BryannYeap"},"content":"* 1a. User requests to \u003cu\u003efind applicant (UC05)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":406,"author":{"gitId":"BryannYeap"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-10-02"},{"lineNumber":407,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":408,"author":{"gitId":"twothicc"},"content":"* 2a. The list of applicants is empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"BryannYeap"},"content":"* 3a. The delete command is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":413,"author":{"gitId":"BryannYeap"},"content":"    * 3a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-02"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"BryannYeap"},"content":"**Use case: UC05 - Finding an applicant**","lastModifiedDate":"2021-10-02"},{"lineNumber":418,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":419,"author":{"gitId":"BryannYeap"},"content":"**MSS**","lastModifiedDate":"2021-10-02"},{"lineNumber":420,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":421,"author":{"gitId":"BryannYeap"},"content":"1.  User requests to find an applicant with the provided information.","lastModifiedDate":"2021-10-02"},{"lineNumber":422,"author":{"gitId":"BryannYeap"},"content":"2.  RecruitIn displays the applicants that match the provided information.","lastModifiedDate":"2021-10-02"},{"lineNumber":423,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":424,"author":{"gitId":"BryannYeap"},"content":"    Use case ends.","lastModifiedDate":"2021-10-02"},{"lineNumber":425,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":426,"author":{"gitId":"BryannYeap"},"content":"**Extensions**","lastModifiedDate":"2021-10-02"},{"lineNumber":427,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":428,"author":{"gitId":"BryannYeap"},"content":"* 1a. The input format is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":429,"author":{"gitId":"BryannYeap"},"content":"    * 1a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-02"},{"lineNumber":430,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":431,"author":{"gitId":"BryannYeap"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":432,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":433,"author":{"gitId":"BryannYeap"},"content":"* 2a. The list of applicants is empty.","lastModifiedDate":"2021-10-02"},{"lineNumber":434,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":435,"author":{"gitId":"BryannYeap"},"content":"  Use case ends.","lastModifiedDate":"2021-10-02"},{"lineNumber":436,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":437,"author":{"gitId":"twothicc"},"content":"**Use case: UC06 - Showing search terms**","lastModifiedDate":"2021-10-21"},{"lineNumber":438,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":439,"author":{"gitId":"twothicc"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":440,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":441,"author":{"gitId":"twothicc"},"content":"1. User requests to show search terms for a specific category.","lastModifiedDate":"2021-10-21"},{"lineNumber":442,"author":{"gitId":"twothicc"},"content":"2. RecruitIn displays a list of search terms for the requested category.","lastModifiedDate":"2021-10-21"},{"lineNumber":443,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"twothicc"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":445,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"twothicc"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":447,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":448,"author":{"gitId":"twothicc"},"content":"* 1a. The input format is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":449,"author":{"gitId":"twothicc"},"content":"    * 1a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-21"},{"lineNumber":450,"author":{"gitId":"twothicc"},"content":"  ","lastModifiedDate":"2021-10-21"},{"lineNumber":451,"author":{"gitId":"twothicc"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":452,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":453,"author":{"gitId":"twothicc"},"content":"* 2a. The list of applicants is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":454,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":455,"author":{"gitId":"twothicc"},"content":"    * 2a1. RecruitIn displays a message indicating that no search terms are available.","lastModifiedDate":"2021-10-21"},{"lineNumber":456,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":457,"author":{"gitId":"twothicc"},"content":"      Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":458,"author":{"gitId":"twothicc"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":459,"author":{"gitId":"BryannYeap"},"content":"**Use case: UC07 - Marking an applicant**","lastModifiedDate":"2021-10-21"},{"lineNumber":460,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":461,"author":{"gitId":"BryannYeap"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":462,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":463,"author":{"gitId":"BryannYeap"},"content":"1.  User requests to \u003cu\u003elist applicants (UC01)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":464,"author":{"gitId":"BryannYeap"},"content":"2.  RecruitIn displays a list of applicants.","lastModifiedDate":"2021-10-21"},{"lineNumber":465,"author":{"gitId":"BryannYeap"},"content":"3.  User requests to mark applicant(s) in the displayed list.","lastModifiedDate":"2021-10-21"},{"lineNumber":466,"author":{"gitId":"BryannYeap"},"content":"4.  RecruitIn marks the requested applicant(s) to \"Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":467,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":468,"author":{"gitId":"BryannYeap"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":469,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":470,"author":{"gitId":"BryannYeap"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":471,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":472,"author":{"gitId":"BryannYeap"},"content":"* 1a. User requests to \u003cu\u003efind applicant (UC05)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":473,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":474,"author":{"gitId":"BryannYeap"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":475,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":476,"author":{"gitId":"BryannYeap"},"content":"* 2a. The list of applicants is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":477,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":478,"author":{"gitId":"BryannYeap"},"content":"  Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":479,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":480,"author":{"gitId":"BryannYeap"},"content":"* 3a. The mark command is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":481,"author":{"gitId":"BryannYeap"},"content":"    * 3a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-21"},{"lineNumber":482,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":483,"author":{"gitId":"BryannYeap"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":484,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":485,"author":{"gitId":"BryannYeap"},"content":"**Use case: UC08 - Unmarking an applicant**","lastModifiedDate":"2021-10-21"},{"lineNumber":486,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":487,"author":{"gitId":"TohWeiJie01"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":488,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":489,"author":{"gitId":"TohWeiJie01"},"content":"1.  User requests to \u003cu\u003elist applicants (UC01)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":490,"author":{"gitId":"TohWeiJie01"},"content":"2.  RecruitIn displays a list of applicants.","lastModifiedDate":"2021-10-21"},{"lineNumber":491,"author":{"gitId":"BryannYeap"},"content":"3.  User requests to unmark applicant(s) in the displayed list.","lastModifiedDate":"2021-10-21"},{"lineNumber":492,"author":{"gitId":"BryannYeap"},"content":"4.  RecruitIn unmarks the requested applicant(s) to \"Not Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":493,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":494,"author":{"gitId":"TohWeiJie01"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":495,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":496,"author":{"gitId":"TohWeiJie01"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":497,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":498,"author":{"gitId":"BryannYeap"},"content":"* 1a. User requests to \u003cu\u003efind applicant (UC05)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":499,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":500,"author":{"gitId":"TohWeiJie01"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":501,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":502,"author":{"gitId":"TohWeiJie01"},"content":"* 2a. The list of applicants is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":503,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":504,"author":{"gitId":"TohWeiJie01"},"content":"  Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":505,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":506,"author":{"gitId":"BryannYeap"},"content":"* 3a. The unmark command is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":507,"author":{"gitId":"TohWeiJie01"},"content":"    * 3a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-21"},{"lineNumber":508,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":509,"author":{"gitId":"TohWeiJie01"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":510,"author":{"gitId":"TohWeiJie01"},"content":"      ","lastModifiedDate":"2021-10-21"},{"lineNumber":511,"author":{"gitId":"BryannYeap"},"content":"**Use case: UC09 - Deleting marked applicants**","lastModifiedDate":"2021-10-21"},{"lineNumber":512,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":513,"author":{"gitId":"TohWeiJie01"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":514,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":515,"author":{"gitId":"TohWeiJie01"},"content":"1.  User requests to \u003cu\u003elist applicants (UC01)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":516,"author":{"gitId":"TohWeiJie01"},"content":"2.  RecruitIn displays a list of applicants.","lastModifiedDate":"2021-10-21"},{"lineNumber":517,"author":{"gitId":"BryannYeap"},"content":"3.  User requests to delete all applicants marked as \"Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":518,"author":{"gitId":"BryannYeap"},"content":"4.  RecruitIn deletes all applicants marked as \"Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":519,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":520,"author":{"gitId":"TohWeiJie01"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":521,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":522,"author":{"gitId":"TohWeiJie01"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":523,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":524,"author":{"gitId":"BryannYeap"},"content":"* 1a. User requests to \u003cu\u003efind applicant (UC05)\u003c/u\u003e.","lastModifiedDate":"2021-10-21"},{"lineNumber":525,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":526,"author":{"gitId":"TohWeiJie01"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":527,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":528,"author":{"gitId":"TohWeiJie01"},"content":"* 2a. The list of applicants is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":529,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":530,"author":{"gitId":"TohWeiJie01"},"content":"  Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":531,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":532,"author":{"gitId":"BryannYeap"},"content":"* 3a. The delete command is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":533,"author":{"gitId":"TohWeiJie01"},"content":"    * 3a1. RecruitIn shows an error message.","lastModifiedDate":"2021-10-21"},{"lineNumber":534,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":535,"author":{"gitId":"TohWeiJie01"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":536,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":537,"author":{"gitId":"BryannYeap"},"content":"* 3b. There are no applicants marked as \"Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":538,"author":{"gitId":"BryannYeap"},"content":"    * 3b1. RecruitIn informs the user that no applicants were marked as \"Done\", and thus no applicants were deleted.","lastModifiedDate":"2021-10-21"},{"lineNumber":539,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":540,"author":{"gitId":"BryannYeap"},"content":"  Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":541,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":542,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"TohWeiJie01"},"content":"* **Applicant**: Represents a person that is searching for a job","lastModifiedDate":"2021-09-25"},{"lineNumber":554,"author":{"gitId":"TohWeiJie01"},"content":"* **Applied Role**: Represents the job a person is applying for","lastModifiedDate":"2021-10-07"},{"lineNumber":555,"author":{"gitId":"twothicc"},"content":"* **Employment Type**: Represents the type of work contract, specifically Full time, Part time, Temporary \u0026 Internship","lastModifiedDate":"2021-10-09"},{"lineNumber":556,"author":{"gitId":"TohWeiJie01"},"content":"* **Expected Salary**: Represents the minimum amount the applicant is willing to be paid for the job","lastModifiedDate":"2021-10-07"},{"lineNumber":557,"author":{"gitId":"twothicc"},"content":"* **Level of Education**: Represents the highest/current level of education the applicant has, specifically Elementary, Middle School, High School, University, Bachelors, Masters, PhD","lastModifiedDate":"2021-10-09"},{"lineNumber":558,"author":{"gitId":"TohWeiJie01"},"content":"* **Years of Experience**: Represents the number of years the applicant has previously worked in their applied role for","lastModifiedDate":"2021-10-07"},{"lineNumber":559,"author":{"gitId":"kaushikkrdy"},"content":"* **Search term**: Terms that can be searched for. e.g. Search terms for roles are all the roles that exist in the list, meaning these are all the roles that can be searched for.","lastModifiedDate":"2021-10-22"},{"lineNumber":560,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaushikkrdy":75,"twothicc":41,"TohWeiJie01":59,"Pulpy-y":34,"-":325,"BryannYeap":77}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"### About RecruitIn","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"RecruitIn is a desktop app for recruiters in Singapore to keep track of the plethora of clients with different skill sets, availability and experience. It is optimised for quick text-based inputs via a Command Line Interface (CLI) while still having the ease of use of a Graphical User Interface (GUI). This product will make recruitersâ€™ lives easier through categorisation and filter features to easily access candidates they have in mind.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"### About this guide","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"This guide aims to help users get familiar with using RecruitIn\u0027s features.","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"* **New users** can get started by following the steps under [Quick start](#quick-start). New users may also view","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"descriptions of the usage of each component in RecruitIn under [Usages](#usages)","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"* **Existing users** can view existing features under [Features](#features) or refer to the [Table of Contents](#table-of-contents) below to view specific features. A **summary** of existing features can also be viewed under [Command summary](#command-summary).","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"* **Advanced users** can view in-depth usage of RecruitIn\u0027s features by visiting links marked with ***{Advanced}*** under the [Table of Contents](#table-of-contents).","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"* Commonly addressed questions can be viewed under [FAQ](#faq). ","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"### Table of Contents","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"  * [Quick start](#quick-start)","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"  * [Usages](#usages)","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"  * [Features](#features)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    + [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    + [Adding an applicant: `add`](#adding-an-applicant-add)","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"    + [Editing an applicant: `edit`](#editing-an-applicant--edit)","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    + [Listing all applicants : `list`](#listing-all-applicants--list)","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    + [Finding an applicant : `find`](#finding-an-applicant--find)","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    + [Filtering interviews : `filter_interview`](#filtering-interviews--filter_interview)","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"    + [Deleting an applicant : `delete`](#deleting-an-applicant--delete)","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"    + [Showing search terms : `show`](#showing-search-terms--show)","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"    + [Marking an applicant : `mark`](#marking-an-applicant--mark)","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"    + [Unmarking an applicant : `unmark`](#unmarking-an-applicant--unmark)","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    + [Deleting marked applicants: `delete_marked`](#deleting-marked-applicants-delete_marked)","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"    + [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"    + [Saving the data](#saving-the-data)","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"    + [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"  * [Prefix Input Specifications ***{Advanced}***](#prefix-input-specifications-advanced)","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"  * [FAQ](#faq)","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"  * [Command summary](#command-summary)","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"1. Ensure you have Java `11` or above installed in your Computer. If not, you can install it from [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"Download the correct version based on your operating system (e.g. Linux, macOS, Windows) and follow the Java installation instructions.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"2. Download the latest `recruitIn.jar` from [here](https://github.com/AY2122S1-CS2103T-F11-2/tp/releases/tag/v1.3b).","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"Scroll down to the bottom and click on `recruitIn.jar`.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"3. Copy the file to the folder you want to use as the _home folder_.","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"4. Double-click the file to start the app. The GUI should be similar to the below image. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"   ![Ui](images/description.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"   Applicant data are displayed as a list in the **Applicant Panel**.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"   ![Applicant Diagram](images/ApplicantDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"5. Now that your app is set up and running, lets run through a quick sample workflow on managing an applicant:\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"**Note**: Type in your commands into the **Command Box** and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"   1. Use **`clear`** command to clear the existing sample data.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"   2. Suppose you have an applicant named `John Doe` that you have scouted from online sources and want to add him to","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"      your list of applicants. `John Doe` has kindly provided you his phone number, `98765432` and email `JohnDoe@gmail.com`. He has also","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"      stated that he is applying for the role of a `Teacher` and plans to work `Full time` with an expected salary of `3000`. His highest level of","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"      education is `Bachelors` and has `4` years of experience as a teacher. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"      Type in **`add`**`n/John Doe p/98765432 e/JohnDoe@gmail.com r/Teacher et/Full time s/3000 l/Bachelors y/4` to add `John Doe` to your","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"      list of applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"   3. Let\u0027s also add in another applicant named `Mary Sue`. Her phone number is `91131513` and her email is `MarySue@gmail.com`. She is applying","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"      for the role of a `Software Engineer` and is looking for an `Internship` with an expected salary of `3000`. Her highest level of education is `High School`","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"      and has `0` years of experience as a `Software Engineer`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"      Type in **`add`**`n/Mary Sue p/91131513 e/MarySue@gmail.com r/Software Engineer et/Internship s/3000 l/High School y/0`.","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"   4. As an experienced recruiter, you notice that `Mary Sue` may not have the qualifications for the job as a `Software Engineer` and want to add","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"      a note to remind yourself.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"      Type in **`edit`**`2 nt/She might not have the qualifications for the job` to add the note to `Mary Sue`.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"   5. Your company then informs you that they would like to interview `John Doe` on December 11th 2021 at 10 am `2021-12-11, 10:00` and you want to remind","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"      yourself that an interview has been arranged for `John Doe`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"      Type in **`edit`**`1 i/2021-12-11, 10:00` to add this interview slot to `John Doe`.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"   6. Suppose time passes and you now have more applicants in your list of applicants. Your company informs you that `John Doe` has","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"      passed his interview and is hired.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"      Type in **`find`**`n/John Doe p/98765432` to find `John Doe`.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"      Type in **`mark`**`1` to mark `John Doe` as done.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"   7. Type in **`list`** to go back to your list of applicants.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"      To remove all applicants marked as done, such as `John Doe`, type in **`delete_marked`**.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"      Now `John Doe` is removed from your list of applicants, along with other applicants you may have marked.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"6. Aside from the commands shown in the sample workflow above, you may also find these useful:","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"   * **`delete`**`2` : Deletes the second applicant in your currently displayed list.","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"   * **`show`**`s/` : Displays all unique expected salaries currently in RecruitIn.","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"   * **`unmark`**`1` : Unmarks the 1st applicant shown in the list of all applicants, which would be `John`.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"   * **`filter_interview`**`past` : Displays all applicants whose interviews are in the past, relative to current date and time.","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"   * **`filter_interview`**`future` : Displays all applicants whose interview are in the future, relative to current date and time.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"7. Refer to the [Features](#features) below for details of available commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"* Words that are ***bold \u0026 Italicised*** refers to a stored prefix value. ","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"  e.g. ***Name*** could refer to the value `John` stored as a name in the application.","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"* Items with `â€¦`â€‹ after them can be repeated multiple times, including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"  e.g. `delete INDEX...` can be used as `delete 1` (i.e. `INDEX` repeated 0 times), `delete 1 2`, `delete 2 4 3` etc.","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"**:information_source: Notes about the applicants:**\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"twothicc"},"content":"* Duplicate applicants are not allowed. For two applicants to be duplicate, they must have either the same ***Phone Number*** or ***Email*** or both. \u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"  An error message will show if you attempt to `add` or `edit` applicants in a manner that will lead to duplicate stored applicants.","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"BryannYeap"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Pulpy-y"},"content":"### Adding an applicant: `add`","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"BryannYeap"},"content":"Adds an applicant to RecruitIn.","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL_ADDRESS r/ROLE et/EMPLOYMENT_TYPE s/EXPECTED_SALARY l/LEVEL_OF_EDUCATION y/YEARS_OF_EXPERIENCE [t/TAG] [i/INTERVIEW] [nt/NOTES]â€‹`","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"twothicc"},"content":"* To add multiple tags, multiple `t/` prefixes should be used.","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"Providing multiple tag values in a single `t/` prefix will lead to an error. (i.e. `add n/John p/90909090 e/john@gmail.com r/Software Tester et/Full time s/4500 l/High School y/3 t/smart helpful` will lead to an error)","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"* Inputs for each prefix is taken as a single value. (i.e. `r/software engineer` has the value `software engineer`)","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"* `add n/Bob p/87654321 e/bob@gmail.com r/Software Engineering et/Full time s/4000 l/High School y/2 i/2021-10-21, 20:00 nt/This applicant has the credentials needed for this job.`","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"* `add n/John p/90909090 e/john@gmail.com r/Software Tester et/Full time s/4500 l/High School y/3 t/smart t/helpful` to add a person named `John` with two tags `smart` and `helpful`","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"**:information_source: Prefix inputs for `add` command must follow the following input specifications:**\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"twothicc"},"content":"* You may","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"twothicc"},"content":"    * refer to [**Add Input Specifications**](#add-inputs) for detailed input specifications.","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"twothicc"},"content":"    * refer to add input specifications for specific prefixes by clicking on relevant links in the table below.","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"twothicc"},"content":"| Input | Prefix | Specifications |","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"twothicc"},"content":"| :---: | :---: | :---: |","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"| NAME | `n/` | [**name**](#name-n) |","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"twothicc"},"content":"| PHONE_NUMBER | `p/` | [**phone_number**](#phone_number-p) |","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"twothicc"},"content":"| EMAIL_ADDRESS | `e/` | [**email_address**](#email_address-e) |","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"twothicc"},"content":"| ROLE | `r/` | [**role**](#role-r) |","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"twothicc"},"content":"| EMPLOYMENT_TYPE | `et/` | [**employment_type**](#employment_type-et) |","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"| EXPECTED_SALARY | `s/` | [**expected_salary**](#expected_salary-s) |","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"twothicc"},"content":"| LEVEL_OF_EDUCATION | `l/` | [**level_of_education**](#level_of_education-l) |","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"| YEARS_OF_EXPERIENCE | `y/` | [**years_of_experience**](#years_of_experience-y) |","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"twothicc"},"content":"| TAG | `t/` | [**tag**](#tag-t) |","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"twothicc"},"content":"| INTERVIEW | `i/` | [**interview**](#interview-i) |","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"| NOTES | `nt/` | [**notes**](#notes-nt) |","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"twothicc"},"content":"### Editing an applicant : `edit`","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"twothicc"},"content":"Edits an applicant\u0027s with specified index in RecruitIn.","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"twothicc"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL_ADDRESS] [r/ROLE] [et/EMPLOYMENT_TYPE]","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"twothicc"},"content":" [s/EXPECTED_SALARY] [l/LEVEL_OF_EDUCATION] [y/YEARS_OF_EXPERIENCE] [t/TAG] [i/INTERVIEW] [nt/NOTES]`","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"kaushikkrdy"},"content":" ","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"kaushikkrdy"},"content":" * Edit command must take at least 1 prefix input.","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"twothicc"},"content":" * The `INDEX` refers to the index number shown in the displayed applicants list.","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"twothicc"},"content":" * For `t/` prefix in particular, if **only** a single tag prefix is provided like so `t/` with no values, it will erase","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"twothicc"},"content":"remove tags from the applicant.","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"twothicc"},"content":"Giving more than 1 tag prefix input with 1 or more having no value will instead lead to an error. (i.e. `edit 1 t/ t/smart` leads to an error)","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"twothicc"},"content":" * Inputs for each prefix is taken as a single value. (i.e. `r/software engineer` has the value `software engineer`)","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"twothicc"},"content":"* `edit 1 r/Software Engineer` will change the ***role*** of the applicant with the index number 1","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"twothicc"},"content":"* `edit 1 t/` will remove all ***tags***s from the applicant with index number 1","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"twothicc"},"content":"* `edit 1 n/John t/` will change the name of the applicant with index number 1 to `John` and remove all the applicant\u0027s ***tag***s","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"twothicc"},"content":"**:information_source: Prefix inputs for `edit` command must follow the same input specifications as `add` command:**\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"twothicc"},"content":"* You may ","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"twothicc"},"content":"  * refer to [**Add Input Specifications**](#add-inputs) for detailed input specifications.","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"twothicc"},"content":"  * refer to add input specifications for specific prefixes by clicking on relevant links in the table below.","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"twothicc"},"content":"| Input | Prefix | Specifications |","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"twothicc"},"content":"| :---: | :---: | :---: |","lastModifiedDate":"2021-11-02"},{"lineNumber":221,"author":{"gitId":"twothicc"},"content":"| NAME | `n/` | [**name**](#name-n) |","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"twothicc"},"content":"| PHONE_NUMBER | `p/` | [**phone_number**](#phone_number-p) |","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"twothicc"},"content":"| EMAIL_ADDRESS | `e/` | [**email_address**](#email_address-e) |","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"twothicc"},"content":"| ROLE | `r/` | [**role**](#role-r) |","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"twothicc"},"content":"| EMPLOYMENT_TYPE | `et/` | [**employment_type**](#employment_type-et) |","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"twothicc"},"content":"| EXPECTED_SALARY | `s/` | [**expected_salary**](#expected_salary-s) |","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"twothicc"},"content":"| LEVEL_OF_EDUCATION | `l/` | [**level_of_education**](#level_of_education-l) |","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"twothicc"},"content":"| YEARS_OF_EXPERIENCE | `y/` | [**years_of_experience**](#years_of_experience-y) |","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"twothicc"},"content":"| TAG | `t/` | [**tag**](#tag-t) |","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"twothicc"},"content":"| INTERVIEW | `i/` | [**interview**](#interview-i) |","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"twothicc"},"content":"| NOTES | `nt/` | [**notes**](#notes-nt) |","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"TohWeiJie01"},"content":"### Listing all applicants : `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"BryannYeap"},"content":"Shows a list of all applicants in RecruitIn.","lastModifiedDate":"2021-10-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"BryannYeap"},"content":"### Finding an applicant : `find`","lastModifiedDate":"2021-10-02"},{"lineNumber":242,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":243,"author":{"gitId":"BryannYeap"},"content":"Finds applicants by specific prefixes.","lastModifiedDate":"2021-10-02"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":245,"author":{"gitId":"TohWeiJie01"},"content":"Format: `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL_ADDRESS] [r/ROLE] [et/EMPLOYMENT_TYPE] [s/EXPECTED_SALARY] [l/LEVEL_OF_EDUCATION] [y/YEARS_OF_EXPERIENCE]  [t/TAG]  [i/INTERVIEW] [nt/NOTES] [d/DONE]`","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":247,"author":{"gitId":"twothicc"},"content":"* Find command must take **at least 1** prefix input.","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"twothicc"},"content":"* If you input multiple of the same prefix, **only the last** prefix will be used for the search of that category.","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"twothicc"},"content":"* Input for each prefix can contain multiple **keywords** separated by whitespace, e.g. `n/John Mary`, `t/friend colleague`","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"twothicc"},"content":"* You can search for tags using multiple keywords by providing your keywords separated by whitespace in a `t/` prefix. (i.e. `find t/smart kind`)","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"twothicc"},"content":"    * This is different from `add` and `edit` commands which require tag inputs to be provided separately. (i.e. `edit 1 t/smart t/kind`)","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"TohWeiJie01"},"content":"* Inputs for all prefixes are **case-insensitive**.","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":262,"author":{"gitId":"twothicc"},"content":"* Applicants will not be filtered by prefixes that are not provided.","lastModifiedDate":"2021-11-02"},{"lineNumber":263,"author":{"gitId":"twothicc"},"content":"* Applicants will also not be filtered by prefixes that are provided, yet have empty inputs. (i.e. `find d/` will return all applicants unfiltered by their ***done*** status)","lastModifiedDate":"2021-11-02"},{"lineNumber":264,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":265,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":266,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":267,"author":{"gitId":"twothicc"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"twothicc"},"content":"* `find n/John Mary` finds all applicants with either `John` or `Mary` as values for name prefix.","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"twothicc"},"content":"* `find n/John n/Mary` finds all applicants with only `Mary` as values for name prefix.","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"twothicc"},"content":"* `find t/friend colleague` finds all applicants with `friend` or `colleague` as values for tag prefix.","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"twothicc"},"content":"* `find n/John Mary t/friend colleague`","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"TohWeiJie01"},"content":"* `find n/Bob p/87654321 e/bob@gmail.com r/Software Engineering et/Full time s/4000 l/High School y/2 nt/has the credentials d/Not Done`","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"twothicc"},"content":"**:information_source: Prefix inputs for `find` command must follow the following input specifications:**\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":276,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":277,"author":{"gitId":"twothicc"},"content":"* You may","lastModifiedDate":"2021-11-02"},{"lineNumber":278,"author":{"gitId":"twothicc"},"content":"    * refer to [**Find Input Specifications**](#find-inputs) for detailed input specifications.","lastModifiedDate":"2021-11-02"},{"lineNumber":279,"author":{"gitId":"twothicc"},"content":"    * refer to find input specifications for specific prefixes by clicking on relevant links in the table below.","lastModifiedDate":"2021-11-02"},{"lineNumber":280,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":281,"author":{"gitId":"twothicc"},"content":"| Input | Prefix | Specifications |","lastModifiedDate":"2021-11-02"},{"lineNumber":282,"author":{"gitId":"twothicc"},"content":"| :---: | :---: | :---: |","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"twothicc"},"content":"| NAME | `n/` | [**name**](#name-n-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":284,"author":{"gitId":"twothicc"},"content":"| PHONE_NUMBER | `p/` | [**phone_number**](#phone_number-p-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":285,"author":{"gitId":"twothicc"},"content":"| EMAIL_ADDRESS | `e/` | [**email_address**](#email_address-e-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":286,"author":{"gitId":"twothicc"},"content":"| ROLE | `r/` | [**role**](#role-r-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":287,"author":{"gitId":"twothicc"},"content":"| EMPLOYMENT_TYPE | `et/` | [**employment_type**](#employment_type-et-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":288,"author":{"gitId":"twothicc"},"content":"| EXPECTED_SALARY | `s/` | [**expected_salary**](#expected_salary-s-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":289,"author":{"gitId":"twothicc"},"content":"| LEVEL_OF_EDUCATION | `l/` | [**level_of_education**](#level_of_education-l-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":290,"author":{"gitId":"twothicc"},"content":"| YEARS_OF_EXPERIENCE | `y/` | [**years_of_experience**](#years_of_experience-y-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":291,"author":{"gitId":"twothicc"},"content":"| TAG | `t/` | [**tag**](#tag-t-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"twothicc"},"content":"| INTERVIEW | `i/` | [**interview**](#interview-i-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"twothicc"},"content":"| NOTES | `nt/` | [**notes**](#notes-nt-1) |","lastModifiedDate":"2021-11-02"},{"lineNumber":294,"author":{"gitId":"twothicc"},"content":"| DONE | `d/` | [**done**](#done-d) |","lastModifiedDate":"2021-11-02"},{"lineNumber":295,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":297,"author":{"gitId":"kaushikkrdy"},"content":"        ","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"kaushikkrdy"},"content":"### Filtering interviews : `filter_interview`","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"kaushikkrdy"},"content":"Filters applicants by interview dates based on whether they are upcoming or in the past (based on current date and time).","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"kaushikkrdy"},"content":"Differs from ```find i/``` as it is not returning all applicants with interviews matching a specific date but ","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"kaushikkrdy"},"content":"rather all applicants with interviews that fall into the same group (`past` or `future`).","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"kaushikkrdy"},"content":"Format: `filter_interview past` or `filter_interview future`","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"kaushikkrdy"},"content":"* `filter_interview past` returns applicants with interviews that were in the past (compared to the current date and time).","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"kaushikkrdy"},"content":"* `filter_interview future` returns applicants with interviews that are coming up in the future (compared to the current date and time).","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"kaushikkrdy"},"content":"* Either `past` or `future` must be given as an input after `filter_interview`, and is case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"kaushikkrdy"},"content":"* Only one input must be given (`filter_interview past future` will not work).","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"kaushikkrdy"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"kaushikkrdy"},"content":"* If the current date and time is 29th October 2021, 1600, then `filter_interview past` or ","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"kaushikkrdy"},"content":" `filter_interview pAsT` will return applicants with interviews that were before and including","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"kaushikkrdy"},"content":"  29th October 2021, 1600.","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"kaushikkrdy"},"content":"* If the current date and time is 29th October 2021, 1600, then `filter_interview future` or ","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"kaushikkrdy"},"content":" `filter_interview fUTURE` will return applicants with interviews that are after 29th October 2021, 1600.","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"twothicc"},"content":"### Deleting an applicant : `delete`","lastModifiedDate":"2021-09-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"BryannYeap"},"content":"Deletes applicants by their index from the list in RecruitIn.","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"BryannYeap"},"content":"Format: `delete INDEX...`","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"BryannYeap"},"content":"* Deletes the applicant at the specified `INDEX`.","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"twothicc"},"content":"* The `INDEX` refers to the index number shown in the displayed applicants list.","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"BryannYeap"},"content":"* At least one `INDEX` must be given. (i.e. `delete ` is not a valid command)","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"twothicc"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-09-26"},{"lineNumber":328,"author":{"gitId":"twothicc"},"content":"* `INDEX` uses **1-based indexing**.","lastModifiedDate":"2021-09-26"},{"lineNumber":329,"author":{"gitId":"twothicc"},"content":"* Duplicate `INDEX`s are not allowed. (i.e. `delete 2 2` is not a valid command)","lastModifiedDate":"2021-11-01"},{"lineNumber":330,"author":{"gitId":"twothicc"},"content":"* `INDEX` should not exceed the total number of applicants in the displayed applicants list.","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `list`, `delete 1` deletes the 1st applicant listed in RecruitIn.","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `find n/John`, `delete 1` deletes the 1st applicant in the results of the `find` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":335,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `list`, `delete 2 4 7` deletes the 2nd, 4th and 7th applicants listed in RecruitIn.","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"twothicc"},"content":"### Showing search terms : `show`","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"twothicc"},"content":"Shows unique search terms available for a specific prefix.","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"twothicc"},"content":"Format: `show [n/] [p/] [e/] [r/] [et/] [s/] [l/] [y/] [t/]`","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"twothicc"},"content":"* Finds and displays a list of unique search terms available for a specific prefix.","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"twothicc"},"content":"* **At least 1** prefix must be given.","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"twothicc"},"content":"* Unique search terms will only be found for the **first** prefix input.","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"kaushikkrdy"},"content":"Suppose the applicant data includes 3 applicants with name and role `John, Software Developer`, `Mary, Cook` and `Mary, Cleaner`.","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"twothicc"},"content":"* `show n/` will display a list consisting of `John` and `Mary`.","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"twothicc"},"content":"* `show r/ n/` will display a list consisting of `Software Developer`, `Cleaner` and `Cook`.","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"TohWeiJie01"},"content":"### Marking an applicant : `mark`","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"TohWeiJie01"},"content":"Marks the specified applicant by index from the list in RecruitIn as \"Done\" (have been attended to).","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"TohWeiJie01"},"content":"Format: `mark INDEXâ€¦â€‹`","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"TohWeiJie01"},"content":"* Marks the applicant at the specified `INDEX` as \"Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"TohWeiJie01"},"content":"* An applicant that is has status \"Done\" cannot be marked again.","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"TohWeiJie01"},"content":"* The `INDEX` refers to the index number shown in the displayed applicants list.","lastModifiedDate":"2021-10-21"},{"lineNumber":362,"author":{"gitId":"TohWeiJie01"},"content":"* At least one `INDEX` must be given. (i.e. `mark ` is not a valid command)","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"TohWeiJie01"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"TohWeiJie01"},"content":"* `INDEX` uses **1-based indexing**.","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"twothicc"},"content":"* Duplicate `INDEX`s are not allowed. (i.e. `mark 2 2` is not a valid command)","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"TohWeiJie01"},"content":"* `INDEX` should not exceed the total number of applicants in the displayed applicants list.","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `list`, `mark 2` marks the 2nd applicant listed in RecruitIn as \"Done\".","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `find n/John`, `mark 1` marks the 1st applicant in the results of the `find` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `list`, `mark 2 4 6` marks the 2nd, 4th and 6th applicant listed in RecruitIn as \"Done\".","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"TohWeiJie01"},"content":"### Unmarking an applicant : `unmark`","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"TohWeiJie01"},"content":"Unmarks the specified applicant by index from the list in RecruitIn to \"Not Done\" (have not been attended to).","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"TohWeiJie01"},"content":"Format: `unmark INDEXâ€¦â€‹`","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"TohWeiJie01"},"content":"* Unmarks the applicant at the specified `INDEX` to \"Not Done\".","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"TohWeiJie01"},"content":"* An applicant that is has status \"Not Done\" cannot be unmarked again.","lastModifiedDate":"2021-11-04"},{"lineNumber":381,"author":{"gitId":"TohWeiJie01"},"content":"* The `INDEX` refers to the index number shown in the displayed applicants list.","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"TohWeiJie01"},"content":"* At least one `INDEX` must be given. (i.e. `unmark ` is not a valid command)","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"TohWeiJie01"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"TohWeiJie01"},"content":"* `INDEX` uses **1-based indexing**.","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"twothicc"},"content":"* Duplicate `INDEX`s are not allowed. (i.e. `delete 2 2` is not a valid command)","lastModifiedDate":"2021-11-01"},{"lineNumber":386,"author":{"gitId":"TohWeiJie01"},"content":"* `INDEX` should not exceed the total number of applicants in the displayed applicants list.","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `list`, `ummark 2` unmarks the 2nd applicant listed in RecruitIn to \"Not Done\".","lastModifiedDate":"2021-10-25"},{"lineNumber":390,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `find n/John`, `unmark 1` unmarks the 1st applicant in the results of the `find` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"kaushikkrdy"},"content":"* After using the command `list`, `unmark 2 4 6` unmarks the 2nd, 4th and 6th applicant listed in RecruitIn to \"Not Done\".","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"BryannYeap"},"content":"### Deleting marked applicants: `delete_marked`","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"BryannYeap"},"content":"Deletes all applicants that are marked as done.","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"BryannYeap"},"content":"Format: `delete_marked`","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"BryannYeap"},"content":"RecruitIn data is saved to the hard disk whenever there is a command that edits, updates or adds data.","lastModifiedDate":"2021-10-02"},{"lineNumber":408,"author":{"gitId":"BryannYeap"},"content":"There is no need to save data manually with a command. Data also automatically loads when the application runs.","lastModifiedDate":"2021-10-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":412,"author":{"gitId":"kaushikkrdy"},"content":"RecruitIn data is saved as a String in `/data/applicants.json` for applicant data.","lastModifiedDate":"2021-09-26"},{"lineNumber":413,"author":{"gitId":"kaushikkrdy"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-24"},{"lineNumber":414,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":415,"author":{"gitId":"kaushikkrdy"},"content":"Example of format of data for one applicant in applicants:","lastModifiedDate":"2021-09-24"},{"lineNumber":416,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":417,"author":{"gitId":"kaushikkrdy"},"content":"```JSON","lastModifiedDate":"2021-09-24"},{"lineNumber":418,"author":{"gitId":"BryannYeap"},"content":"{","lastModifiedDate":"2021-10-13"},{"lineNumber":419,"author":{"gitId":"BryannYeap"},"content":"  \"persons\": [","lastModifiedDate":"2021-10-13"},{"lineNumber":420,"author":{"gitId":"BryannYeap"},"content":"    {","lastModifiedDate":"2021-10-13"},{"lineNumber":421,"author":{"gitId":"kaushikkrdy"},"content":"      \"name\" : \"Alice Yeoh\",","lastModifiedDate":"2021-09-24"},{"lineNumber":422,"author":{"gitId":"kaushikkrdy"},"content":"      \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-24"},{"lineNumber":423,"author":{"gitId":"kaushikkrdy"},"content":"      \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-24"},{"lineNumber":424,"author":{"gitId":"BryannYeap"},"content":"      \"role\" : \"Software Engineering\",","lastModifiedDate":"2021-10-02"},{"lineNumber":425,"author":{"gitId":"kaushikkrdy"},"content":"      \"employmentType\" : \"Full time\",","lastModifiedDate":"2021-10-05"},{"lineNumber":426,"author":{"gitId":"BryannYeap"},"content":"      \"expectedSalary\" : \"3600\",","lastModifiedDate":"2021-10-02"},{"lineNumber":427,"author":{"gitId":"twothicc"},"content":"      \"levelOfEducation\" : \"High School\",","lastModifiedDate":"2021-10-09"},{"lineNumber":428,"author":{"gitId":"BryannYeap"},"content":"      \"experience\" : \"2\",","lastModifiedDate":"2021-10-02"},{"lineNumber":429,"author":{"gitId":"Pulpy-y"},"content":"      \"tagged\" : [],","lastModifiedDate":"2021-10-21"},{"lineNumber":430,"author":{"gitId":"TohWeiJie01"},"content":"      \"interview\" : \"-\",","lastModifiedDate":"2021-10-21"},{"lineNumber":431,"author":{"gitId":"TohWeiJie01"},"content":"      \"notes\" : \"This applicant is a suitable candidate for the job!\",","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"TohWeiJie01"},"content":"      \"done\": \"Not Done\"","lastModifiedDate":"2021-10-21"},{"lineNumber":433,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":434,"author":{"gitId":"BryannYeap"},"content":"  ]","lastModifiedDate":"2021-10-13"},{"lineNumber":435,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":436,"author":{"gitId":"kaushikkrdy"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":437,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":438,"author":{"gitId":"kaushikkrdy"},"content":"If your changes to the data file makes its format invalid, RecruitIn will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-24"},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"twothicc"},"content":"## Prefix Input Specifications ***{Advanced}***","lastModifiedDate":"2021-11-01"},{"lineNumber":444,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"twothicc"},"content":"**Note**: **Alphanumeric** characters refers specifically to characters a-z, A-Z and 0-9.","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":447,"author":{"gitId":"twothicc"},"content":"### Add Inputs","lastModifiedDate":"2021-11-01"},{"lineNumber":448,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":450,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":451,"author":{"gitId":"twothicc"},"content":"* Return to [**Add**](#adding-an-applicant-add).","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"twothicc"},"content":"* Return to [**Edit**](#editing-an-applicant--edit).","lastModifiedDate":"2021-11-01"},{"lineNumber":453,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":454,"author":{"gitId":"twothicc"},"content":"* ##### NAME `n/`","lastModifiedDate":"2021-11-01"},{"lineNumber":455,"author":{"gitId":"twothicc"},"content":"    * A NAME should only contain alphanumeric characters. Spaces between words are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":456,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":457,"author":{"gitId":"twothicc"},"content":"        * NAME inputs such as `John`, `Mary Sue` and `9ine 6ix` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"twothicc"},"content":"        * NAME inputs such as `J@hn`, `Mary S^e` and `B{}b` are not acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"twothicc"},"content":"* ##### PHONE_NUMBER `p/`","lastModifiedDate":"2021-11-01"},{"lineNumber":460,"author":{"gitId":"twothicc"},"content":"    * A PHONE_NUMBER should contain a minimum of 3 digits. No characters other than the digits 0-9 are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":461,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":462,"author":{"gitId":"twothicc"},"content":"        * PHONE_NUMBER inputs such as `99999999` and `999` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":463,"author":{"gitId":"twothicc"},"content":"        * PHONE_NUMBER inputs such as `9999 9999` and `88` are not acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":464,"author":{"gitId":"twothicc"},"content":"* ##### EMAIL_ADDRESS `e/`","lastModifiedDate":"2021-11-01"},{"lineNumber":465,"author":{"gitId":"twothicc"},"content":"    * An EMAIL_ADDRESS should contain a **local part** and a **domain part**, separated by an `@` character.","lastModifiedDate":"2021-11-01"},{"lineNumber":466,"author":{"gitId":"twothicc"},"content":"    * The **local part**:","lastModifiedDate":"2021-11-01"},{"lineNumber":467,"author":{"gitId":"twothicc"},"content":"        * must contain **at least 1** alphanumeric character.","lastModifiedDate":"2021-11-01"},{"lineNumber":468,"author":{"gitId":"twothicc"},"content":"        * It can contain alphanumeric characters separated by any 1 of these characters `+_.-`. (i.e. `John-a-bc`)","lastModifiedDate":"2021-11-02"},{"lineNumber":469,"author":{"gitId":"twothicc"},"content":"        * It must **start with** and **end with** an alphanumeric character.","lastModifiedDate":"2021-11-01"},{"lineNumber":470,"author":{"gitId":"twothicc"},"content":"    * The **domain part**:","lastModifiedDate":"2021-11-01"},{"lineNumber":471,"author":{"gitId":"twothicc"},"content":"        * must contain **at least 2** domain labels. Each domain label, **except the final domain label**, must start with an","lastModifiedDate":"2021-11-02"},{"lineNumber":472,"author":{"gitId":"twothicc"},"content":"          alphanumeric character and end with a `.`.","lastModifiedDate":"2021-11-02"},{"lineNumber":473,"author":{"gitId":"twothicc"},"content":"        * The final domain label must have **at least 2** alphanumeric characters, but does not need to end with","lastModifiedDate":"2021-11-02"},{"lineNumber":474,"author":{"gitId":"twothicc"},"content":"          a `.` unlike its preceding domain labels. (i.e. `John@u.sg` is valid)","lastModifiedDate":"2021-11-02"},{"lineNumber":475,"author":{"gitId":"twothicc"},"content":"        * The domain label can contain alphanumeric characters separated by `-`. (i.e. `John@u-u.sg`)","lastModifiedDate":"2021-11-02"},{"lineNumber":476,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":477,"author":{"gitId":"twothicc"},"content":"        * EMAIL_ADDRESS inputs such as `PeterJack_1190@example.com` and `e1234567@u.nus.edu` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"twothicc"},"content":"        * EMAIL_ADDRESS inputs such as `peterjack@example.c` and `peter..jack@example.com` are unacceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"twothicc"},"content":"* ##### ROLE `r/`","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"twothicc"},"content":"    * A ROLE should only contain **alphanumeric** characters. Spaces between words are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":482,"author":{"gitId":"twothicc"},"content":"        * ROLE inputs such as `Software Engineer` and `Sales Assistant` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"twothicc"},"content":"        * ROLE inputs such as `Softw@re Engin^^r` and `Day + Night Security Guard` are not acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":484,"author":{"gitId":"twothicc"},"content":"* ##### EMPLOYMENT_TYPE `et/`","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"twothicc"},"content":"    * An EMPLOYMENT_TYPE should be one of the following: `Full time`, `Part time`, `Temporary` or `Internship`.","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"twothicc"},"content":"    * An EMPLOYMENT_TYPE is **case-insensitive**.","lastModifiedDate":"2021-11-01"},{"lineNumber":487,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":488,"author":{"gitId":"twothicc"},"content":"        * EMPLOYMENT_TYPE inputs such as `Full time` and `Internship` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"twothicc"},"content":"        * EMPLOYMENT_TYPE inputs such as `fUlL tiMe` and `iNtErnShIP` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":490,"author":{"gitId":"twothicc"},"content":"        * EMPLOYMENT_TYPE inputs such as `Long term` are not acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":491,"author":{"gitId":"twothicc"},"content":"* ##### EXPECTED_SALARY `s/`","lastModifiedDate":"2021-11-01"},{"lineNumber":492,"author":{"gitId":"twothicc"},"content":"    * An EXPECTED_SALARY should only represent non-negative integers.","lastModifiedDate":"2021-11-01"},{"lineNumber":493,"author":{"gitId":"twothicc"},"content":"        * Non-negative integers range from 0 to 2^(31) - 1 inclusive.","lastModifiedDate":"2021-11-01"},{"lineNumber":494,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":495,"author":{"gitId":"twothicc"},"content":"        * EXPECTED_SALARY inputs such as `0` and `3500` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":496,"author":{"gitId":"twothicc"},"content":"        * EXPECTED_SALARY inputs such as `-600` and `~350` are not acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":497,"author":{"gitId":"twothicc"},"content":"* ##### LEVEL_OF_EDUCATION `l/`","lastModifiedDate":"2021-11-01"},{"lineNumber":498,"author":{"gitId":"twothicc"},"content":"    * A LEVEL_OF_EDUCATION should be one of the following: `Elementary`, `Middle School`, `High School`, `University`, `Bachelors`, `Masters` or `PhD`.","lastModifiedDate":"2021-11-01"},{"lineNumber":499,"author":{"gitId":"twothicc"},"content":"    * A LEVEL_OF_EDUCATION is **case-insensitive**.","lastModifiedDate":"2021-11-01"},{"lineNumber":500,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":501,"author":{"gitId":"twothicc"},"content":"        * LEVEL_OF_EDUCATION inputs such as `Middle School` and `PhD` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":502,"author":{"gitId":"twothicc"},"content":"        * LEVEL_OF_EDUCATION inputs such as `miDDlE scHoOL` and `phD` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":503,"author":{"gitId":"twothicc"},"content":"        * LEVEL_OF_EDUCATION inputs such as `Kindergarten` are not acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":504,"author":{"gitId":"twothicc"},"content":"* ##### YEARS_OF_EXPERIENCE `y/`","lastModifiedDate":"2021-11-01"},{"lineNumber":505,"author":{"gitId":"Pulpy-y"},"content":"    * A YEARS_OF_EXPERIENCE should be a **non-negative number** with intervals of **0.5** and smaller than or equals to **67** (re-employment age in Singapore).","lastModifiedDate":"2021-11-04"},{"lineNumber":506,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":507,"author":{"gitId":"twothicc"},"content":"        * YEARS_OF_EXPERIENCE inputs such as `0` and `10` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":508,"author":{"gitId":"Pulpy-y"},"content":"        * YEARS_OF_EXPERIENCE inputs such as `0.5` and `3.0` are acceptable.","lastModifiedDate":"2021-11-03"},{"lineNumber":509,"author":{"gitId":"Pulpy-y"},"content":"        * YEARS_OF_EXPERIENCE inputs such as `-1`, `3.1`, and `100` are not acceptable.","lastModifiedDate":"2021-11-04"},{"lineNumber":510,"author":{"gitId":"twothicc"},"content":"* ##### TAG `t/`","lastModifiedDate":"2021-11-01"},{"lineNumber":511,"author":{"gitId":"twothicc"},"content":"    * A TAG should only contain alphanumeric characters. Spaces between words are **not** allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":512,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":513,"author":{"gitId":"twothicc"},"content":"        * TAG inputs such as `friends` and `colleagues` are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":514,"author":{"gitId":"twothicc"},"content":"        * TAG inputs such as `best friends`, `old colleagues` and `seni@r` are not allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":515,"author":{"gitId":"twothicc"},"content":"* ##### INTERVIEW `i/`","lastModifiedDate":"2021-11-01"},{"lineNumber":516,"author":{"gitId":"Pulpy-y"},"content":"    * An INTERVIEW should be on a legitimate date and follows the DateTime format `yyyy-M-d, H:m`. (Year should be strictly 4-digit while others can be either 1 or 2 digit)","lastModifiedDate":"2021-11-03"},{"lineNumber":517,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":518,"author":{"gitId":"Pulpy-y"},"content":"        * INTERVIEW inputs such as `2021-08-09, 13:00` and `2022-1-3, 3:00` are acceptable.","lastModifiedDate":"2021-11-03"},{"lineNumber":519,"author":{"gitId":"Pulpy-y"},"content":"        * INTERVIEW inputs such as `morning`, `2021.10.21`, `2021-10-22 13:00` and `2021-02-30, 10:30` (not an existing date) are not acceptable.","lastModifiedDate":"2021-11-03"},{"lineNumber":520,"author":{"gitId":"twothicc"},"content":"* ##### NOTES `nt/`","lastModifiedDate":"2021-11-01"},{"lineNumber":521,"author":{"gitId":"twothicc"},"content":"    * A NOTES can contain any character, number or symbol as there are no restrictions in place.","lastModifiedDate":"2021-11-01"},{"lineNumber":522,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":523,"author":{"gitId":"twothicc"},"content":"        * NOTES inputs such as `This candidate is good!` and `@Applicant123 is suitab13 for th3 job!` are acceptable.","lastModifiedDate":"2021-11-01"},{"lineNumber":524,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":527,"author":{"gitId":"twothicc"},"content":"### Find Inputs","lastModifiedDate":"2021-11-01"},{"lineNumber":528,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":529,"author":{"gitId":"twothicc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":530,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":531,"author":{"gitId":"twothicc"},"content":"* Return to [**Find**](#finding-an-applicant--find)","lastModifiedDate":"2021-11-01"},{"lineNumber":532,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":533,"author":{"gitId":"twothicc"},"content":"* ##### NAME `n/`","lastModifiedDate":"2021-11-01"},{"lineNumber":534,"author":{"gitId":"twothicc"},"content":"    * A NAME is considered matching with a ***Name*** only if **at least 1** keyword is equal to **at least 1** word in the ***Name***.","lastModifiedDate":"2021-11-01"},{"lineNumber":535,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as NAME input must comply with input specifications for add given [**here**](#name-n).","lastModifiedDate":"2021-11-01"},{"lineNumber":536,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":537,"author":{"gitId":"twothicc"},"content":"        * A `John` input can match with ***Name*** s such as `John Tan` or `John Lee`.","lastModifiedDate":"2021-11-01"},{"lineNumber":538,"author":{"gitId":"twothicc"},"content":"        * A `John Mary` input can match with ***Name*** s such as `Mary John`, `Mary Lee` or `Long John`.","lastModifiedDate":"2021-11-01"},{"lineNumber":539,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":540,"author":{"gitId":"twothicc"},"content":"* ##### PHONE_NUMBER `p/`","lastModifiedDate":"2021-11-01"},{"lineNumber":541,"author":{"gitId":"twothicc"},"content":"    * A PHONE_NUMBER is considered matching with a ***Contact Number*** only if **at least 1** keyword is equal to **at least 1** word in the ***Contact Number***","lastModifiedDate":"2021-11-01"},{"lineNumber":542,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as PHONE_NUMBER input must comply with input specifications for add given [**here**](#phone_number-p).","lastModifiedDate":"2021-11-01"},{"lineNumber":543,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":544,"author":{"gitId":"twothicc"},"content":"        * A `99999999` input can only match with ***Contact Number*** s that are `99999999`.","lastModifiedDate":"2021-11-01"},{"lineNumber":545,"author":{"gitId":"twothicc"},"content":"        * A `99999999 88888888` input can only match with ***Contact Number*** s that are `99999999` and `88888888`.","lastModifiedDate":"2021-11-01"},{"lineNumber":546,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":547,"author":{"gitId":"twothicc"},"content":"* ##### EMAIL_ADDRESS `e/`","lastModifiedDate":"2021-11-01"},{"lineNumber":548,"author":{"gitId":"twothicc"},"content":"    * An EMAIL_ADDRESS is considered matching with an ***Email Address*** only if **at least 1** keyword is equal to **at least 1** word in the ***Email Address***.","lastModifiedDate":"2021-11-01"},{"lineNumber":549,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as EMAIL_ADDRESS input must comply with input specifications for add given [**here**](#email_address-e).","lastModifiedDate":"2021-11-01"},{"lineNumber":550,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":551,"author":{"gitId":"twothicc"},"content":"        * A `alexyeoh@example.com` input can match with ***Email*** s such as `alexyeoh@example.com`.","lastModifiedDate":"2021-11-01"},{"lineNumber":552,"author":{"gitId":"twothicc"},"content":"        * A `alexyeoh@example.com marysue@gmail.com` input can match with ***Email*** s such as `alexyeoh@example.com`","lastModifiedDate":"2021-11-01"},{"lineNumber":553,"author":{"gitId":"twothicc"},"content":"          and `marysue@gmail.com`.","lastModifiedDate":"2021-11-01"},{"lineNumber":554,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":555,"author":{"gitId":"twothicc"},"content":"* ##### ROLE `r/`","lastModifiedDate":"2021-11-01"},{"lineNumber":556,"author":{"gitId":"twothicc"},"content":"    * A ROLE is considered matching with a ***Role*** only if **each of every** provided keyword is equal to **at least 1** word in the ***Role***.","lastModifiedDate":"2021-11-01"},{"lineNumber":557,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as ROLE input must comply with input specifications for add given [**here**](#role-r).","lastModifiedDate":"2021-11-01"},{"lineNumber":558,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":559,"author":{"gitId":"twothicc"},"content":"        * A `Software` input can match with ***Role*** s such as `Software Engineer`, `Software` or `Software Developer`","lastModifiedDate":"2021-11-01"},{"lineNumber":560,"author":{"gitId":"twothicc"},"content":"        * A `Software Engineer` input can match with ***Role*** s such as `Software Engineer` or `Senior Software Engineer`","lastModifiedDate":"2021-11-01"},{"lineNumber":561,"author":{"gitId":"twothicc"},"content":"          but not with ***Role*** s such as `Software` or `Software Developer`.","lastModifiedDate":"2021-11-01"},{"lineNumber":562,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":563,"author":{"gitId":"twothicc"},"content":"* ##### EMPLOYMENT_TYPE `et/`","lastModifiedDate":"2021-11-01"},{"lineNumber":564,"author":{"gitId":"twothicc"},"content":"    * An EMPLOYMENT_TYPE is considered matching with an ***Employment Type*** only if it **starts with any** of the keywords in the ***Employment Type***.","lastModifiedDate":"2021-11-01"},{"lineNumber":565,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as EMPLOYMENT_TYPE input must comply with input specifications for add given [**here**](#employment_type-et).","lastModifiedDate":"2021-11-01"},{"lineNumber":566,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":567,"author":{"gitId":"twothicc"},"content":"        * A `Full time` or `full time` or `full` input will match only with ***Employment Type*** s that are ```Full time```","lastModifiedDate":"2021-11-01"},{"lineNumber":568,"author":{"gitId":"twothicc"},"content":"        * A ```Full part``` input will match with all ***Employment Type*** s that are ```Full time``` or ```Part time```","lastModifiedDate":"2021-11-01"},{"lineNumber":569,"author":{"gitId":"twothicc"},"content":"        * A ```temp Intern``` input will match with all ***Employment Type*** s that are ```Temporary``` or ```Internship```","lastModifiedDate":"2021-11-01"},{"lineNumber":570,"author":{"gitId":"twothicc"},"content":"        * A ```full time bob``` input will throw an exception as ```bob``` is not a term any of the ***Employment Type*** s start","lastModifiedDate":"2021-11-01"},{"lineNumber":571,"author":{"gitId":"twothicc"},"content":"          with.","lastModifiedDate":"2021-11-01"},{"lineNumber":572,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":573,"author":{"gitId":"twothicc"},"content":"* ##### EXPECTED_SALARY `s/`","lastModifiedDate":"2021-11-01"},{"lineNumber":574,"author":{"gitId":"twothicc"},"content":"    * An EXPECTED_SALARY is considered matching with a ***Expected Salary*** only if **at least 1** keyword is within a range of `500` from **at least 1** keyword in the ***Expected Salary***.","lastModifiedDate":"2021-11-01"},{"lineNumber":575,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as EXPECTED_SALARY input must comply with input specifications for add given [**here**](#expected_salary-s).","lastModifiedDate":"2021-11-01"},{"lineNumber":576,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":577,"author":{"gitId":"twothicc"},"content":"        * A `3000` input can match with ***Expected Salary*** s that range from `2500` to `3500` inclusive.","lastModifiedDate":"2021-11-01"},{"lineNumber":578,"author":{"gitId":"twothicc"},"content":"        * A `2500 5000` input can match with ***Expected Salary*** s from the ranges `2000` to `3000` inclusive, and `4500` to `5500` inclusive.","lastModifiedDate":"2021-11-01"},{"lineNumber":579,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":580,"author":{"gitId":"twothicc"},"content":"* ##### LEVEL_OF_EDUCATION `l/`","lastModifiedDate":"2021-11-01"},{"lineNumber":581,"author":{"gitId":"TohWeiJie01"},"content":"    * A LEVEL_OF_EDUCATION is considered matching with a ***Level of Education*** only if it **starts with any** of the keywords in the ***Level of Education***.    ","lastModifiedDate":"2021-11-04"},{"lineNumber":582,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as LEVEL_OF_EDUCATION input must comply with input specifications for add given [**here**](#level_of_education-l).","lastModifiedDate":"2021-11-01"},{"lineNumber":583,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":584,"author":{"gitId":"TohWeiJie01"},"content":"        * A `H` input can match with ***Level of Education***s such `High School`, but not with *Level of Education*s such as `PhD`.","lastModifiedDate":"2021-11-04"},{"lineNumber":585,"author":{"gitId":"TohWeiJie01"},"content":"        * A `High School` input will match with all *Level of Education*s that are `High School`, but not with *Level of Education*s such as `Middle School`.","lastModifiedDate":"2021-11-04"},{"lineNumber":586,"author":{"gitId":"TohWeiJie01"},"content":"        * A `High Middle` input will match with all *Level of Education*s that are `High School` and `Middle School`.","lastModifiedDate":"2021-11-04"},{"lineNumber":587,"author":{"gitId":"TohWeiJie01"},"content":"        * A `High School bob` input is invalid as `bob` is not a term any of the *Level of Education*s start with.","lastModifiedDate":"2021-11-04"},{"lineNumber":588,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":589,"author":{"gitId":"twothicc"},"content":"* ##### YEARS_OF_EXPERIENCE `y/`","lastModifiedDate":"2021-11-01"},{"lineNumber":590,"author":{"gitId":"twothicc"},"content":"    * A YEARS_OF_EXPERIENCE is considered matching with a ***Years Of Experience*** only if the value represented by **at least 1** keyword is larger than or equal to the value represented by the ***Years Of Experience***.","lastModifiedDate":"2021-11-01"},{"lineNumber":591,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as YEARS_OF_EXPERIENCE input must comply with input specifications for add given [**here**](#years_of_experience-y).","lastModifiedDate":"2021-11-01"},{"lineNumber":592,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":593,"author":{"gitId":"twothicc"},"content":"        * A `3` input can match with ***Year Of Experience*** s that are higher than or equal to 3.","lastModifiedDate":"2021-11-01"},{"lineNumber":594,"author":{"gitId":"twothicc"},"content":"        * A `2 3` input can match with ***Year Of Experience*** s that are higher than or equal to 2.","lastModifiedDate":"2021-11-01"},{"lineNumber":595,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":596,"author":{"gitId":"twothicc"},"content":"* ##### TAG `t/`","lastModifiedDate":"2021-11-01"},{"lineNumber":597,"author":{"gitId":"twothicc"},"content":"    * Each applicant can have many stored tags, so ***Tags*** will be used to refer to each applicant\u0027s stored ***Tag*** s.","lastModifiedDate":"2021-11-01"},{"lineNumber":598,"author":{"gitId":"twothicc"},"content":"    * A TAG is considered matching with a ***Tags*** only if ***at least 1*** keyword is **exactly equals** to **at least 1** ***Tag*** within the ***Tags***..","lastModifiedDate":"2021-11-01"},{"lineNumber":599,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as TAG input must comply with input specifications for add given [**here**](#tag-t).","lastModifiedDate":"2021-11-01"},{"lineNumber":600,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":601,"author":{"gitId":"twothicc"},"content":"        * An `old` input can match with applicants that have the ***Tag*** `old`","lastModifiedDate":"2021-11-01"},{"lineNumber":602,"author":{"gitId":"twothicc"},"content":"        * An `experienced old` input can match with applicants that have the ***Tag*** `experienced`, or `old`, or both.","lastModifiedDate":"2021-11-01"},{"lineNumber":603,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":604,"author":{"gitId":"twothicc"},"content":"* ##### INTERVIEW `i/`","lastModifiedDate":"2021-11-01"},{"lineNumber":605,"author":{"gitId":"Pulpy-y"},"content":"    * An INTERVIEW is considered matching with a ***Interview*** only if the keyword is a whole word (i.e. separated by space) contained in the ***Interview***  .","lastModifiedDate":"2021-11-03"},{"lineNumber":606,"author":{"gitId":"Pulpy-y"},"content":"    * All keywords provided as INTERVIEW input must comply with the displayed time format (e.g. 20 March 2021, 10:30).","lastModifiedDate":"2021-11-03"},{"lineNumber":607,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":608,"author":{"gitId":"twothicc"},"content":"        * A `2021` input can match with applicants that have the ***Interview*** in year 2021.","lastModifiedDate":"2021-11-01"},{"lineNumber":609,"author":{"gitId":"twothicc"},"content":"        * A `20:21` input can match with applicants that have the ***Interview*** at time 20:21 on any date.","lastModifiedDate":"2021-11-01"},{"lineNumber":610,"author":{"gitId":"Pulpy-y"},"content":"        * A `mar` input can match with applicants that have the ***Interview*** in March.","lastModifiedDate":"2021-11-03"},{"lineNumber":611,"author":{"gitId":"Pulpy-y"},"content":"        * However, a `9:30` input cannot be matched with the ***Interview*** displayed as `20 Mar 2021, 09:30` (as 9:30 is not a whole word but 09:30 is).","lastModifiedDate":"2021-11-03"},{"lineNumber":612,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":613,"author":{"gitId":"twothicc"},"content":"* ##### NOTES `nt/`","lastModifiedDate":"2021-11-01"},{"lineNumber":614,"author":{"gitId":"twothicc"},"content":"    * NOTES are considered matching with  ***Notes*** only if  ***Notes*** contains **the entire** keyword.","lastModifiedDate":"2021-11-01"},{"lineNumber":615,"author":{"gitId":"twothicc"},"content":"    * All keywords provided as NOTES input must comply with input specifications for add given [**here**](#notes-nt).","lastModifiedDate":"2021-11-01"},{"lineNumber":616,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":617,"author":{"gitId":"twothicc"},"content":"        * A `good in this field` input can match with applicants that have ***Notes*** containing the `good in this field`.","lastModifiedDate":"2021-11-01"},{"lineNumber":618,"author":{"gitId":"twothicc"},"content":"        * A `passionate` input can match with applicants that have Notes such as `passionate but inexperienced` and `passionate and experienced`.","lastModifiedDate":"2021-11-01"},{"lineNumber":619,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":620,"author":{"gitId":"twothicc"},"content":"* ##### DONE `d/`","lastModifiedDate":"2021-11-01"},{"lineNumber":621,"author":{"gitId":"TohWeiJie01"},"content":"    * An DONE is considered matching only if the ***Done*** input is either `Done` or `Not Done`.    ","lastModifiedDate":"2021-11-04"},{"lineNumber":622,"author":{"gitId":"twothicc"},"content":"    * For example:","lastModifiedDate":"2021-11-01"},{"lineNumber":623,"author":{"gitId":"twothicc"},"content":"        * A `Done` input can match with applicants that have their ***Done*** status marked as Done.","lastModifiedDate":"2021-11-01"},{"lineNumber":624,"author":{"gitId":"twothicc"},"content":"        * A `Not Done` input can match with applicants that have their ***Done*** status unmarked as Not Done.","lastModifiedDate":"2021-11-01"},{"lineNumber":625,"author":{"gitId":"TohWeiJie01"},"content":"        * Any other non-empty input is considered invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":627,"author":{"gitId":"twothicc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":629,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":631,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"kaushikkrdy"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":634,"author":{"gitId":"kaushikkrdy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous RecruitIn home folder.","lastModifiedDate":"2021-09-24"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"TohWeiJie01"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL_ADDRESS r/ROLE et/EMPLOYMENT_TYPE s/EXPECTED_SALARY l/LEVEL_OF_EDUCATION y/YEARS_OF_EXPERIENCE [t/TAG] [i/INTERVIEW] [nt/NOTES]â€‹` \u003cbr\u003e e.g., `add n/Bob p/87654321 e/bob@gmail.com r/Software Engineering et/Full time s/4000 l/High School y/2 t/friend i/2021-10-21, 20:00 nt/This applicant is a good candidate for the job!`","lastModifiedDate":"2021-10-26"},{"lineNumber":643,"author":{"gitId":"TohWeiJie01"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL_ADDRESS] [r/ROLE] [et/EMPLOYMENT_TYPE] [s/EXPECTED_SALARY] [l/LEVEL_OF_EDUCATION] [y/YEARS_OF_EXPERIENCE] [t/TAG] [i/INTERVIEW] [nt/NOTES]` \u003cbr\u003e e.g., `edit 1 p/90909090 s/4500`","lastModifiedDate":"2021-10-26"},{"lineNumber":644,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":645,"author":{"gitId":"BryannYeap"},"content":"**Delete** | `delete INDEX...`\u003cbr\u003e e.g., `delete 3 2 5 4`","lastModifiedDate":"2021-10-21"},{"lineNumber":646,"author":{"gitId":"TohWeiJie01"},"content":"**Find** | `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL_ADDRESS] [r/ROLE] [et/EMPLOYMENT_TYPE] [s/EXPECTED_SALARY] [l/LEVEL_OF_EDUCATION] [y/YEARS_OF_EXPERIENCE] [t/TAG] [i/INTERVIEW] [nt/NOTES] [d/DONE]`\u003cbr\u003e e.g., `find n/John Mary`","lastModifiedDate":"2021-10-26"},{"lineNumber":647,"author":{"gitId":"twothicc"},"content":"**Show** | `show [n/] [p/] [e/] [r/] [et/] [s/] [l/] [y/] [t/]`\u003cbr\u003e e.g., `show r/ n/`","lastModifiedDate":"2021-10-21"},{"lineNumber":648,"author":{"gitId":"TohWeiJie01"},"content":"**Mark** | `mark INDEXâ€¦â€‹`\u003cbr\u003e e.g., `mark 3`","lastModifiedDate":"2021-10-21"},{"lineNumber":649,"author":{"gitId":"TohWeiJie01"},"content":"**Unmark** | `unmark INDEXâ€¦â€‹`\u003cbr\u003e e.g., `unmark 3`","lastModifiedDate":"2021-10-21"},{"lineNumber":650,"author":{"gitId":"kaushikkrdy"},"content":"**Delete marked** | `delete_marked`","lastModifiedDate":"2021-10-25"},{"lineNumber":651,"author":{"gitId":"TohWeiJie01"},"content":"**Clear**| `clear`","lastModifiedDate":"2021-11-04"},{"lineNumber":652,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaushikkrdy":59,"twothicc":375,"TohWeiJie01":46,"Pulpy-y":13,"-":128,"BryannYeap":31}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"twothicc"},"content":"    content: \"RecruitIn\";","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"twothicc":1,"-":294}},{"path":"docs/diagrams/FilterInterviewCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"start","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":":User executes Filter Interview Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"if () then ([command is","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"valid with valid input])","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"    if () then ([input is \u0027past])","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"    :List of applicants filtered","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"    for those with interviews that have","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"    passed;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"    else ([input is \u0027future\u0027])","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"    :List of applicants filtered","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"    for those with interviews that are","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"    upcoming;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"    endif","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"    :GUI Result Display updated with","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"    correct list of applicants;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"else([else])","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"endif","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"stop","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"kaushikkrdy":31}},{"path":"docs/diagrams/FilterInterviewCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"!include style.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"participant \":FilterInterviewCommandParser\" as FilterInterviewCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"participant \":FilterInterviewPastCommand\" as FilterInterviewPastCommand LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"[-\u003e LogicManager : execute(\"filter_interview past\")","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter_interview past\")","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"create FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"AddressBookParser -\u003e FilterInterviewCommandParser: FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"activate FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"deactivate FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"AddressBookParser -\u003e FilterInterviewCommandParser : parse(\" past\")","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"activate FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"create FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewCommandParser -\u003e FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"activate FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewPastCommand --\u003e FilterInterviewCommandParser :","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"deactivate FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewCommandParser --\u003e AddressBookParser :","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"deactivate FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewCommandParser -[hidden]-\u003e AddressBookParser:","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"destroy FilterInterviewCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"LogicManager -\u003e FilterInterviewPastCommand : execute()","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"activate FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewPastCommand -\u003e Model : updateFilteredPersonList()","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"activate Model","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"Model --\u003e FilterInterviewPastCommand :","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"deactivate Model","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"create CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewPastCommand -\u003e CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"CommandResult --\u003e FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"FilterInterviewPastCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"deactivate FilterInterviewPastCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"kaushikkrdy":72}},{"path":"docs/diagrams/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"@startuml","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"start","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":":User inputs Find Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":":Logic executes Find Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":":Find Command Parser extracts present prefixes;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"if () then ([Keywords are valid])","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"    :Model filters a list of persons;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"    :GUI updates filtered person list;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"else ([else])","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"endif","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"stop","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Pulpy-y":16}},{"path":"docs/diagrams/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"@startuml","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"participant \"find_command:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"end box","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"[-\u003e LogicManager : execute(\"find n/Alex y/0\")","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"activate LogicManager","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/Alex y/0\")","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"create FindCommandParser","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"AddressBookParser -\u003e FindCommandParser: FindCommandParser()","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\" n/Alex y/0\")","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"create FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"activate FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"FindCommand --\u003e FindCommandParser : find_command","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"FindCommandParser --\u003e AddressBookParser :find_command","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"AddressBookParser --\u003e LogicManager : find_command","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"activate FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"FindCommand -\u003e Model : updateFilteredPersonList()","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"activate Model","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"Model --\u003e FindCommand :","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"deactivate Model","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"Pulpy-y"},"content":"create CommandResult","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"Pulpy-y"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Pulpy-y"},"content":"activate CommandResult","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"Pulpy-y"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"Pulpy-y"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"Pulpy-y"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"Pulpy-y"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"Pulpy-y"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Pulpy-y":71}},{"path":"docs/diagrams/ShowCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"start","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":":User executes Show Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"if () then ([command is","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"valid with valid","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"prefix])","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"    :Retrieve list of unique inputs","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"    for given prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"    :GUI Result Display updated with","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"    list of unique inputs;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"else ([else])","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"endif","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"stop","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":19}},{"path":"docs/diagrams/ShowCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"!include style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"participant \":ShowCommandParser\" as ShowCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"participant \":ShowCommand\" as ShowCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"[-\u003e LogicManager : execute(\"show n/\")","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"show n/\")","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"create ShowCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"AddressBookParser -\u003e ShowCommandParser: ShowCommandParser()","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"activate ShowCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"deactivate ShowCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"AddressBookParser -\u003e ShowCommandParser : parse(\" n/\")","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"activate ShowCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"create ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommandParser -\u003e ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"activate ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommand --\u003e ShowCommandParser :","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"deactivate ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommandParser --\u003e AddressBookParser :","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"deactivate ShowCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommandParser -[hidden]-\u003e AddressBookParser:","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"destroy ShowCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"LogicManager -\u003e ShowCommand : execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"activate ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommand -\u003e ShowCommand : getUniqueCategoryInputs()","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"activate ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommand -\u003e Model : getAddressBook()","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"Model -\u003e ShowCommand: addressBook","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommand --\u003e ShowCommand: \"Here are all the names present\\nAlex Yeoh\\nBernice Yu\\nCharlotte Oliviero\\nDavid Li\\nIrfan Ibrahim\\nRoy Balakrishnan\"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"deactivate ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"create CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommand -\u003e CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"CommandResult --\u003e ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"ShowCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"deactivate ShowCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"kaushikkrdy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"kaushikkrdy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"kaushikkrdy"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":77}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"title: RecruitIn","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-2/tp/actions)","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F11-2/tp/branch/master/graph/badge.svg?token\u003d5X6ISPCNZA)](https://codecov.io/gh/AY2122S1-CS2103T-F11-2/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"**RecruitIn is a desktop application created for tech savvy recruiters in Singapore who are looking to manage potential job candidates as contacts.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"* If you are interested in using RecruitIn, head over to the [_Quick Start_ section of the **User Guide**](https://ay2122s1-cs2103t-f11-2.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"* If you are interested about developing RecruitIn, the [**Developer Guide**](https://ay2122s1-cs2103t-f11-2.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"twothicc":1,"-":14,"BryannYeap":4}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"     * Returns true if {@code s} represents an unsigned integer","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"     * e.g. empty string, \"-1\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"    public static boolean isUnsignedInteger(String s) {","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"     * Removes any leading 0s in {@code s}.","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"     * @param s cannot be null","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"    public static String removeLeadingZeroes(String s) {","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"        while (index \u003c s.length() \u0026\u0026 s.charAt(index) \u003d\u003d \u00270\u0027) {","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"            index++;","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"        return s.substring(index);","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"     * Returns true if {@code s1} and {@code s2} represent unsigned integers with a difference of at most {@code n}.","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"     * Unsigned integers: 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"     * Will return false if {@code s1} or {@code s2} are other non-null string inputs that are not unsigned integers,","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"     * or if the difference of their integer representations are more than n.","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"     * Other non-null string inputs: empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed),","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"     * \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"     * @throws NullPointerException if {@code s1} or {@code s2} are null.","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"    public static boolean areUnsignedIntegersWithinRange(String s1, String s2, int n) {","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"        CollectionUtil.requireAllNonNull(s1, s2);","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"            int value1 \u003d Integer.parseInt(s1);","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"            int value2 \u003d Integer.parseInt(s2);","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"            return isUnsignedInteger(s1) \u0026\u0026 isUnsignedInteger(s2) \u0026\u0026 Math.abs(value1 - value2) \u003c\u003d n;","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Pulpy-y"},"content":"     * Returns true if the double represented by {@code s1} is larger than or equals to that by {@code s2}.","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"Pulpy-y"},"content":"     * @throws NullPointerException if {@code s1} or {@code s2} are null.","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Pulpy-y"},"content":"    public static boolean isDoubleLargerOrEqualToValue(String s1, String s2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"Pulpy-y"},"content":"        CollectionUtil.requireAllNonNull(s1, s2);","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Pulpy-y"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Pulpy-y"},"content":"            double value1 \u003d Double.parseDouble(s1);","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"Pulpy-y"},"content":"            double value2 \u003d Double.parseDouble(s2);","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"Pulpy-y"},"content":"            return (value1 \u003e\u003d value2);","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Pulpy-y"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Pulpy-y"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Pulpy-y":15,"-":68,"BryannYeap":54}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"            + PREFIX_EMPLOYMENT_TYPE + \"EMPLOYMENT TYPE \"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"            + PREFIX_EXPECTED_SALARY + \"EXPECTED SALARY \"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"            + PREFIX_LEVEL_OF_EDUCATION + \"LEVEL OF EDUCATION \"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"            + PREFIX_EXPERIENCE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            + \"[\" + PREFIX_INTERVIEW + \"INTERVIEW TIME]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            + \"[\" + PREFIX_NOTES + \"NOTES]\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"            + PREFIX_ROLE + \"Software Engineer \"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"            + PREFIX_EMPLOYMENT_TYPE + \"Full time \"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"            + PREFIX_EXPECTED_SALARY + \"3500 \"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            + PREFIX_LEVEL_OF_EDUCATION + \"PhD \"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"            + PREFIX_EXPERIENCE + \"3 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"            + PREFIX_INTERVIEW + \"2021-10-21, 12:00 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"            + PREFIX_NOTES + \"This applicant is a good candidate for the job! \";","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"            List\u003cPerson\u003e duplicates \u003d model.getDuplicate(toAdd);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"            assert !duplicates.isEmpty() : \"There should be at least 1 duplicate.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"            throw new CommandException(createDuplicateMessage(duplicates, toAdd));","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"     * Creates a UI message informing user of existing duplicate applicants.","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"     * {@code duplicates} provided must contain at least 1 applicant.","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"     * @param duplicates List of applicants who share the same phone number and email with {@code editedPerson}","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"     * @param toCheck applicant to be checked for duplicates with","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"     * @return String accumulation of all duplicate applicants","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"    private String createDuplicateMessage(List\u003cPerson\u003e duplicates, Person toCheck) {","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"        assert toCheck !\u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"        assert duplicates !\u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"        assert !duplicates.isEmpty() : \"There should be at least 1 duplicate\";","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"        for (Person duplicate : duplicates) {","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"            stringBuilder.append(duplicate);","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"        return \"The applicant to be added \" + toCheck","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"                + \" shares either the same phone number or email as the following applicant(s):\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"                + stringBuilder;","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaushikkrdy":4,"TohWeiJie01":8,"twothicc":30,"Pulpy-y":6,"-":60,"BryannYeap":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"            + \": Deletes the applicants identified by the index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"            + \"Parameters: INDEX...\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 4 7\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person(s): \\n%1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    private final Index[] targetIndexes;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    public DeleteCommand(Index[] targetIndexes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"            result.insert(0, personToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, result.toString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"                \u0026\u0026 Arrays.equals(targetIndexes, ((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":45,"BryannYeap":14}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMarkedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":" * Deletes all applicants in the address book that are marked as done.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"public class DeleteMarkedCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    public static final String COMMAND_WORD \u003d \"delete_marked\";","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted all applicants that were marked as done: \\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_NONE_DELETED \u003d \"\\nNO APPLICANTS WERE MARKED AS DONE; NONE DELETED\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        model.updateFilteredPersonList((person) -\u003e person.getDone().getDoneStatus().equals(Done.STATUS_DONE));","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        List\u003cPerson\u003e doneList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        while (!doneList.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"            Person personToDelete \u003d doneList.get(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"            result.append(personToDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"                result.toString().isEmpty() ? MESSAGE_NONE_DELETED : result));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BryannYeap":42}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE] \"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"            + \"[\" + PREFIX_EMPLOYMENT_TYPE + \"EMPLOYMENT TYPE] \"","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"            + \"[\" + PREFIX_EXPECTED_SALARY + \"EXPECTED_SALARY]\"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"            + \"[\" + PREFIX_LEVEL_OF_EDUCATION + \"LEVEL OF EDUCATION] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"            + \"[\" + PREFIX_EXPERIENCE + \"YEARS_OF_EXPERIENCE] \"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"            + \"[\" + PREFIX_INTERVIEW + \"INTERVIEW] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"            + \"[\" + PREFIX_NOTES + \"NOTES]\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \";","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        // check if editing this person will lead to duplicates in the addressbook","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"        if (model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"            List\u003cPerson\u003e duplicates \u003d model.getDuplicate(editedPerson);","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"            assert !duplicates.isEmpty() : \"There should be at least 1 duplicate.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"            ArrayList\u003cPerson\u003e disallowedDuplicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"            // allow changes only if it is to the same person","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"            // disallow changes that may affect other applicants that is not being edited","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"            for (Person duplicate : duplicates) {","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"                if (!duplicate.isSamePerson(personToEdit)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"                    disallowedDuplicates.add(duplicate);","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"                }","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"            if (!disallowedDuplicates.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"                throw new CommandException(createDuplicateMessage(disallowedDuplicates, editedPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"        Role updatedRole \u003d editPersonDescriptor.getRole().orElse(personToEdit.getRole());","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentType updatedEmploymentType \u003d editPersonDescriptor","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"kaushikkrdy"},"content":"                .getEmploymentType().orElse(personToEdit.getEmploymentType());","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalary updatedExpectedSalary \u003d editPersonDescriptor.getExpectedSalary()","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"BryannYeap"},"content":"                .orElse(personToEdit.getExpectedSalary());","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducation updatedLevelOfEducation \u003d editPersonDescriptor","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"                .getLevelOfEducation().orElse(personToEdit.getLevelOfEducation());","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Pulpy-y"},"content":"        Experience updatedExperience \u003d editPersonDescriptor.getExperience().orElse(personToEdit.getExperience());","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"Pulpy-y"},"content":"        Optional\u003cInterview\u003e updatedInterview \u003d editPersonDescriptor.getInterview().orElse(personToEdit.getInterview());","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"        Optional\u003cNotes\u003e updatedNotes \u003d editPersonDescriptor.getNotes().orElse(personToEdit.getNotes());","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"        Done updatedDone \u003d personToEdit.getDone();","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedRole,","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"                updatedEmploymentType, updatedExpectedSalary, updatedLevelOfEducation,","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"                updatedExperience, updatedTags, updatedInterview, updatedNotes, updatedDone);","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"     * Creates a UI message informing user of existing duplicate applicants.","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"     * {@code duplicates} provided must contain at least 1 applicant.","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"     * @param duplicates List of applicants who share the same phone number and email with {@code editedPerson}","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"     * @param toCheck applicant to be checked for duplicates with","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"     * @return String accumulation of all duplicate applicants","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"twothicc"},"content":"    private String createDuplicateMessage(List\u003cPerson\u003e duplicates, Person toCheck) {","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"twothicc"},"content":"        assert toCheck !\u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"        assert duplicates !\u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"        assert !duplicates.isEmpty() : \"There should be at least 1 duplicate\";","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"twothicc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"        for (Person duplicate : duplicates) {","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"            stringBuilder.append(duplicate);","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"        return \"Your edited applicant \" + toCheck","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"                + \" shares either the same phone number or email as the following applicant(s):\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"twothicc"},"content":"                + stringBuilder;","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"twothicc"},"content":"        private Role role;","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"kaushikkrdy"},"content":"        private EmploymentType employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"BryannYeap"},"content":"        private ExpectedSalary expectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"TohWeiJie01"},"content":"        private LevelOfEducation levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"Pulpy-y"},"content":"        private Experience experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"Pulpy-y"},"content":"        private Optional\u003cInterview\u003e interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"TohWeiJie01"},"content":"        private Optional\u003cNotes\u003e notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"        private Done done;","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":216,"author":{"gitId":"twothicc"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"kaushikkrdy"},"content":"            setEmploymentType(toCopy.employmentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"BryannYeap"},"content":"            setExpectedSalary(toCopy.expectedSalary);","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"TohWeiJie01"},"content":"            setLevelOfEducation(toCopy.levelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"Pulpy-y"},"content":"            setExperience(toCopy.experience);","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"Pulpy-y"},"content":"            setInterview(toCopy.interview);","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"TohWeiJie01"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"TohWeiJie01"},"content":"            setDone(toCopy.done);","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"TohWeiJie01"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, role, employmentType,","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"TohWeiJie01"},"content":"                    expectedSalary, levelOfEducation, experience, tags, interview, notes);","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"twothicc"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"twothicc"},"content":"            this.role \u003d role;","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"twothicc"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"twothicc"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"kaushikkrdy"},"content":"        public void setEmploymentType(EmploymentType employmentType) {","lastModifiedDate":"2021-10-02"},{"lineNumber":268,"author":{"gitId":"kaushikkrdy"},"content":"            this.employmentType \u003d employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":269,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":270,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":271,"author":{"gitId":"kaushikkrdy"},"content":"        public Optional\u003cEmploymentType\u003e getEmploymentType() {","lastModifiedDate":"2021-10-02"},{"lineNumber":272,"author":{"gitId":"kaushikkrdy"},"content":"            return Optional.ofNullable(employmentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":273,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":274,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":275,"author":{"gitId":"BryannYeap"},"content":"        public void setExpectedSalary(ExpectedSalary expectedSalary) {","lastModifiedDate":"2021-09-30"},{"lineNumber":276,"author":{"gitId":"BryannYeap"},"content":"            this.expectedSalary \u003d expectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":277,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":278,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":279,"author":{"gitId":"BryannYeap"},"content":"        public Optional\u003cExpectedSalary\u003e getExpectedSalary() {","lastModifiedDate":"2021-09-30"},{"lineNumber":280,"author":{"gitId":"BryannYeap"},"content":"            return Optional.ofNullable(expectedSalary);","lastModifiedDate":"2021-09-30"},{"lineNumber":281,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"TohWeiJie01"},"content":"        public void setLevelOfEducation(LevelOfEducation levelOfEducation) {","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"TohWeiJie01"},"content":"            this.levelOfEducation \u003d levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":285,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"TohWeiJie01"},"content":"        public Optional\u003cLevelOfEducation\u003e getLevelOfEducation() {","lastModifiedDate":"2021-10-07"},{"lineNumber":288,"author":{"gitId":"TohWeiJie01"},"content":"            return Optional.ofNullable(levelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":291,"author":{"gitId":"Pulpy-y"},"content":"        public void setExperience(Experience experience) {","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"Pulpy-y"},"content":"            this.experience \u003d experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":293,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":295,"author":{"gitId":"Pulpy-y"},"content":"        public Optional\u003cExperience\u003e getExperience() {","lastModifiedDate":"2021-09-30"},{"lineNumber":296,"author":{"gitId":"Pulpy-y"},"content":"            return Optional.ofNullable(experience);","lastModifiedDate":"2021-09-30"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":308,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"Pulpy-y"},"content":"        public void setInterview(Optional\u003cInterview\u003e interview) {","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"Pulpy-y"},"content":"            this.interview \u003d interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"Pulpy-y"},"content":"        public Optional\u003cOptional\u003cInterview\u003e\u003e getInterview() {","lastModifiedDate":"2021-10-20"},{"lineNumber":321,"author":{"gitId":"Pulpy-y"},"content":"            return Optional.ofNullable(interview);","lastModifiedDate":"2021-10-20"},{"lineNumber":322,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":323,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"TohWeiJie01"},"content":"        public void setNotes(Optional\u003cNotes\u003e notes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":325,"author":{"gitId":"TohWeiJie01"},"content":"            this.notes \u003d notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"TohWeiJie01"},"content":"        public Optional\u003cOptional\u003cNotes\u003e\u003e getNotes() {","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"TohWeiJie01"},"content":"            return Optional.ofNullable(notes);","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":332,"author":{"gitId":"TohWeiJie01"},"content":"        public void setDone(Done done) {","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"TohWeiJie01"},"content":"            this.done \u003d done;","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"TohWeiJie01"},"content":"        public Optional\u003cDone\u003e getDone() {","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"TohWeiJie01"},"content":"            return Optional.ofNullable(done);","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":358,"author":{"gitId":"twothicc"},"content":"                    \u0026\u0026 getRole().equals(e.getRole())","lastModifiedDate":"2021-09-27"},{"lineNumber":359,"author":{"gitId":"kaushikkrdy"},"content":"                    \u0026\u0026 getEmploymentType().equals(e.getEmploymentType())","lastModifiedDate":"2021-10-02"},{"lineNumber":360,"author":{"gitId":"BryannYeap"},"content":"                    \u0026\u0026 getExpectedSalary().equals(e.getExpectedSalary())","lastModifiedDate":"2021-09-30"},{"lineNumber":361,"author":{"gitId":"TohWeiJie01"},"content":"                    \u0026\u0026 getLevelOfEducation().equals(e.getLevelOfEducation())","lastModifiedDate":"2021-10-07"},{"lineNumber":362,"author":{"gitId":"Pulpy-y"},"content":"                    \u0026\u0026 getExperience().equals(e.getExperience())","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"TohWeiJie01"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"TohWeiJie01"},"content":"                    \u0026\u0026 getInterview().equals(e.getInterview())","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"TohWeiJie01"},"content":"                    \u0026\u0026 getNotes().equals(e.getNotes())","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"TohWeiJie01"},"content":"                    \u0026\u0026 getDone().equals(e.getDone());","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kaushikkrdy":17,"TohWeiJie01":51,"twothicc":47,"Pulpy-y":30,"-":210,"BryannYeap":14}},{"path":"src/main/java/seedu/address/logic/commands/FilterInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Filters applicants in the address book based on past or future interviews.","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public abstract class FilterInterviewCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    public enum ValidFilterInterviewArgs {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"        PAST(\"past\", new FilterInterviewPastCommand()),","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"        FUTURE(\"future\", new FilterInterviewFutureCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"        private final String arg;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        private final FilterInterviewCommand filterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        ValidFilterInterviewArgs(String arg, FilterInterviewCommand filterInterviewCommand) {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"            this.arg \u003d arg;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"            this.filterInterviewCommand \u003d filterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        public static String getRegex() {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"            StringBuilder regex \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"            for (ValidFilterInterviewArgs validArg : ValidFilterInterviewArgs.values()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"                regex.append(validArg.arg);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"                regex.append(\"|\");","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"            return regex.deleteCharAt(regex.length() - 1).toString(); // To remove the last \"|\"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        public FilterInterviewCommand getFilterInterviewCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"            return this.filterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"            return this.arg;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    public static final String COMMAND_WORD \u003d \"filter_interview\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"            COMMAND_WORD + \" \" + ValidFilterInterviewArgs.PAST","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"                    + \": Shows applicants with interviews that have passed. \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"                    + COMMAND_WORD + \" \" + ValidFilterInterviewArgs.FUTURE","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"                    + \": Shows applicants with upcoming interviews. \";","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"BryannYeap":47}},{"path":"src/main/java/seedu/address/logic/commands/FilterInterviewFutureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewFutureCommand extends FilterInterviewCommand {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_SUCCESS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"            \"Showing %d applicants with upcoming interviews in the future. \";","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"        model.updateFilteredPersonList((person) -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"            Interview interview \u003d person.getInterview().orElse(Interview.EMPTY_INTERVIEW);","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"            return !interview.isEmptyInterview() \u0026\u0026 !interview.hasInterviewPassed();","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        });","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"                || (other instanceof FilterInterviewFutureCommand); // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":2,"BryannYeap":29}},{"path":"src/main/java/seedu/address/logic/commands/FilterInterviewPastCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewPastCommand extends FilterInterviewCommand {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_SUCCESS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"            \"Showing %d applicants with interviews that have already passed. \";","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"        model.updateFilteredPersonList((person) -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"            Interview interview \u003d person.getInterview().orElse(Interview.EMPTY_INTERVIEW);","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"            return !interview.isEmptyInterview() \u0026\u0026 interview.hasInterviewPassed();","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        });","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"                || (other instanceof FilterInterviewPastCommand); // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":2,"BryannYeap":28}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"            + \"the specified keywords (case-insensitive) under their respected prefixes, \"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"            + \"Parameters: PREFIX/KEYWORDS [MORE_PREFIXES/MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie p/99999999\";","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"    private final ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates;","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"     * predicates should not be null.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"     * @param predicates A list of predicates to filter applicants by.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"    public FindCommand(ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        requireNonNull(predicates);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"        assert predicates !\u003d null : \"predicates should not be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        // Accumulate the predicates via stream","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        Predicate\u003cPerson\u003e combinedPredicate \u003d predicates.stream().reduce(person -\u003e true, Predicate::and);","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"        model.updateFilteredPersonList(combinedPredicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 predicates.equals(((FindCommand) other).predicates)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kaushikkrdy":10,"TohWeiJie01":1,"twothicc":10,"-":32,"BryannYeap":7}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":" * Marks an applicant as \"Done\" identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"public class MarkCommand extends MarkingCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"            + \": Marks the applicants identified by the index numbers used in the displayed person list as Done.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"            + \"Parameters: INDEX...\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 4 7\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_MARKED_PERSON_SUCCESS \u003d \"Marked Person(s) as Done: \\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_MARKING_MARKED_PERSON \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"            \"A person that is already marked as Done cannot be marked again\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    private final Index[] targetIndexes;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public MarkCommand(Index[] targetIndexes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        boolean markingMarkedPerson;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        for (Index checkIndex : targetIndexes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            if (checkIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            Person personToCheck \u003d lastShownList.get(checkIndex.getZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            markingMarkedPerson \u003d model.checkForMarkedPerson(personToCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            if (markingMarkedPerson) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                throw new CommandException(MESSAGE_MARKING_MARKED_PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"            Person personToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            model.markPerson(personToMark);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"            result.append(personToMark);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        return new CommandResult(String.format(MESSAGE_MARKED_PERSON_SUCCESS, result.toString()));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 Arrays.equals(targetIndexes, ((MarkCommand) other).targetIndexes)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"TohWeiJie01":69,"BryannYeap":1}},{"path":"src/main/java/seedu/address/logic/commands/MarkingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"public abstract class MarkingCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"TohWeiJie01":5}},{"path":"src/main/java/seedu/address/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EMAIL_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EMPLOYMENT_TYPE_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EXPECTED_SALARY_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EXPERIENCE_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_INTERVIEW_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_LEVEL_OF_EDUCATION_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_NAME_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_PHONE_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_ROLE_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_TAG_SYNTAX;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows all inputs for a specific category, \"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"            + \"based on the given prefix \"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"            + \"and displays them as a list.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"            + \"Parameters: PREFIX/KEYWORDS \\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"            + \"Example: \" + COMMAND_WORD + \" r/\";","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"    private final Prefix prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"     * Constructor for ShowCommand.","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"     * Prefix object passed as parameter cannot be null.","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"     * @param prefix Category to get unique terms from.","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"    public ShowCommand(Prefix prefix) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"        String message \u003d getUniqueCategoryInputs(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"    private String getUniqueCategoryInputs(Model model) {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        assert prefix !\u003d null : \"Prefix should not be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        // obtains an unmodifiable list of all applicants","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        ObservableList\u003cPerson\u003e ol \u003d addressBook.getPersonList();","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"        String prefixString \u003d prefix.getPrefix();","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"        // temporary variables to hold unique search terms and part of UI message to user","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e uniqueInputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        String userText \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"        switch (prefixString) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"        case PREFIX_NAME_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"names\";","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueNameInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"        case PREFIX_PHONE_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"contact numbers\";","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniquePhoneInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"        case PREFIX_EMAIL_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"emails\";","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueEmailInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"        case PREFIX_ROLE_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"roles\";","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueRoleInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        case PREFIX_EMPLOYMENT_TYPE_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"employment types\";","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueEmploymentTypeInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"        case PREFIX_EXPECTED_SALARY_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"expected salaries\";","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueExpectedSalaryInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"        case PREFIX_LEVEL_OF_EDUCATION_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"levels of education\";","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueLevelOfEducationInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"        case PREFIX_EXPERIENCE_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"years of experience\";","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueExperienceInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"        case PREFIX_TAG_SYNTAX:","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"            userText \u003d \"tags\";","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"            uniqueInputs \u003d getUniqueTagInputs(ol);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Pulpy-y"},"content":"        case PREFIX_INTERVIEW_SYNTAX:","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Pulpy-y"},"content":"            userText \u003d \"interview\";","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"Pulpy-y"},"content":"            uniqueInputs \u003d getUniqueInterviewInputs(ol);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"Pulpy-y"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"            return \"No search terms exist for unknown prefix \" + prefixString;","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"        if (!uniqueInputs.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are all the \" + userText + \" present:\\n\");","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"            for (String uniqueInput: uniqueInputs) {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"                sb.append(uniqueInput);","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"kaushikkrdy"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"kaushikkrdy"},"content":"            return sb.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"            return \"No search terms exist for \" + userText;","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueNameInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getName().toString()).distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniquePhoneInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getPhone().toString()).distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueEmailInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getEmail().toString()).distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueRoleInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"                .map(x -\u003e x.getRole().toString()).distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueEmploymentTypeInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getEmploymentType().toString()).distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueExpectedSalaryInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getExpectedSalary().toString()).distinct()","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"kaushikkrdy"},"content":"                .sorted(Comparator.comparing(String::length).thenComparing(String::compareTo))","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"kaushikkrdy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueLevelOfEducationInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getLevelOfEducation().toString()).distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueExperienceInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"kaushikkrdy"},"content":"                .map(x -\u003e x.getExperience().toString()).distinct()","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"kaushikkrdy"},"content":"                .sorted(Comparator.comparing(String::length).thenComparing(String::compareTo))","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"kaushikkrdy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"Pulpy-y"},"content":"    private List\u003cString\u003e getUniqueInterviewInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"Pulpy-y"},"content":"                .map(x -\u003e x.getInterview().orElse(Interview.EMPTY_INTERVIEW).toString()).distinct().sorted()","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"Pulpy-y"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"kaushikkrdy"},"content":"    private List\u003cString\u003e getUniqueTagInputs(ObservableList\u003cPerson\u003e ol) {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"Pulpy-y"},"content":"        return ol.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"kaushikkrdy"},"content":"                .flatMap(person -\u003e person.getTags().stream().map(Tag::toString))","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"kaushikkrdy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"kaushikkrdy"},"content":"                || (other instanceof ShowCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 prefix.equals(((ShowCommand) other).prefix)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kaushikkrdy":93,"twothicc":97,"Pulpy-y":12}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":" * Marks an applicant as \"Not Done\" identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"public class UnmarkCommand extends MarkingCommand {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"            + \": Unmarks the applicants identified by the index numbers used in the displayed \"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"            + \"person list to Not Done.\\n\" + \"Parameters: INDEX...\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 4 7\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_UNMARKED_PERSON_SUCCESS \u003d \"Unmarked Person(s) to Not Done: \\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_UNMARKING_UNMARKED_PERSON \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"            \"A person that is already unmarked as Not Done cannot be unmarked again\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    private final Index[] targetIndexes;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public UnmarkCommand(Index[] targetIndexes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        boolean unmarkingUnmarkedPerson;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        for (Index checkIndex : targetIndexes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            if (checkIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            Person personToCheck \u003d lastShownList.get(checkIndex.getZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            unmarkingUnmarkedPerson \u003d model.checkForUnmarkedPerson(personToCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            if (unmarkingUnmarkedPerson) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                throw new CommandException(MESSAGE_UNMARKING_UNMARKED_PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"            Person personToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            model.unmarkPerson(personToUnmark);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"            result.append(personToUnmark);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARKED_PERSON_SUCCESS, result.toString()));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof UnmarkCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 Arrays.equals(targetIndexes, ((UnmarkCommand) other).targetIndexes)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"TohWeiJie01":69,"BryannYeap":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE,","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_EMPLOYMENT_TYPE, PREFIX_EXPECTED_SALARY,","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE, PREFIX_TAG,","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_INTERVIEW, PREFIX_NOTES);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                PREFIX_EMAIL, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"                PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE)","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentType employmentType \u003d ParserUtil.parseEmploymentType(","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"                argMultimap.getValue(PREFIX_EMPLOYMENT_TYPE).get());","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalary expectedSalary \u003d ParserUtil.parseExpectedSalary(argMultimap","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"                .getValue(PREFIX_EXPECTED_SALARY).get());","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducation levelOfEducation \u003d ParserUtil.parseLevelOfEducation(","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"                argMultimap.getValue(PREFIX_LEVEL_OF_EDUCATION).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Pulpy-y"},"content":"        Experience experience \u003d ParserUtil.parseExperience(argMultimap.getValue(PREFIX_EXPERIENCE).get());","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"Pulpy-y"},"content":"        Optional\u003cInterview\u003e interview \u003d ParserUtil.parseInterview(","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"                argMultimap.getValue(PREFIX_INTERVIEW).orElse(EMPTY));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"        Optional\u003cNotes\u003e notes \u003d ParserUtil.parseNotes(argMultimap.getValue(PREFIX_NOTES).orElse(EMPTY));","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"        Person person \u003d new Person(name, phone, email, role, employmentType,","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"                expectedSalary, levelOfEducation, experience, tagList, interview, notes);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kaushikkrdy":3,"TohWeiJie01":18,"twothicc":2,"Pulpy-y":11,"-":53,"BryannYeap":4}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.DeleteMarkedCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        case DeleteMarkedCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"            return new DeleteMarkedCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        case FilterInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"            return new FilterInterviewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"            // Fallthrough","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"            return new MarkingCommandParser(commandWord).parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaushikkrdy":1,"TohWeiJie01":4,"-":69,"BryannYeap":21}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"     * Returns true if {@code ArgumentMultimap} is empty, false otherwise.","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"        return argMultimap.isEmpty();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":60,"BryannYeap":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string. Does not","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"     * include Preamble as an additional prefix.","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"     * Take note that argsString must have a single space preceding the first prefix.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"     * @param argsString Arguments string of the form: {@code \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    public static ArgumentMultimap tokenizeWithoutPreamble(String argsString, Prefix... prefixes) {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"        return extractArgumentsWithoutPreamble(argsString, positions);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"     * Finds and returns all prefixes existing in the given arguments string as a list sorted by","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"     * the order in which the user input the prefix.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"     * @param argString Arguments string of the form: {@code \u003cprefix\u003e value \u003cprefix\u003evalue ...}","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"     * @param prefixes  Prefixes to find in the arguments string","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"     * @return          List of prefixes in the given arguments string sorted by order of user input","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"    public static List\u003cPrefix\u003e findAllPrefixSorted(String argString, Prefix... prefixes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        List\u003cPrefixPosition\u003e prefixPositions \u003d findAllPrefixPositions(argString, prefixes);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"        return prefixPositions.stream().map(PrefixPosition::getPrefix).collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"twothicc"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"     * {@code argsString}. This is different from extractArguments as it does not insert a preamble prefix.","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"twothicc"},"content":"     * Take note that argsString must have a single space preceding the first prefix.","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"     * @param argsString      Arguments string of the form: {@code \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"Pulpy-y"},"content":"    private static ArgumentMultimap extractArgumentsWithoutPreamble(String argsString,","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"Pulpy-y"},"content":"            List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"Pulpy-y"},"content":"        // Sort by start position","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"Pulpy-y"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"Pulpy-y"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"Pulpy-y"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"Pulpy-y"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"Pulpy-y"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"Pulpy-y"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"Pulpy-y"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"Pulpy-y"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"Pulpy-y"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"Pulpy-y"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"Pulpy-y"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"Pulpy-y"},"content":"        return argMultimap;","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"twothicc":28,"Pulpy-y":34,"-":148}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_DONE_SYNTAX;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EMAIL_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EMPLOYMENT_TYPE_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EXPECTED_SALARY_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_EXPERIENCE_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_INTERVIEW_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_LEVEL_OF_EDUCATION_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_NAME_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_NOTES_SYNTAX;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_PHONE_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_ROLE_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.PrefixSyntax.PREFIX_TAG_SYNTAX;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(PREFIX_NAME_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(PREFIX_PHONE_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(PREFIX_EMAIL_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(PREFIX_TAG_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(PREFIX_ROLE_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_EMPLOYMENT_TYPE \u003d new Prefix(PREFIX_EMPLOYMENT_TYPE_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_EXPECTED_SALARY \u003d new Prefix(PREFIX_EXPECTED_SALARY_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_LEVEL_OF_EDUCATION \u003d new Prefix(PREFIX_LEVEL_OF_EDUCATION_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"    public static final Prefix PREFIX_EXPERIENCE \u003d new Prefix(PREFIX_EXPERIENCE_SYNTAX);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"    public static final Prefix PREFIX_INTERVIEW \u003d new Prefix(PREFIX_INTERVIEW_SYNTAX);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public static final Prefix PREFIX_NOTES \u003d new Prefix(PREFIX_NOTES_SYNTAX);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    public static final Prefix PREFIX_DONE \u003d new Prefix(PREFIX_DONE_SYNTAX);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TohWeiJie01":4,"twothicc":10,"Pulpy-y":11,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"            Index[] indexes \u003d ParserUtil.parseMultipleIndex(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"            String causeOfError \u003d \"\\n\" + pe.getMessage();","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT + causeOfError,","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"                            DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":26,"BryannYeap":7}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE, PREFIX_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE, PREFIX_TAG, PREFIX_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_NOTES);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"            editPersonDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"        if (argMultimap.getValue(PREFIX_EMPLOYMENT_TYPE).isPresent()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"            editPersonDescriptor.setEmploymentType(","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"                    ParserUtil.parseEmploymentType(argMultimap.getValue(PREFIX_EMPLOYMENT_TYPE).get()));","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        if (argMultimap.getValue(PREFIX_EXPECTED_SALARY).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"            editPersonDescriptor.setExpectedSalary(ParserUtil.parseExpectedSalary(argMultimap","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"                    .getValue(PREFIX_EXPECTED_SALARY).get()));","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"        if (argMultimap.getValue(PREFIX_LEVEL_OF_EDUCATION).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"            editPersonDescriptor.setLevelOfEducation(","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"                    ParserUtil.parseLevelOfEducation(argMultimap.getValue(PREFIX_LEVEL_OF_EDUCATION).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"kaushikkrdy"},"content":"        if (argMultimap.getValue(PREFIX_EXPERIENCE).isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"kaushikkrdy"},"content":"            editPersonDescriptor.setExperience(","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"kaushikkrdy"},"content":"                    ParserUtil.parseExperience(argMultimap.getValue(PREFIX_EXPERIENCE).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"Pulpy-y"},"content":"        if (argMultimap.getValue(PREFIX_INTERVIEW).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Pulpy-y"},"content":"            editPersonDescriptor.setInterview(","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Pulpy-y"},"content":"                    ParserUtil.parseInterview(argMultimap.getValue(PREFIX_INTERVIEW).orElse(\"\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"        if (argMultimap.getValue(PREFIX_NOTES).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"            editPersonDescriptor.setNotes(","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"                    ParserUtil.parseNotes(argMultimap.getValue(PREFIX_NOTES).orElse(\"\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaushikkrdy":10,"TohWeiJie01":13,"twothicc":4,"Pulpy-y":12,"-":81,"BryannYeap":4}},{"path":"src/main/java/seedu/address/logic/parser/FilterInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewCommandParser implements Parser\u003cFilterInterviewCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterInterviewCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"     * and returns a FilterInterviewCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    public FilterInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        String errorMessage \u003d FilterInterviewCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"        String trimmedArgs \u003d args.trim().toLowerCase();","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        if (!trimmedArgs.matches(FilterInterviewCommand.ValidFilterInterviewArgs.getRegex())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, errorMessage));","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewCommand filterInterviewCommand \u003d Arrays","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"                .stream(FilterInterviewCommand.ValidFilterInterviewArgs.values())","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                .filter(arg -\u003e arg.toString().equals(trimmedArgs))","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"                .findFirst()","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"                .get()","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"                .getFilterInterviewCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        return filterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":1,"BryannYeap":38}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.DoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.InterviewContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.notes.NotesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentTypeContainsKeywordsPredicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalaryWithinRangePredicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.ExperienceContainsKeywordsPredicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        // One whitespace required before first prefix.","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        String trimmedArgs \u003d \" \" + args.trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"                ArgumentTokenizer.tokenizeWithoutPreamble(trimmedArgs, PREFIX_NAME,","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE,","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_TAG, PREFIX_INTERVIEW, PREFIX_NOTES, PREFIX_DONE);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        // If find command has no prefix, it is invalid","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        if (argMultimap.isEmpty()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"        FindDescriptor findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"        return new FindCommand(findDescriptor.getPredicates());","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"    public static class FindDescriptor {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"        private ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"        /**","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"         * Constructs a FindDescriptor.","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"         * FindDescriptors extracts user input for each Prefix and converts them into a list of Predicates.","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"         */","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        FindDescriptor(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"            assert !argMultimap.isEmpty() : \"FindDescriptor should not be created with empty ArgumentMultimap\";","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractNamePrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractPhonePrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractEmailPrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractRolePrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_EMPLOYMENT_TYPE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractEmploymentTypePrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_EXPECTED_SALARY).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractExpectedSalaryPrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_LEVEL_OF_EDUCATION).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractLevelOfEducationPrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_EXPERIENCE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractExperiencePrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"            if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"                addToPredicateList(extractTagPrefixInput(argMultimap));","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"Pulpy-y"},"content":"            if (argMultimap.getValue(PREFIX_INTERVIEW).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"Pulpy-y"},"content":"                addToPredicateList(extractInterviewPrefixInput(argMultimap));","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"Pulpy-y"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"kaushikkrdy"},"content":"            if (argMultimap.getValue(PREFIX_NOTES).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"kaushikkrdy"},"content":"                addToPredicateList(extractNotesPrefixInput(argMultimap));","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"            if (argMultimap.getValue(PREFIX_DONE).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"                addToPredicateList(extractDonePrefixInput(argMultimap));","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"        private void addToPredicateList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"            if (predicate !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"twothicc"},"content":"                this.predicateList.add(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"twothicc"},"content":"        private NameContainsKeywordsPredicate extractNamePrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_NAME).isPresent() : \"No inputs for Prefix Name exist.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"BryannYeap"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"                    if (!Name.isValidName(keyword)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"                        throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"BryannYeap"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"                return new NameContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"        private PhoneContainsKeywordsPredicate extractPhonePrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_PHONE).isPresent() : \"No inputs for Prefix Phone exist.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_PHONE).get();","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"twothicc"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"BryannYeap"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"BryannYeap"},"content":"                    if (!Phone.isValidPhone(keyword)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"BryannYeap"},"content":"                        throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"BryannYeap"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"                return new PhoneContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"        private EmailContainsKeywordsPredicate extractEmailPrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_EMAIL).isPresent() : \"No inputs for Prefix Email exist.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"twothicc"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_EMAIL).get();","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"twothicc"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"twothicc"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"BryannYeap"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"BryannYeap"},"content":"                    if (!Email.isValidEmail(keyword)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"BryannYeap"},"content":"                        throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"BryannYeap"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"twothicc"},"content":"                return new EmailContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"twothicc"},"content":"        private RoleContainsKeywordsPredicate extractRolePrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_ROLE).isPresent() : \"No inputs for Prefix Role exist.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"twothicc"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_ROLE).get();","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"twothicc"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"twothicc"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"twothicc"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-09-28"},{"lineNumber":206,"author":{"gitId":"BryannYeap"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"BryannYeap"},"content":"                    if (!Role.isValidRole(keyword)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"BryannYeap"},"content":"                        throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"BryannYeap"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"twothicc"},"content":"                return new RoleContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":213,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"twothicc"},"content":"        private EmploymentTypeContainsKeywordsPredicate extractEmploymentTypePrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_EMPLOYMENT_TYPE).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"twothicc"},"content":"                    : \"No inputs for Prefix Employment Type exists.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"kaushikkrdy"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_EMPLOYMENT_TYPE).get();","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"kaushikkrdy"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"kaushikkrdy"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"kaushikkrdy"},"content":"                List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"kaushikkrdy"},"content":"                Pattern r \u003d Pattern.compile(EmploymentType.Type.getRegex());","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"kaushikkrdy"},"content":"                Matcher m \u003d r.matcher(trimmedArg);","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"kaushikkrdy"},"content":"                ArrayList\u003cString\u003e terms \u003d EmploymentType.Type.getTerms();","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"kaushikkrdy"},"content":"                while (m.find()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"kaushikkrdy"},"content":"                    if (!m.group().isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"twothicc"},"content":"                        boolean isTermContained \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"kaushikkrdy"},"content":"                        for (String term: terms) {","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"kaushikkrdy"},"content":"                            if (term.toLowerCase().startsWith(m.group().toLowerCase())) {","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"twothicc"},"content":"                                isTermContained \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"kaushikkrdy"},"content":"                                break;","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"kaushikkrdy"},"content":"                            }","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"kaushikkrdy"},"content":"                        }","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"twothicc"},"content":"                        if (!isTermContained) {","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"kaushikkrdy"},"content":"                            throw new ParseException(EmploymentType.FIND_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"kaushikkrdy"},"content":"                        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"kaushikkrdy"},"content":"                            keywords.add(m.group());","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"kaushikkrdy"},"content":"                        }","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"kaushikkrdy"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"kaushikkrdy"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"twothicc"},"content":"                return new EmploymentTypeContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":248,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":250,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"twothicc"},"content":"        private ExpectedSalaryWithinRangePredicate extractExpectedSalaryPrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_EXPECTED_SALARY).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"twothicc"},"content":"                    : \"No inputs for Prefix Expected Salary exists.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"BryannYeap"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_EXPECTED_SALARY).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":256,"author":{"gitId":"BryannYeap"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"BryannYeap"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"BryannYeap"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"BryannYeap"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"BryannYeap"},"content":"                    if (!ExpectedSalary.isValidExpectedSalary(keyword)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"BryannYeap"},"content":"                        throw new ParseException(ExpectedSalary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"BryannYeap"},"content":"                    }","lastModifiedDate":"2021-09-30"},{"lineNumber":263,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"twothicc"},"content":"                return new ExpectedSalaryWithinRangePredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":269,"author":{"gitId":"twothicc"},"content":"        private LevelOfEducationContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"twothicc"},"content":"            extractLevelOfEducationPrefixInput(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_LEVEL_OF_EDUCATION).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"twothicc"},"content":"                    : \"No inputs for Prefix Level Of Education exists.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"TohWeiJie01"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_LEVEL_OF_EDUCATION).get();","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"TohWeiJie01"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"TohWeiJie01"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"TohWeiJie01"},"content":"                List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":277,"author":{"gitId":"TohWeiJie01"},"content":"                Pattern r \u003d Pattern.compile(LevelOfEducation.Education.getRegex());","lastModifiedDate":"2021-10-13"},{"lineNumber":278,"author":{"gitId":"TohWeiJie01"},"content":"                Matcher m \u003d r.matcher(trimmedArg);","lastModifiedDate":"2021-10-13"},{"lineNumber":279,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":280,"author":{"gitId":"TohWeiJie01"},"content":"                ArrayList\u003cString\u003e terms \u003d LevelOfEducation.Education.getEducationLevels();","lastModifiedDate":"2021-10-13"},{"lineNumber":281,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":282,"author":{"gitId":"TohWeiJie01"},"content":"                while (m.find()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":283,"author":{"gitId":"TohWeiJie01"},"content":"                    if (!m.group().isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":284,"author":{"gitId":"twothicc"},"content":"                        boolean isTermContained \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"TohWeiJie01"},"content":"                        for (String term: terms) {","lastModifiedDate":"2021-10-13"},{"lineNumber":286,"author":{"gitId":"TohWeiJie01"},"content":"                            if (term.toLowerCase().startsWith(m.group().toLowerCase())) {","lastModifiedDate":"2021-10-13"},{"lineNumber":287,"author":{"gitId":"twothicc"},"content":"                                isTermContained \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"TohWeiJie01"},"content":"                                break;","lastModifiedDate":"2021-10-13"},{"lineNumber":289,"author":{"gitId":"TohWeiJie01"},"content":"                            }","lastModifiedDate":"2021-10-13"},{"lineNumber":290,"author":{"gitId":"TohWeiJie01"},"content":"                        }","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"twothicc"},"content":"                        if (!isTermContained) {","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"TohWeiJie01"},"content":"                            throw new ParseException(LevelOfEducation.FIND_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"TohWeiJie01"},"content":"                        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"TohWeiJie01"},"content":"                            keywords.add(m.group());","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"TohWeiJie01"},"content":"                        }","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"TohWeiJie01"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":298,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"twothicc"},"content":"                return new LevelOfEducationContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":301,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":303,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":304,"author":{"gitId":"twothicc"},"content":"        private ExperienceContainsKeywordsPredicate extractExperiencePrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_EXPERIENCE).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"twothicc"},"content":"                    : \"No inputs for Prefix Experience exists.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"kaushikkrdy"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_EXPERIENCE).get();","lastModifiedDate":"2021-10-05"},{"lineNumber":309,"author":{"gitId":"kaushikkrdy"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":310,"author":{"gitId":"kaushikkrdy"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":311,"author":{"gitId":"kaushikkrdy"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-10-05"},{"lineNumber":312,"author":{"gitId":"Pulpy-y"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"Pulpy-y"},"content":"                    if (!Experience.isValidExperience(keyword)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"Pulpy-y"},"content":"                        throw new ParseException(Experience.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"Pulpy-y"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"Pulpy-y"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"twothicc"},"content":"                return new ExperienceContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":319,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":321,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":322,"author":{"gitId":"twothicc"},"content":"        private TagContainsKeywordsPredicate extractTagPrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"twothicc"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"twothicc"},"content":"            assert argMultimap.getValue(PREFIX_TAG).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"twothicc"},"content":"                    : \"No inputs for Prefix Tag exists.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"twothicc"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"twothicc"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"twothicc"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"twothicc"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"BryannYeap"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":331,"author":{"gitId":"BryannYeap"},"content":"                    if (!Tag.isValidTagName(keyword)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":332,"author":{"gitId":"BryannYeap"},"content":"                        throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":333,"author":{"gitId":"BryannYeap"},"content":"                    }","lastModifiedDate":"2021-10-13"},{"lineNumber":334,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":335,"author":{"gitId":"twothicc"},"content":"                return new TagContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"twothicc"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"Pulpy-y"},"content":"        private InterviewContainsKeywordsPredicate extractInterviewPrefixInput(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"Pulpy-y"},"content":"            assert argMultimap.getValue(PREFIX_INTERVIEW).isPresent()","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"Pulpy-y"},"content":"                    : \"No inputs for Prefix Interview exists.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"Pulpy-y"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_INTERVIEW).get();","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"Pulpy-y"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"Pulpy-y"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"Pulpy-y"},"content":"                String[] keywords \u003d splitByWhiteSpace(trimmedArg);","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"Pulpy-y"},"content":"                return new InterviewContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"Pulpy-y"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"Pulpy-y"},"content":"            return null;","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":351,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"kaushikkrdy"},"content":"        private NotesContainsKeywordsPredicate extractNotesPrefixInput(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"kaushikkrdy"},"content":"            assert argMultimap.getValue(PREFIX_NOTES).isPresent()","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"kaushikkrdy"},"content":"                    : \"No inputs for Prefix Notes exists.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"kaushikkrdy"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_NOTES).get();","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"kaushikkrdy"},"content":"            if (!arg.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"kaushikkrdy"},"content":"                return new NotesContainsKeywordsPredicate(arg);","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"kaushikkrdy"},"content":"            return null;","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"TohWeiJie01"},"content":"        private DoneContainsKeywordsPredicate extractDonePrefixInput(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"TohWeiJie01"},"content":"                throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"TohWeiJie01"},"content":"            assert argMultimap.getValue(PREFIX_DONE).isPresent() : \"No inputs for Prefix Role exist.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"TohWeiJie01"},"content":"            String arg \u003d argMultimap.getValue(PREFIX_DONE).get();","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"TohWeiJie01"},"content":"            String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"TohWeiJie01"},"content":"            List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"TohWeiJie01"},"content":"            if (!trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"TohWeiJie01"},"content":"                if (trimmedArg.equalsIgnoreCase(Done.STATUS_DONE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"TohWeiJie01"},"content":"                    keywords.add(Done.STATUS_DONE);","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"TohWeiJie01"},"content":"                } else if (trimmedArg.equalsIgnoreCase(Done.STATUS_UNDONE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"TohWeiJie01"},"content":"                    keywords.add(Done.STATUS_UNDONE);","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"TohWeiJie01"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":374,"author":{"gitId":"TohWeiJie01"},"content":"                    throw new ParseException(Done.FIND_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":375,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"TohWeiJie01"},"content":"                return new DoneContainsKeywordsPredicate(keywords);","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"TohWeiJie01"},"content":"            return null;","lastModifiedDate":"2021-10-26"},{"lineNumber":379,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"twothicc"},"content":"        public ArrayList\u003cPredicate\u003cPerson\u003e\u003e getPredicates() {","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"twothicc"},"content":"            return predicateList;","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"twothicc"},"content":"        private static String[] splitByWhiteSpace(String arg) {","lastModifiedDate":"2021-09-28"},{"lineNumber":388,"author":{"gitId":"twothicc"},"content":"            return arg.split(\"\\\\s+\");","lastModifiedDate":"2021-09-28"},{"lineNumber":389,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaushikkrdy":55,"TohWeiJie01":67,"twothicc":164,"Pulpy-y":26,"-":31,"BryannYeap":49}},{"path":"src/main/java/seedu/address/logic/parser/MarkingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.MarkingCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" * Parses input arguments and creates a new MarkingCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class MarkingCommandParser implements Parser\u003cMarkingCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private final String typeOfMarking;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public MarkingCommandParser(String typeOfMarking) {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        this.typeOfMarking \u003d typeOfMarking;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkingCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"     * and returns a MarkingCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public MarkingCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"            MarkingCommand markingCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"            Index[] indexes \u003d ParserUtil.parseMultipleIndex(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"            if (typeOfMarking.equals(MarkCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"                markingCommand \u003d new MarkCommand(indexes);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"            } else if (typeOfMarking.equals(UnmarkCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"                markingCommand \u003d new UnmarkCommand(indexes);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"                markingCommand \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            assert markingCommand !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            return markingCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            String errorMessage \u003d typeOfMarking.equals(MarkCommand.COMMAND_WORD)","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"                    ? MarkCommand.MESSAGE_USAGE : UnmarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"            String causeOfError \u003d \"\\n\" + pe.getMessage();","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT + causeOfError, errorMessage), pe);","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"TohWeiJie01":48,"BryannYeap":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index should be a non-zero unsigned integer.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_DUPLICATE_INDEX \u003d \"There should not be any duplicate indexes.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"     * Parses multiple {@code oneBasedIndex} into {@code Index} and returns them in a sorted array.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"     * The array is sorted from the largest to smallest index so that any invalid (out of range)","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"     * indexes will be encountered first.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     * @throws ParseException if the specified indexes are invalid (not non-zero unsigned integer)","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     * or if there are duplicates.","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"    public static Index[] parseMultipleIndex(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        String trimmedIndexes \u003d oneBasedIndexes.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        String[] trimmedIndexesList \u003d trimmedIndexes.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        Index[] indexesList \u003d new Index[trimmedIndexesList.length];","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        for (int i \u003d 0; i \u003c trimmedIndexesList.length; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"            String trimmedIndex \u003d trimmedIndexesList[i];","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"            indexesList[i] \u003d Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        Arrays.sort(indexesList, (i1, i2) -\u003e i2.getZeroBased() - i1.getZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        // Checking for duplicates","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        if (Arrays.stream(indexesList)","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"                .anyMatch(index -\u003e Collections.frequency(Arrays.asList(indexesList), index) \u003e 1)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"            throw new ParseException(MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        return indexesList;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"BryannYeap"},"content":"    /** Parses a {@code String role} into an {@code Role}.","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"     * @param role String to be parsed into a Role object.","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"     * @return Role object","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"     * @throws ParseException if the given {@code Role} is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"twothicc"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":"        requireNonNull(role);","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"twothicc"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"kaushikkrdy"},"content":"     * Parses a {@code String employmentType} into an {@code EmploymentType}.","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"kaushikkrdy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"kaushikkrdy"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"kaushikkrdy"},"content":"     * @param employmentType String to be parsed into an EmploymentType object.","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"kaushikkrdy"},"content":"     * @return EmploymentType object","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"     * @throws ParseException if the given {@code EmploymentType} is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"kaushikkrdy"},"content":"    public static EmploymentType parseEmploymentType(String employmentType) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"kaushikkrdy"},"content":"        requireNonNull(employmentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"kaushikkrdy"},"content":"        String trimmedEmploymentType \u003d employmentType.trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"kaushikkrdy"},"content":"        if (!EmploymentType.isValidEmploymentType(trimmedEmploymentType)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"kaushikkrdy"},"content":"            throw new ParseException(EmploymentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"kaushikkrdy"},"content":"        return new EmploymentType(trimmedEmploymentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"kaushikkrdy"},"content":"     * Parses a {@code String expectedSalary} into an {@code ExpectedSalary}.","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"kaushikkrdy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"kaushikkrdy"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"     * @param expectedSalary String to be parsed into an ExpectedSalary object.","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"     * @return ExpectedSalary object","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"kaushikkrdy"},"content":"     * @throws ParseException if the given {@code expectedSalary} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"kaushikkrdy"},"content":"    public static ExpectedSalary parseExpectedSalary(String expectedSalary) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"kaushikkrdy"},"content":"        requireNonNull(expectedSalary);","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"kaushikkrdy"},"content":"        String trimmedExpectedSalary \u003d expectedSalary.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"kaushikkrdy"},"content":"        if (!ExpectedSalary.isValidExpectedSalary(trimmedExpectedSalary)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"kaushikkrdy"},"content":"            throw new ParseException(ExpectedSalary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"kaushikkrdy"},"content":"        return new ExpectedSalary(trimmedExpectedSalary);","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"TohWeiJie01"},"content":"     * Parses a {@code String levelOfEducation} into a {@code LevelOfEducation}.","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"TohWeiJie01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"TohWeiJie01"},"content":"     * @param levelOfEducation String to be parsed into a LevelOfEducation object.","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"TohWeiJie01"},"content":"     * @return LevelOfEducation object","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws ParseException if the given {@code LevelOfEducation} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"TohWeiJie01"},"content":"    public static LevelOfEducation parseLevelOfEducation(String levelOfEducation) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(levelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"TohWeiJie01"},"content":"        String trimmedLevelOfEducation \u003d levelOfEducation.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"TohWeiJie01"},"content":"        if (!LevelOfEducation.isValidLevelOfEducation(trimmedLevelOfEducation)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"TohWeiJie01"},"content":"            throw new ParseException(LevelOfEducation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"TohWeiJie01"},"content":"        return new LevelOfEducation(trimmedLevelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"Pulpy-y"},"content":"     * Parses a {@code Integer experience} into an {@code Experience}.","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"TohWeiJie01"},"content":"     * @param experience String to be parsed into an Experience object.","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Experience object","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"Pulpy-y"},"content":"     * @throws ParseException if the given {@code experience} is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"Pulpy-y"},"content":"    public static Experience parseExperience(String experience) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"Pulpy-y"},"content":"        requireNonNull(experience);","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"Pulpy-y"},"content":"        String years \u003d experience.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"Pulpy-y"},"content":"        if (!Experience.isValidExperience(years)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"Pulpy-y"},"content":"            throw new ParseException(Experience.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"Pulpy-y"},"content":"        return new Experience(years);","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":234,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"Pulpy-y"},"content":"     * Parses a {@code String interview} into a {@code Interview}.","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"Pulpy-y"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"Pulpy-y"},"content":"     * @throws ParseException if the given {@code interview} is invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"Pulpy-y"},"content":"    public static Optional\u003cInterview\u003e parseInterview(String interview) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"Pulpy-y"},"content":"        requireNonNull(interview);","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"Pulpy-y"},"content":"        String trimmedTime \u003d interview.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"Pulpy-y"},"content":"        if (interview.isEmpty()) { // parse empty interview","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"Pulpy-y"},"content":"            return Optional.of(Interview.EMPTY_INTERVIEW);","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"Pulpy-y"},"content":"        if (!Interview.isValidInterviewTime(trimmedTime)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"Pulpy-y"},"content":"            throw new ParseException(Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"Pulpy-y"},"content":"        return Optional.of(new Interview(interview));","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"TohWeiJie01"},"content":"     * Parses a {@code String notes} into a {@code Notes}.","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"TohWeiJie01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"TohWeiJie01"},"content":"    public static Optional\u003cNotes\u003e parseNotes(String notes) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(notes);","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"TohWeiJie01"},"content":"        return Optional.of(new Notes(notes));","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kaushikkrdy":33,"TohWeiJie01":32,"twothicc":16,"Pulpy-y":35,"-":107,"BryannYeap":41}},{"path":"src/main/java/seedu/address/logic/parser/PrefixSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":" * Contains strings that indicate Prefix commands.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"public class PrefixSyntax {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"    /* Prefix syntax */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_NAME_SYNTAX \u003d \"n/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_PHONE_SYNTAX \u003d \"p/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_EMAIL_SYNTAX \u003d \"e/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_ROLE_SYNTAX \u003d \"r/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_EMPLOYMENT_TYPE_SYNTAX \u003d \"et/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_EXPECTED_SALARY_SYNTAX \u003d \"s/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_LEVEL_OF_EDUCATION_SYNTAX \u003d \"l/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    public static final String PREFIX_EXPERIENCE_SYNTAX \u003d \"y/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String PREFIX_TAG_SYNTAX \u003d \"t/\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"    public static final String PREFIX_INTERVIEW_SYNTAX \u003d \"i/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String PREFIX_NOTES_SYNTAX \u003d \"nt/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String PREFIX_DONE_SYNTAX \u003d \"d/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"twothicc":17,"TohWeiJie01":3,"Pulpy-y":2}},{"path":"src/main/java/seedu/address/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"        // One whitespace required before first prefix.","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"        String trimmedArgs \u003d \" \" + args;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        List\u003cPrefix\u003e prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(trimmedArgs, PREFIX_NAME,","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"                PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION,","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"                PREFIX_EXPERIENCE, PREFIX_INTERVIEW, PREFIX_TAG);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"        // If show command has no prefix, it is invalid","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        if (prefixList.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        // create ShowCommand with the first prefix input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        return new ShowCommand(prefixList.get(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kaushikkrdy":40,"twothicc":9,"Pulpy-y":1}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"     * Returns first occurrence of a person (if any) with same identity as {@code person} in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"    public List\u003cPerson\u003e getDuplicate(Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        return persons.getDuplicate(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"    public void markPerson(Person toMark) {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"        persons.markPerson(toMark);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean checkForMarkedPerson(Person toCheck) {","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"        return persons.checkForMarkedPerson(toCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"    public void unmarkPerson(Person toUnmark) {","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"        persons.unmarkPerson(toUnmark);","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean checkForUnmarkedPerson(Person toCheck) {","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"        return persons.checkForUnmarkedPerson(toCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"twothicc":8,"TohWeiJie01":16,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"     * Returns first occurrence of a person (if any) with same identity as {@code person} in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"    List\u003cPerson\u003e getDuplicate(Person person);","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"     * Marks the given person.","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"    void markPerson(Person target);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks if the given person has already been marked \"Done\".","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"    boolean checkForMarkedPerson(Person target);","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"     * Unmarks the given person.","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"    void unmarkPerson(Person target);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks if the given person has already been unmarked \"Not Done\".","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"    boolean checkForUnmarkedPerson(Person target);","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"twothicc":6,"TohWeiJie01":24,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"    public List\u003cPerson\u003e getDuplicate(Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"        return addressBook.getDuplicate(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"TohWeiJie01"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Changing Person Done Status Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"    public void markPerson(Person target) {","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"TohWeiJie01"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"        addressBook.markPerson(target);","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean checkForMarkedPerson(Person target) {","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"        return addressBook.checkForMarkedPerson(target);","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"TohWeiJie01"},"content":"    public void unmarkPerson(Person target) {","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"TohWeiJie01"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"TohWeiJie01"},"content":"        addressBook.unmarkPerson(target);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean checkForUnmarkedPerson(Person target) {","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"TohWeiJie01"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"TohWeiJie01"},"content":"        return addressBook.checkForUnmarkedPerson(target);","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"twothicc":7,"TohWeiJie01":25,"-":151}},{"path":"src/main/java/seedu/address/model/done/Done.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.done;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":" * Represents an Applicant\u0027s status in RecruitIn; if an Applicant is considered Done, it means that","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" * the recruiter has finished helping an Applicant out and will no longer need to contact the Applicant.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class Done {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String STATUS_DONE \u003d \"Done\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String STATUS_UNDONE \u003d \"Not Done\";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    public static final Done DONE \u003d new Done(STATUS_DONE);","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    public static final Done UNDONE \u003d new Done(STATUS_UNDONE);","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String FIND_MESSAGE_CONSTRAINTS \u003d \"You can only search for Done or Not Done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    private String doneStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for Done; every Applicant will initially be marked as Not Done.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    public Done() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        this.doneStatus \u003d STATUS_UNDONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * Secondary constructor for Done.","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    public Done(String doneStatus) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(doneStatus);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        assert (doneStatus.equalsIgnoreCase(STATUS_DONE) || doneStatus.equalsIgnoreCase(STATUS_UNDONE));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        this.doneStatus \u003d doneStatus;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        return doneStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        this.doneStatus \u003d STATUS_DONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    public void setAsUndone() {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        this.doneStatus \u003d STATUS_UNDONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        return doneStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof Done // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 (doneStatus.equals(((Done) other).doneStatus))); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        return doneStatus.hashCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"TohWeiJie01":63}},{"path":"src/main/java/seedu/address/model/done/DoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.done;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"public class DoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    public DoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"            return keywords.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"                    .allMatch(keyword -\u003e person.getDone().getDoneStatus().equalsIgnoreCase(keyword));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof DoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 keywords.equals(((DoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"TohWeiJie01":32}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":" * Represents an interview in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":" * Guarantees: immutable; time input is valid as declared in {@link #isValidInterviewTime(String)}","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"public class Interview {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"    public static final Interview EMPTY_INTERVIEW \u003d new Interview(\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    public static final String PARSE_FORMAT \u003d \"yyyy-M-d, H:m\"; //e.g. 2022-09-21, 9:30","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"    public static final String DISPLAY_FORMAT \u003d \"MMM dd yyyy , HH:mm\"; //e.g. Sep 21 2022, 09:30","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"    public static final String EMPTY_TIME \u003d \"-\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"            \"Interview time should be on a valid day and follow the format: \"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"                    + \"yyyy-M-d, H:m (Year should be strictly 4-digit while others can be either 1 or 2 digit) \"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"                    + \"E.g. i/2021-09-01, 8:00 or i/2021-9-1,08:00\";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"    public final String parseTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"     * Constructs an {@code Interview}.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"     * @param time A valid interview time.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"    public Interview(String time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"        if (time.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"            this.parseTime \u003d EMPTY_TIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"            requireNonNull(time);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"            checkArgument(isValidInterviewTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"            this.parseTime \u003d time;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"     * Returns true if a given string is a valid interview time which follows the timing format.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"    public static boolean isValidInterviewTime(String test) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"        if (test.equals(EMPTY_TIME)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"            DateFormat df \u003d new SimpleDateFormat(PARSE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"            df.setLenient(false);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"            df.parse(test);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"     * Returns true if this Interview has passed with respect to the current date and time, and false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"    public boolean hasInterviewPassed() {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        assert isValidInterviewTime(this.parseTime) : \"Not a valid interview time\";","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"            DateFormat parseFormat \u003d new SimpleDateFormat(PARSE_FORMAT);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Pulpy-y"},"content":"            Date interview \u003d parseFormat.parse(parseTime);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"Pulpy-y"},"content":"            return interview.before(java.util.Calendar.getInstance().getTime());","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"Pulpy-y"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"Pulpy-y"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"Pulpy-y"},"content":"        return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"     * Returns true if this Interview is an empty interview, and false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"    public boolean isEmptyInterview() {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"        return this.equals(Interview.EMPTY_INTERVIEW);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"Pulpy-y"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"Pulpy-y"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"Pulpy-y"},"content":"                || (other instanceof Interview // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"Pulpy-y"},"content":"                \u0026\u0026 parseTime.equals(((Interview) other).parseTime)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"Pulpy-y"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"Pulpy-y"},"content":"        return parseTime.hashCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"Pulpy-y"},"content":"     * Returns the time in display format.","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Pulpy-y"},"content":"     * @return Formatted time.","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"Pulpy-y"},"content":"    public String displayTime() {","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"Pulpy-y"},"content":"        String formatted \u003d parseTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"Pulpy-y"},"content":"        if (!isEmptyInterview()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"Pulpy-y"},"content":"            try {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Pulpy-y"},"content":"                DateFormat parseFormat \u003d new SimpleDateFormat(PARSE_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"Pulpy-y"},"content":"                Date date \u003d parseFormat.parse(parseTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"Pulpy-y"},"content":"                DateFormat displayFormat \u003d new SimpleDateFormat(DISPLAY_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"Pulpy-y"},"content":"                formatted \u003d displayFormat.format(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"Pulpy-y"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"Pulpy-y"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"Pulpy-y"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"Pulpy-y"},"content":"        return formatted;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"Pulpy-y"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"Pulpy-y"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"Pulpy-y"},"content":"        return parseTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kaushikkrdy":1,"Pulpy-y":107,"BryannYeap":13}},{"path":"src/main/java/seedu/address/model/interview/InterviewContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":" * Tests that a {@code Person}\u0027s {@code Interview} matches any of the keywords given.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"public class InterviewContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"            \"Interview can only be searched through numbers and relevant characters such as \u0027-\u0027 or \u0027:\u0027, \"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"                    + \"and it should not contain alphabets \";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"    public InterviewContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"                        person.getInterview().orElse(Interview.EMPTY_INTERVIEW).displayTime(), keyword));","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"                || (other instanceof InterviewContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"                \u0026\u0026 keywords.equals(((InterviewContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Pulpy-y":39}},{"path":"src/main/java/seedu/address/model/notes/Notes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":" * Represents the notes about an applicant in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"public class Notes {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    public static final Notes EMPTY_NOTES \u003d new Notes(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    public final String information;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructs a {@code Notes}.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param information A valid level of education.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    public Notes(String information) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(information);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        this.information \u003d information;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        return information;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof Notes // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 information.equals(((Notes) other).information)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        return information.hashCode();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"TohWeiJie01":41}},{"path":"src/main/java/seedu/address/model/notes/NotesContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.notes;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":" * Tests that a {@code Person}\u0027s {@code Notes} matches the keyword given.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"public class NotesContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"    public NotesContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"        return person.getNotes().orElse(Notes.EMPTY_NOTES).toString().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"                || (other instanceof NotesContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 keyword.equals(((NotesContainsKeywordsPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaushikkrdy":30,"Pulpy-y":1}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"            + \"    - consist of at least 2 domain labels\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)+\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"twothicc":2,"-":70}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kaushikkrdy":29,"BryannYeap":3}},{"path":"src/main/java/seedu/address/model/person/EmploymentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"public class EmploymentType {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"    public enum Type {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"        FULL_TIME(\"Full time\"),","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"        PART_TIME(\"Part time\"),","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"        TEMPORARY(\"Temporary\"),","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"        INTERNSHIP(\"Internship\");","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"        private final String term;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"        Type(String term) {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"            this.term \u003d term;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"        public static ArrayList\u003cString\u003e getTerms() {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"            ArrayList\u003cString\u003e terms \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"            for (Type type: Type.values()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"                terms.add(type.term);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"            return terms;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"        public static String getRegex() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"            StringBuilder regex \u003d new StringBuilder(\"(?i)\\\\b(?:\");","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"            for (Type type: Type.values()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"                regex.append(type.term);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"                regex.append(\"|\");","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"            regex.append(\"\\\\w+)\\\\b\");","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"            return regex.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Employment type can only be one of the following: \"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"            + \"Full time, Part time, Temporary or Internship\";","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String FIND_MESSAGE_CONSTRAINTS \u003d \"You can only search for keywords that start with \"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            + \"one or more of the following employment types: Full time, Part time, Temporary or Internship\";","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"    public final String employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"     * Constructs a {@code EmploymentType}.","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"     * @param employmentType A valid employment type.","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"    public EmploymentType(String employmentType) {","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"        requireNonNull(employmentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"        checkArgument(isValidEmploymentType(employmentType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"        this.employmentType \u003d getCorrectCapitalization(employmentType);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"     * Returns true if a given string is a valid employment type.","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"     * @param test String to be tested.","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"     * @return Boolean indicating if given string is a valid employment type.","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"    public static boolean isValidEmploymentType(String test) {","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"        return test.equalsIgnoreCase(Type.FULL_TIME.term) || test.equalsIgnoreCase(Type.PART_TIME.term)","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"                || test.equalsIgnoreCase(Type.TEMPORARY.term) || test.equalsIgnoreCase(Type.INTERNSHIP.term);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"        return employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"kaushikkrdy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"kaushikkrdy"},"content":"                || (other instanceof EmploymentType // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 employmentType.equals(((EmploymentType) other).employmentType)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"kaushikkrdy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"kaushikkrdy"},"content":"        return employmentType.hashCode();","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"kaushikkrdy"},"content":"    private String getCorrectCapitalization(String employmentType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cString\u003e employmentTypes \u003d EmploymentType.Type.getTerms();","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kaushikkrdy"},"content":"        for (String et: employmentTypes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kaushikkrdy"},"content":"            if (et.equalsIgnoreCase(employmentType)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"                return et;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kaushikkrdy"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kaushikkrdy"},"content":"        return null;","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kaushikkrdy":97,"TohWeiJie01":2}},{"path":"src/main/java/seedu/address/model/person/EmploymentTypeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"public class EmploymentTypeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"    public EmploymentTypeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"                .anyMatch(keyword -\u003e person.getEmploymentType().employmentType.toLowerCase()","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"                        .startsWith(keyword.toLowerCase()));","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"                || (other instanceof EmploymentTypeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 keywords.equals(((EmploymentTypeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kaushikkrdy":27}},{"path":"src/main/java/seedu/address/model/person/ExpectedSalary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" * Represents a Person\u0027s expected salary in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExpectedSalary(String)}","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"public class ExpectedSalary {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Expected salary should only be a non-negative integer \"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"            + \"(ranges from 0 to 2^(31) - 1 inclusive), and it should not be blank\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     * The first character of the salary must not be a whitespace,","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    public final String value;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an {@code ExpectedSalary}.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     * @param expectedSalary A valid expected salary.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    public ExpectedSalary(String expectedSalary) {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        requireNonNull(expectedSalary);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        checkArgument(isValidExpectedSalary(expectedSalary), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        String leadingZeroesRemoved \u003d StringUtil.removeLeadingZeroes(expectedSalary);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        value \u003d leadingZeroesRemoved.isEmpty() ? \"0\" : leadingZeroesRemoved;","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    public static boolean isValidExpectedSalary(String test) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"            if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"                Integer.parseInt(test);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"                return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        return value;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"                || (other instanceof ExpectedSalary // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"                \u0026\u0026 value.equals(((ExpectedSalary) other).value)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Pulpy-y":1,"BryannYeap":70}},{"path":"src/main/java/seedu/address/model/person/ExpectedSalaryWithinRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" * Tests that a {@code Person}\u0027s {@code ExpectedSalary} is within range of any of the keywords given.","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"public class ExpectedSalaryWithinRangePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public static final int RANGE \u003d 500;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    public ExpectedSalaryWithinRangePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"                .anyMatch(keyword -\u003e StringUtil.areUnsignedIntegersWithinRange(","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"                        person.getExpectedSalary().value, keyword, RANGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                || (other instanceof ExpectedSalaryWithinRangePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"                \u0026\u0026 keywords.equals(((ExpectedSalaryWithinRangePredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"BryannYeap":35}},{"path":"src/main/java/seedu/address/model/person/Experience.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":" * Represents an Applicant\u0027s applied role in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"public class Experience {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Year of Experience should be a non-negative number \"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"            + \"no larger than 67 (e-employment age in Singapore), \"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"            + \"which can be either an integer or a double with only 0 or 5 behind decimal point\"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"            + \", and it should not be blank. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"            + \"E.g. y/1, y/0.5, y/3.0\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"     * Check that experience is an integer or a double with only 0 or 5 behind decimal point.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"    public static final String VALIDATION_REGEX \u003d \"(\\\\d{0,2}\\\\.5)|(\\\\d{0,2}\\\\.0)|(\\\\d{0,2})\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"    public static final double MAX_EXPERIENCE \u003d 67.0;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"     * Constructs a {@code Experience}.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"     * @param experience A valid integer.","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"    public Experience(String experience) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"        requireNonNull(experience);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        checkArgument(isValidExperience(experience), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"        String leadingZeroesRemoved \u003d StringUtil.removeLeadingZeroes(experience);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"        value \u003d leadingZeroesRemoved.isEmpty() ? \"0\" : leadingZeroesRemoved;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"     * Returns true if a given number matches validation.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"    public static boolean isValidExperience(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"            if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"                double value \u003d Double.parseDouble(test);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"                return (value \u003c\u003d MAX_EXPERIENCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"            return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"Pulpy-y"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"                || (other instanceof Experience // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"                \u0026\u0026 value.equals(((Experience) other).value)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"Pulpy-y"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"Pulpy-y"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Pulpy-y":71,"BryannYeap":1}},{"path":"src/main/java/seedu/address/model/person/ExperienceContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"public class ExperienceContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"    public ExperienceContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"                        StringUtil.isDoubleLargerOrEqualToValue(person.getExperience().value, keyword));","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"                || (other instanceof ExperienceContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"                \u0026\u0026 keywords.equals(((ExperienceContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Pulpy-y":29}},{"path":"src/main/java/seedu/address/model/person/LevelOfEducation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" * Represents an Applicant\u0027s level of education in RecruitIn.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"public class LevelOfEducation {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * Enumeration of the possible levels of education supported by RecruitIn.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    public enum Education {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"        ELEMENTARY(\"Elementary\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        MIDDLE_SCHOOL(\"Middle School\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        HIGH_SCHOOL(\"High School\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        UNIVERSITY(\"University\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        BACHELORS(\"Bachelors\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        MASTERS(\"Masters\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        PHD(\"PhD\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        /** The level of education of a Person. */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        private final String educationLevel;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        /**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"         * Constructor for the Education Enumeration.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"         *","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"         * @param educationLevel The level of education of a Person.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"         */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        Education(String educationLevel) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"            this.educationLevel \u003d educationLevel;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        public static ArrayList\u003cString\u003e getEducationLevels() {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            ArrayList\u003cString\u003e educationLevels \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            for (Education education: Education.values()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"                educationLevels.add(education.educationLevel);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            return educationLevels;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        public static String getRegex() {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            StringBuilder regex \u003d new StringBuilder(\"(?i)\\\\b(?:\");","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            for (Education education: Education.values()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"                regex.append(education.educationLevel);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                regex.append(\"|\");","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"            regex.append(\"\\\\w+)\\\\b\");","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"            return regex.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"            \"Level of Education should only be one of the following: Elementary, Middle School,\"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"                    + \" High School, University, Bachelors, Masters or PhD\";","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String FIND_MESSAGE_CONSTRAINTS \u003d \"You can only search for keywords that start with \"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"            + \"one or more of the following levels of education: Elementary, Middle School, High School, University,\"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"            + \" Bachelors, Masters or PhD\";","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"    public final String levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructs a {@code LevelOfEducation}.","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"     * @param levelOfEducation A valid level of education.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"    public LevelOfEducation(String levelOfEducation) {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(levelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"        checkArgument(isValidLevelOfEducation(levelOfEducation), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"        this.levelOfEducation \u003d getCorrectCapitalization(levelOfEducation);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns true if a given string is a valid level of education.","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"     * @param test String to be tested.","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Boolean indicating if given string is a valid level of education.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"    public static boolean isValidLevelOfEducation(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"        return test.equalsIgnoreCase(Education.ELEMENTARY.educationLevel)","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"                || test.equalsIgnoreCase(Education.MIDDLE_SCHOOL.educationLevel)","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"                || test.equalsIgnoreCase(Education.HIGH_SCHOOL.educationLevel)","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                || test.equalsIgnoreCase(Education.UNIVERSITY.educationLevel)","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"                || test.equalsIgnoreCase(Education.BACHELORS.educationLevel)","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"                || test.equalsIgnoreCase(Education.MASTERS.educationLevel)","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"                || test.equalsIgnoreCase(Education.PHD.educationLevel);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"        return levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof LevelOfEducation // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 levelOfEducation.equals(((LevelOfEducation) other).levelOfEducation)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"        return levelOfEducation.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"    private String getCorrectCapitalization(String levelOfEducation) {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cString\u003e levelsOfEducation \u003d LevelOfEducation.Education.getEducationLevels();","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"        for (String l: levelsOfEducation) {","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"            if (l.equalsIgnoreCase(levelOfEducation)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"                return l;","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"        return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"TohWeiJie01":121}},{"path":"src/main/java/seedu/address/model/person/LevelOfEducationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" * Tests that a {@code Person}\u0027s {@code Level of Education} matches any of the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class LevelOfEducationContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    public LevelOfEducationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"                .anyMatch(keyword -\u003e person.getLevelOfEducation().levelOfEducation.toLowerCase()","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"                        .startsWith(keyword.toLowerCase()));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"                || (other instanceof LevelOfEducationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 keywords.equals(((LevelOfEducationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"TohWeiJie01":30}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kaushikkrdy":1,"-":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    // Category fields","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    private final Role role;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"    private final EmploymentType employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"    private final ExpectedSalary expectedSalary;","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    private final LevelOfEducation levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"    private final Experience experience;","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    private final Optional\u003cInterview\u003e interview;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    private final Optional\u003cNotes\u003e notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    // Status fields","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    private final Done done;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    public Person(Name name, Phone phone, Email email,","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"                  Role role, EmploymentType employmentType, ExpectedSalary expectedSalary,","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"                  LevelOfEducation levelOfEducation, Experience experience, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                  Optional\u003cInterview\u003e interview, Optional\u003cNotes\u003e notes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        requireAllNonNull(name, phone, email, role, expectedSalary, levelOfEducation,","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"                experience, tags, interview, notes);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"        this.employmentType \u003d employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        this.expectedSalary \u003d expectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        this.levelOfEducation \u003d levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"        this.experience \u003d experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"Pulpy-y"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"        this.done \u003d new Done();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"     * Secondary constructor for Person.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"    public Person(Name name, Phone phone, Email email,","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"                  Role role, EmploymentType employmentType, ExpectedSalary expectedSalary,","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"                  LevelOfEducation levelOfEducation, Experience experience, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"                  Optional\u003cInterview\u003e interview, Optional\u003cNotes\u003e notes, Done done) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"        requireAllNonNull(name, phone, email, role, expectedSalary, levelOfEducation, experience,","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"                tags, interview, notes, done);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"        this.employmentType \u003d employmentType;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"        this.expectedSalary \u003d expectedSalary;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"        this.levelOfEducation \u003d levelOfEducation;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"        this.experience \u003d experience;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"    public Role getRole() {","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"        return role;","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"kaushikkrdy"},"content":"    public EmploymentType getEmploymentType() {","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"kaushikkrdy"},"content":"        return employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"    public ExpectedSalary getExpectedSalary() {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"        return expectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"    public LevelOfEducation getLevelOfEducation() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"        return levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Pulpy-y"},"content":"    public Experience getExperience() {","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"Pulpy-y"},"content":"        return experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"Pulpy-y"},"content":"     * If interview is present, return interview; Else, return an instance of empty interview.","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"Pulpy-y"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"Pulpy-y"},"content":"     * @return Person\u0027s interview timing or an empty interview.","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"Pulpy-y"},"content":"    public Optional\u003cInterview\u003e getInterview() {","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"Pulpy-y"},"content":"        return interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"    public Optional\u003cNotes\u003e getNotes() {","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"        return notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"    public Done getDone() {","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"        return done;","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"     * Returns true if both persons have the same email or contact number.","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"                \u0026\u0026 (otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"                        || otherPerson.getPhone().equals(getPhone()));","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"                \u0026\u0026 otherPerson.getRole().equals(getRole())","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 otherPerson.getEmploymentType().equals(getEmploymentType())","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"BryannYeap"},"content":"                \u0026\u0026 otherPerson.getExpectedSalary().equals(getExpectedSalary())","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 otherPerson.getLevelOfEducation().equals(getLevelOfEducation())","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"Pulpy-y"},"content":"                \u0026\u0026 otherPerson.getExperience().equals(getExperience())","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"Pulpy-y"},"content":"                \u0026\u0026 otherPerson.getInterview().equals(getInterview())","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 otherPerson.getNotes().equals(getNotes())","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"TohWeiJie01"},"content":"                \u0026\u0026 otherPerson.getDone().equals(getDone());","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"TohWeiJie01"},"content":"        return Objects.hash(name, phone, email, role, employmentType,","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"TohWeiJie01"},"content":"                expectedSalary, levelOfEducation, experience, tags, interview, notes, done);","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"twothicc"},"content":"                .append(\"; Applied Role: \")","lastModifiedDate":"2021-09-27"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"                .append(getRole())","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"kaushikkrdy"},"content":"                .append(\"; Employment Type: \")","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"kaushikkrdy"},"content":"                .append(getEmploymentType())","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"BryannYeap"},"content":"                .append(\"; Expected Salary: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"Pulpy-y"},"content":"                .append(getExpectedSalary())","lastModifiedDate":"2021-10-03"},{"lineNumber":209,"author":{"gitId":"TohWeiJie01"},"content":"                .append(\"; Level of Education: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"TohWeiJie01"},"content":"                .append(getLevelOfEducation())","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"Pulpy-y"},"content":"                .append(\"; Years of Experience: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"Pulpy-y"},"content":"                .append(getExperience());","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Pulpy-y"},"content":"        builder.append(\"; Interview: \")","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Pulpy-y"},"content":"                .append(getInterview())","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"TohWeiJie01"},"content":"                .append(\"; Notes: \")","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"TohWeiJie01"},"content":"                .append(getNotes())","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"TohWeiJie01"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"TohWeiJie01"},"content":"                .append(getDone());","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"BryannYeap"},"content":"        return builder.append(\"\\n\").toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaushikkrdy":9,"TohWeiJie01":60,"twothicc":13,"Pulpy-y":24,"-":115,"BryannYeap":8}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        return keywords.stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"BryannYeap":32}},{"path":"src/main/java/seedu/address/model/person/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":" * Represents an Applicant\u0027s applied role in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"public class Role {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"            \"Applied role should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    /*","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"    public final String role;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"     * @param role A valid job role.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    public Role(String role) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        requireNonNull(role);","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"     * Returns true if a given string is a valid job role.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"     * @param test String to be tested.","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"     * @return Boolean indicating if given string is a valid job role.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        return role;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"                || (other instanceof Role // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"                \u0026\u0026 role.equals(((Role) other).role)); // state check","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        return role.hashCode();","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"twothicc":59}},{"path":"src/main/java/seedu/address/model/person/RoleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"public class RoleContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    public RoleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"            return keywords.stream()","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getRole().role, keyword));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"                || (other instanceof RoleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"                \u0026\u0026 keywords.equals(((RoleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"twothicc":32}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"     * Returns first occurrence of a person (if any) with same identity as {@code person} in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"    public List\u003cPerson\u003e getDuplicate(Person toCheck) {","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        return internalList.stream().filter(x -\u003e x.isSamePerson(toCheck)).collect(Collectors.toList());","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"     * Marks the status of the person in the list to \"Done\".","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"    public void markPerson(Person toMark) {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"        int index \u003d internalList.indexOf(toMark);","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"        Person markedPerson \u003d internalList.get(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"        markedPerson.getDone().setAsDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"        internalList.set(index, markedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks the status of the person in the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"     * If the status of the person is \"Done\" returns true; false otherwise.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean checkForMarkedPerson(Person toCheck) {","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"TohWeiJie01"},"content":"        int index \u003d internalList.indexOf(toCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"        Person markedPerson \u003d internalList.get(index);","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"        return markedPerson.getDone().equals(Done.DONE);","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"     * Unmarks the status of the person in the list to \"Not Done\".","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"TohWeiJie01"},"content":"    public void unmarkPerson(Person toUnmark) {","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(toUnmark);","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"TohWeiJie01"},"content":"        int index \u003d internalList.indexOf(toUnmark);","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"TohWeiJie01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"TohWeiJie01"},"content":"        Person unmarkedPerson \u003d internalList.get(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"        unmarkedPerson.getDone().setAsUndone();","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"TohWeiJie01"},"content":"        internalList.set(index, unmarkedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks the status of the person in the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"     * If the status of the person is \"Not Done\" returns true; false otherwise.","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean checkForUnmarkedPerson(Person toCheck) {","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"        int index \u003d internalList.indexOf(toCheck);","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"TohWeiJie01"},"content":"        Person markedPerson \u003d internalList.get(index);","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"TohWeiJie01"},"content":"        return markedPerson.getDone().equals(Done.UNDONE);","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"twothicc":9,"TohWeiJie01":69,"-":137}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should only be alphanumeric (no spaces)\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"BryannYeap":1}},{"path":"src/main/java/seedu/address/model/tag/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":" * Tests that a {@code Person}\u0027s {@code Tag}s matches any of the keywords given.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"     * Checks if keyword can be found in any tags within a set of tags.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"     * @param tags Set of tags to be tested.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"     * @param keyword String keyword to be found.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"     * @return Boolean indicating if keyword can be found in any tags within the tested set of tags.","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"    private boolean testTags(Set\u003cTag\u003e tags, String keyword) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"        boolean isKeywordInTags \u003d false;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"        Iterator\u003cTag\u003e tagsIterator \u003d tags.iterator();","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"        while (tagsIterator.hasNext() \u0026\u0026 !isKeywordInTags) {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"            Tag currentTag \u003d tagsIterator.next();","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"            isKeywordInTags \u003d StringUtil.containsWordIgnoreCase(currentTag.tagName, keyword);","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"        return isKeywordInTags;","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"                .anyMatch(keyword -\u003e testTags(person.getTags(), keyword));","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kaushikkrdy":47,"BryannYeap":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                new Email(\"alex_yeoh@gmail.com\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"                new Role(\"Software Engineer\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentType(\"Full time\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalary(\"4500\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducation(\"PhD\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"                new Experience(\"0\"),","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"                getTagSet(\"Excellent\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Interview(\"2021-10-20, 9:30\")),","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Notes(\"He is a perfect candidate for this job!\"))),","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"                new Email(\"berniceyu99@yahoo.com.sg\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"                new Role(\"Software Tester\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentType(\"Part time\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalary(\"3300\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducation(\"Masters\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"                new Experience(\"1\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"                getTagSet(\"Remarkable\", \"Passionate\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.empty(),","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Notes(\"She is very passionate about this field.\"))),","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"                new Email(\"ch4rl0tt3@hotmail.com\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"                new Role(\"Receptionist\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentType(\"Temporary\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalary(\"1200\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducation(\"Elementary\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"                new Experience(\"2\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"                getTagSet(\"Average\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Interview(\"2021-10-20, 11:00\")),","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Notes(\"Nothing outstanding about this applicant.\"))),","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"                new Email(\"li.david@u.nus.edu\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"                new Role(\"Lab Technician\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentType(\"Internship\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalary(\"0\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducation(\"Bachelors\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"                new Experience(\"3\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"                getTagSet(\"Outstanding\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"                Optional.of(new Interview(\"2022-10-20, 15:00\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Notes(\"He would not fit the job based off his resume.\"))),","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"                new Email(\"irfan-ibrahim@gmail.com.sg\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"                new Role(\"Cashier\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentType(\"Full time\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"                new ExpectedSalary(\"2200\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducation(\"Middle School\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Pulpy-y"},"content":"                new Experience(\"4\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"                getTagSet(\"Good\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.empty(),","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Pulpy-y"},"content":"                Optional.empty()),","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"                new Email(\"royb@hotmail.com\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"                new Role(\"Financial Advisor\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentType(\"Part time\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalary(\"3600\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducation(\"High School\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Pulpy-y"},"content":"                new Experience(\"5\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"                getTagSet(\"Normal\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"                Optional.of(new Interview(\"2022-01-20, 15:00\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                Optional.of(new Notes(\"He has past leadership skills, \"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"                        + \"but do not have proper experience in this field.\")))","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kaushikkrdy":10,"TohWeiJie01":30,"twothicc":1,"Pulpy-y":11,"-":41,"BryannYeap":18}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"    private final String role;","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"    private final String employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    private final String expectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    private final String levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    private final String experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    private final String interview;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    private final String notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    private final String done;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"role\") String role,","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"employmentType\") String employmentType,","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"expectedSalary\") String expectedSalary,","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"            @JsonProperty(\"levelOfEducation\") String levelOfEducation,","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"            @JsonProperty(\"experience\") String experience,","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"            @JsonProperty(\"interview\") String interview,","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"            @JsonProperty(\"notes\") String notes,","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"            @JsonProperty(\"done\") String done) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"        this.role \u003d role;","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"        this.employmentType \u003d employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        this.expectedSalary \u003d expectedSalary;","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"        this.levelOfEducation \u003d levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"        this.experience \u003d experience;","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Pulpy-y"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"        role \u003d source.getRole().role;","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"kaushikkrdy"},"content":"        employmentType \u003d source.getEmploymentType().employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        expectedSalary \u003d source.getExpectedSalary().value;","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"        levelOfEducation \u003d source.getLevelOfEducation().levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Pulpy-y"},"content":"        experience \u003d source.getExperience().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"Pulpy-y"},"content":"        interview \u003d source.getInterview().orElse(Interview.EMPTY_INTERVIEW).parseTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"        notes \u003d source.getNotes().orElse(Notes.EMPTY_NOTES).information;","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"        done \u003d source.getDone().getDoneStatus();","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"        final Role modelRole \u003d new Role(role);","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"kaushikkrdy"},"content":"        if (employmentType \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"kaushikkrdy"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"kaushikkrdy"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EmploymentType.class.getSimpleName()));","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"kaushikkrdy"},"content":"        if (!EmploymentType.isValidEmploymentType(employmentType)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"kaushikkrdy"},"content":"            throw new IllegalValueException(EmploymentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"kaushikkrdy"},"content":"        final EmploymentType modelEmploymentType \u003d new EmploymentType(employmentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"BryannYeap"},"content":"        if (expectedSalary \u003d\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"BryannYeap"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"BryannYeap"},"content":"                    ExpectedSalary.class.getSimpleName()));","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"        if (!ExpectedSalary.isValidExpectedSalary(expectedSalary)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"BryannYeap"},"content":"            throw new IllegalValueException(ExpectedSalary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"BryannYeap"},"content":"        final ExpectedSalary modelExpectedSalary \u003d new ExpectedSalary(expectedSalary);","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"        if (levelOfEducation \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, LevelOfEducation.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"        if (!LevelOfEducation.isValidLevelOfEducation(levelOfEducation)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"            throw new IllegalValueException(LevelOfEducation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"        final LevelOfEducation modelLevelOfEducation \u003d new LevelOfEducation(levelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"Pulpy-y"},"content":"        if (experience \u003d\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"Pulpy-y"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"Pulpy-y"},"content":"                    Experience.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"Pulpy-y"},"content":"        if (!Experience.isValidExperience(experience)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"Pulpy-y"},"content":"            throw new IllegalValueException(Experience.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"Pulpy-y"},"content":"        final Experience modelExperience \u003d new Experience(experience);","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"Pulpy-y"},"content":"        final Optional\u003cInterview\u003e modelInterview;","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"Pulpy-y"},"content":"        if (interview \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"Pulpy-y"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"Pulpy-y"},"content":"                    Interview.class.getSimpleName()));","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"Pulpy-y"},"content":"        if (interview.equals(\"-\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"Pulpy-y"},"content":"            modelInterview \u003d Optional.ofNullable(Interview.EMPTY_INTERVIEW);","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"Pulpy-y"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"Pulpy-y"},"content":"            if (!Interview.isValidInterviewTime(interview)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"Pulpy-y"},"content":"                throw new IllegalValueException(Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"Pulpy-y"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"Pulpy-y"},"content":"            modelInterview \u003d Optional.ofNullable(new Interview(interview));","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"Pulpy-y"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"TohWeiJie01"},"content":"        if (notes \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"TohWeiJie01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"TohWeiJie01"},"content":"                    Interview.class.getSimpleName()));","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"TohWeiJie01"},"content":"        final Optional\u003cNotes\u003e modelNotes \u003d Optional.ofNullable(new Notes(notes));","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"TohWeiJie01"},"content":"        final Done modelDone \u003d new Done(done);","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"TohWeiJie01"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRole, modelEmploymentType,","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"TohWeiJie01"},"content":"                modelExpectedSalary, modelLevelOfEducation, modelExperience, modelTags,","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"TohWeiJie01"},"content":"                modelInterview, modelNotes, modelDone);","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaushikkrdy":22,"TohWeiJie01":39,"twothicc":10,"Pulpy-y":30,"-":96,"BryannYeap":14}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-f11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaushikkrdy":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"    private TextFlow name;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"    private TextFlow id;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    private TextFlow phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"    private TextFlow email;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"    private TextFlow role;","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"    @FXML","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"    private TextFlow employmentType;","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"    private TextFlow expectedSalary;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"    private TextFlow levelOfEducation;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"    private TextFlow experience;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"    @FXML","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"    private TextFlow interview;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"    private TextFlow notes;","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"    private FlowPane done;","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"    private FlowPane notDone;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        id.getChildren().add(getText(displayedIndex + \". \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"        name.getChildren().add(getText(person.getName().fullName));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        phone.getChildren().add(getText(\"Phone Number: \" + person.getPhone().value));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        email.getChildren().add(getText(\"Email: \" + person.getEmail().value));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"        role.getChildren().add(getText(\"Applied Role: \" + person.getRole().role));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"        employmentType.getChildren().add(getText(\"Employment Type: \" + person.getEmploymentType().employmentType));","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"        expectedSalary.getChildren().add(getText(\"Expected Salary: $\" + person.getExpectedSalary().value));","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"        levelOfEducation.getChildren().add(getText(\"Level of Education: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"                + person.getLevelOfEducation().levelOfEducation));","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"        experience.getChildren().add(getText(\"Years of Experience: \" + person.getExperience().value));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"        interview.getChildren().add(getText(\"Interview Time: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Pulpy-y"},"content":"                + person.getInterview().orElse(Interview.EMPTY_INTERVIEW).displayTime()));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"        notes.getChildren().add(getText(\"Notes: \" + person.getNotes().orElse(Notes.EMPTY_NOTES).information));","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        if (person.getDone().getDoneStatus().equals(Done.STATUS_DONE)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"            done.getChildren().add(new Label(Done.STATUS_DONE));","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"            notDone.getChildren().clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"            notDone.getChildren().add(new Label(Done.STATUS_UNDONE));","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"            done.getChildren().clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"    private Text getText(String text) {","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"        Text node \u003d new Text(text);","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"        node.getStyleClass().add(\"text\");","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"        return node;","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"    private String getId() {","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"        Text textNode \u003d (Text) id.getChildren().get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"        return textNode.getText();","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"        return this.getId().equals(card.getId())","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kaushikkrdy":1,"twothicc":36,"TohWeiJie01":7,"Pulpy-y":5,"-":69,"BryannYeap":9}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: derive(#00102b, 10%);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: derive(#00102b, 10%);","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: #012d57;","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: #03396c;","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"    -fx-border-left-color: #00102b;","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"    -fx-border-top-color: #00102b;","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"    -fx-border-right-color: #00102b;","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"    -fx-border-right-color: #323335;","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":".cell_big_label .text {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"    -fx-fill: #e1dddd;","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":".cell_small_label .text {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"    -fx-fill: #e1dddd;","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"     -fx-background-color: #005b96;","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"twothicc"},"content":"     -fx-background-color: derive(#00102b, 10%);","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"     -fx-border-left-color: derive(#262525, 10%);","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"     -fx-border-right-color: derive(#262525, 10%);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: #323335;","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: derive(#00102b, 10%);","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: #005b96;","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: derive(#00102b, 20%);","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"twothicc"},"content":".corner {","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: #00102b;","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"twothicc"},"content":"    -fx-background-color: transparent, #03396c, transparent, #03396c;","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"twothicc"},"content":"    -fx-background-insets: 2 0 0 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"TohWeiJie01"},"content":"#done .label {","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"TohWeiJie01"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"TohWeiJie01"},"content":"    -fx-background-color: #008000;","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"TohWeiJie01"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"twothicc"},"content":"    -fx-background-insets: 2 0 0 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"TohWeiJie01"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"TohWeiJie01"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"TohWeiJie01"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"BryannYeap"},"content":"#notDone .label {","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"BryannYeap"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"BryannYeap"},"content":"    -fx-background-color: #bd3e4b;","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"BryannYeap"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"twothicc"},"content":"    -fx-background-insets: 2 0 0 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"BryannYeap"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"BryannYeap"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"BryannYeap"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"twothicc":29,"TohWeiJie01":9,"-":335,"BryannYeap":9}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"         title\u003d\"RecruitIn\" minWidth\u003d\"800\" maxWidth\u003d\"800\" minHeight\u003d\"600\"  onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" prefWidth\u003d\"784\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background: #00102b;\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"twothicc":4,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"745\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        \u003cInsets bottom\u003d\"25\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        \u003cTextFlow fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        \u003cTextFlow fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"      \u003cFlowPane fx:id\u003d\"done\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"      \u003cFlowPane fx:id\u003d\"notDone\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"         \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"               \u003cVBox HBox.hgrow\u003d\"ALWAYS\" prefWidth\u003d\"362.5\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"                   \u003cpadding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"                       \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"5\" top\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"                   \u003c/padding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"employmentType\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"expectedSalary\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"levelOfEducation\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"                    \u003cTextFlow fx:id\u003d\"experience\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"               \u003cVBox HBox.hgrow\u003d\"ALWAYS\" prefWidth\u003d\"362.5\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"                   \u003cstyle\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"                       -fx-border-style: hidden hidden hidden solid;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"                       -fx-border-color: rgba(225,221,221,0.37);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"                   \u003c/style\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"                   \u003cpadding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"                       \u003cInsets bottom\u003d\"0\" left\u003d\"5\" right\u003d\"0\" top\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"                   \u003c/padding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"                        \u003cTextFlow fx:id\u003d\"interview\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"                        \u003cTextFlow fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"twothicc":48,"TohWeiJie01":1,"-":24,"BryannYeap":1}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fillWidth\u003d\"true\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"twothicc":1,"-":7}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"BryannYeap"},"content":"    //---------------- Tests for removeLeadingZeroes --------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"BryannYeap"},"content":"    public void removeLeadingZeroes() {","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"BryannYeap"},"content":"        // EP: empty strings","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"\"), \"\"); // Boundary value","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"  \"), \"  \");","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"BryannYeap"},"content":"        // EP: not a number","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"a\"), \"a\");","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"0000aaa\"), \"aaa\");","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"        // EP: numbers with leading zeroes","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"01\"), \"1\");","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"00000001\"), \"1\");","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"BryannYeap"},"content":"        // EP: strings with white space","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"000 12 \"), \" 12 \"); // Leading/trailing spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"000001 2\"), \"1 2\"); // Spaces in the middle","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"BryannYeap"},"content":"        // EP: strings with zeroes that aren\u0027t leading zeroes","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"120021\"), \"120021\"); // Leading/trailing spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(StringUtil.removeLeadingZeroes(\"000abc000abc000\"), \"abc000abc000\"); // Spaces in the middle","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"BryannYeap"},"content":"    //---------------- Tests for isUnsignedInteger ----------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"BryannYeap"},"content":"    public void isUnsignedInteger() {","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"BryannYeap"},"content":"        // EP: empty strings","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"  \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"BryannYeap"},"content":"        // EP: not a number","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"a\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"aaa\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"BryannYeap"},"content":"        // EP: zero as prefix","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"01\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"BryannYeap"},"content":"        // EP: signed numbers","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"-1\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"+1\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"BryannYeap"},"content":"        // EP: numbers with white space","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"BryannYeap"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.isUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"BryannYeap"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(StringUtil.isUnsignedInteger(\"10\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"BryannYeap"},"content":"    //---------------- Tests for areUnsignedIntegersWithinRange ---------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":202,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"BryannYeap"},"content":"    public void areUnsignedIntegersWithinRange() {","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"BryannYeap"},"content":"        int range \u003d 50;","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"BryannYeap"},"content":"        // EP: empty strings","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"\", \"\", range)); // Boundary value","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"  \", \"   \", range));","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"BryannYeap"},"content":"        // EP: not a number","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"a\", \"b\", range));","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"aaa\", \"bbb\", range));","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"BryannYeap"},"content":"        // EP: zero as prefix","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(StringUtil.areUnsignedIntegersWithinRange(\"01\", \"02\", range));","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":219,"author":{"gitId":"BryannYeap"},"content":"        // EP: signed numbers","lastModifiedDate":"2021-10-02"},{"lineNumber":220,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"-1\", \"-2\", range));","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"+1\", \"+2\", range));","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"BryannYeap"},"content":"        // EP: numbers with white space","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\" 10 \", \"    20    \", range)); // Leading/trailing spaces","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(\"1 0\", \"2 0\", range)); // Spaces in the middle","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"BryannYeap"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2021-10-02"},{"lineNumber":228,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(Long.toString(Integer.MAX_VALUE + 1),","lastModifiedDate":"2021-10-02"},{"lineNumber":229,"author":{"gitId":"BryannYeap"},"content":"                Long.toString(Integer.MAX_VALUE + 2), range));","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"BryannYeap"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"BryannYeap"},"content":"        int i \u003d 5;","lastModifiedDate":"2021-10-02"},{"lineNumber":233,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(StringUtil.areUnsignedIntegersWithinRange(Integer.toString(i),","lastModifiedDate":"2021-10-02"},{"lineNumber":234,"author":{"gitId":"BryannYeap"},"content":"                Integer.toString(i + range), range)); // Boundary value","lastModifiedDate":"2021-10-02"},{"lineNumber":235,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(StringUtil.areUnsignedIntegersWithinRange(Integer.toString(i), Integer.toString(i), range));","lastModifiedDate":"2021-10-02"},{"lineNumber":236,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":237,"author":{"gitId":"BryannYeap"},"content":"        // EP: out of range, should return false","lastModifiedDate":"2021-10-02"},{"lineNumber":238,"author":{"gitId":"BryannYeap"},"content":"        int j \u003d 5;","lastModifiedDate":"2021-10-02"},{"lineNumber":239,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(Integer.toString(i),","lastModifiedDate":"2021-10-02"},{"lineNumber":240,"author":{"gitId":"BryannYeap"},"content":"                Integer.toString(i + range + 1), range)); // Boundary value","lastModifiedDate":"2021-10-02"},{"lineNumber":241,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(StringUtil.areUnsignedIntegersWithinRange(Integer.toString(i),","lastModifiedDate":"2021-10-02"},{"lineNumber":242,"author":{"gitId":"BryannYeap"},"content":"                Integer.toString(i + range + 2), range));","lastModifiedDate":"2021-10-02"},{"lineNumber":243,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":245,"author":{"gitId":"Pulpy-y"},"content":"    //---------------- Tests for isIntegerLargerOrEqualToValue ---------------------------","lastModifiedDate":"2021-10-14"},{"lineNumber":246,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"Pulpy-y"},"content":"    public void isDoubleLargerOrEqualToValue() {","lastModifiedDate":"2021-11-03"},{"lineNumber":249,"author":{"gitId":"Pulpy-y"},"content":"        // EP: empty strings","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(\"\", \"\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"Pulpy-y"},"content":"        // EP: not a number","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(\"a\", \"b\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":254,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(\"aaa\", \"bbb\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"Pulpy-y"},"content":"        // EP: numbers with white space","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(\" 10 \", \"    20    \")); // Leading/trailing spaces","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(\"1 0\", \"2 0\")); // Spaces in the middle","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"Pulpy-y"},"content":"        // EP: s1 \u003e\u003d s2, should return true","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"Pulpy-y"},"content":"        double small \u003d 1;","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"Pulpy-y"},"content":"        double large \u003d 10;","lastModifiedDate":"2021-11-03"},{"lineNumber":263,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(StringUtil.isDoubleLargerOrEqualToValue(Double.toString(large),","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"Pulpy-y"},"content":"                Double.toString(small)));","lastModifiedDate":"2021-11-03"},{"lineNumber":265,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(StringUtil.isDoubleLargerOrEqualToValue(Double.toString(large + 5),","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"Pulpy-y"},"content":"                Double.toString(small + 5)));","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"Pulpy-y"},"content":"        // EP: s1 \u003c s2, should return false","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"Pulpy-y"},"content":"        double i \u003d 5;","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"Pulpy-y"},"content":"        double j \u003d 20;","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(Double.toString(i),","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"Pulpy-y"},"content":"                Double.toString(j))); // Boundary value","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(StringUtil.isDoubleLargerOrEqualToValue(Double.toString(i - 5),","lastModifiedDate":"2021-11-03"},{"lineNumber":274,"author":{"gitId":"Pulpy-y"},"content":"                Double.toString(j - 5)));","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":276,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Pulpy-y":32,"-":142,"BryannYeap":103}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENT_TYPE_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_SALARY_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPERIENCE_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_OF_EDUCATION_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_AMY + ROLE_DESC_AMY + EMPLOYMENT_TYPE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Pulpy-y"},"content":"                + EXPECTED_SALARY_DESC_AMY + LEVEL_OF_EDUCATION_DESC_AMY + EXPERIENCE_DESC_AMY + INTERVIEW_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withNotes(\"\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kaushikkrdy":1,"TohWeiJie01":4,"twothicc":1,"Pulpy-y":3,"-":158,"BryannYeap":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.generateDuplicateErrorMessage;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"                generateDuplicateErrorMessage(\"The applicant to be added \", personInList, personInList));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"twothicc":3,"-":42}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.generateDuplicateErrorMessage;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"                generateDuplicateErrorMessage(\"The applicant to be added \", validPerson, validPerson), () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"                        addCommand.execute(modelStub));","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"        public List\u003cPerson\u003e getDuplicate(Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"            ArrayList\u003cPerson\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"twothicc"},"content":"            result.add(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"            return result;","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"        public void markPerson(Person target) {","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"TohWeiJie01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"TohWeiJie01"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"TohWeiJie01"},"content":"        public boolean checkForMarkedPerson(Person target) {","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"        public boolean checkForUnmarkedPerson(Person target) {","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"        public void unmarkPerson(Person target) {","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"twothicc":12,"TohWeiJie01":20,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    public void isShowHelp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        // Cases where isShowHelp is true","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", true, true); // exit is true","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(commandResult.isShowHelp());","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", true, false); // exit is false","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(commandResult.isShowHelp());","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        // Cases where isShowHelp is false","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", false, true); // exit is true","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", false, false); // exit is false","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"    public void isExit() {","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"        CommandResult commandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        // Cases where isExit is true","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", true, true); // showHelp is true","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(commandResult.isExit());","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", false, true); // showHelp is false","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(commandResult.isExit());","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"        // Cases where isExit is false","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", true, false); // showHelp is true","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        commandResult \u003d new CommandResult(\"feedback\", false, false); // showHelp is false","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":54,"BryannYeap":38}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String VALID_DONE_AMY \u003d Done.STATUS_UNDONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String VALID_DONE_BOB \u003d Done.STATUS_UNDONE;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String VALID_NOTES_AMY \u003d \"She is a very good candidate for this job!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String VALID_NOTES_BOB \u003d \"He is not a suitable candidate for this job based off his resume.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"    public static final String VALID_ROLE_AMY \u003d \"Software Engineer\";","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"    public static final String VALID_ROLE_BOB \u003d \"Software Tester\";","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String VALID_EMPLOYMENT_TYPE_AMY \u003d \"Full time\";","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String VALID_EMPLOYMENT_TYPE_BOB \u003d \"Part time\";","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"    public static final String VALID_EXPECTED_SALARY_AMY \u003d \"3750\";","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    public static final String VALID_EXPECTED_SALARY_BOB \u003d \"2600\";","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String VALID_LEVEL_OF_EDUCATION_AMY \u003d \"PhD\";","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String VALID_LEVEL_OF_EDUCATION_BOB \u003d \"Masters\";","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"    public static final String VALID_EXPERIENCE_AMY \u003d \"1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"    public static final String VALID_EXPERIENCE_BOB \u003d \"2\";","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"    public static final String VALID_INTERVIEW_AMY \u003d \"2021-10-29, 10:30\";","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"    public static final String VALID_INTERVIEW_BOB \u003d \"2021-11-01, 10:30\";","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String NOTES_DESC_AMY \u003d \" \" + PREFIX_NOTES + VALID_NOTES_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String NOTES_DESC_BOB \u003d \" \" + PREFIX_NOTES + VALID_NOTES_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + VALID_ROLE_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + VALID_ROLE_BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String EMPLOYMENT_TYPE_DESC_AMY \u003d \" \" + PREFIX_EMPLOYMENT_TYPE + VALID_EMPLOYMENT_TYPE_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String EMPLOYMENT_TYPE_DESC_BOB \u003d \" \" + PREFIX_EMPLOYMENT_TYPE + VALID_EMPLOYMENT_TYPE_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"    public static final String EXPECTED_SALARY_DESC_AMY \u003d \" \" + PREFIX_EXPECTED_SALARY + VALID_EXPECTED_SALARY_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"    public static final String EXPECTED_SALARY_DESC_BOB \u003d \" \" + PREFIX_EXPECTED_SALARY + VALID_EXPECTED_SALARY_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String LEVEL_OF_EDUCATION_DESC_AMY \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"            \" \" + PREFIX_LEVEL_OF_EDUCATION + VALID_LEVEL_OF_EDUCATION_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String LEVEL_OF_EDUCATION_DESC_BOB \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"            \" \" + PREFIX_LEVEL_OF_EDUCATION + VALID_LEVEL_OF_EDUCATION_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String EXPERIENCE_DESC_AMY \u003d \" \" + PREFIX_EXPERIENCE + VALID_EXPERIENCE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String EXPERIENCE_DESC_BOB \u003d \" \" + PREFIX_EXPERIENCE + VALID_EXPERIENCE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Pulpy-y"},"content":"    public static final String INTERVIEW_DESC_AMY \u003d \" \" + PREFIX_INTERVIEW + VALID_INTERVIEW_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Pulpy-y"},"content":"    public static final String INTERVIEW_DESC_BOB \u003d \" \" + PREFIX_INTERVIEW + VALID_INTERVIEW_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \"Softw@re Eng1n33r\"; // \u0027@\u0027 not allowed in roles","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String INVALID_EMPLOYMENT_TYPE_DESC \u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"kaushikkrdy"},"content":"            \" \" + PREFIX_EMPLOYMENT_TYPE + \"intern\"; // \"intern\" not allowed as employment type","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String INVALID_EXPECTED_SALARY_DESC \u003d \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"            + PREFIX_EXPECTED_SALARY + \"-120\"; // \u0027-\u0027 not allowed for expected salaries","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String INVALID_LEVEL_OF_EDUCATION_DESC \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"            \" \" + PREFIX_LEVEL_OF_EDUCATION + \"Kindergarten\"; // \"Kindergarten\" not allowed as level of education","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String INVALID_EXPERIENCE_DESC \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"            \" \" + PREFIX_EXPERIENCE + \"-1\"; // negative value not allowed for experience","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Pulpy-y"},"content":"    public static final String INVALID_INTERVIEW_DESC \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"Pulpy-y"},"content":"            \" \" + PREFIX_INTERVIEW + \"2021.01.01\"; // interview time not following the given format","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"kaushikkrdy"},"content":"                .withRole(VALID_ROLE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmploymentType(VALID_EMPLOYMENT_TYPE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"kaushikkrdy"},"content":"                .withExpectedSalary(VALID_EXPECTED_SALARY_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"                .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Pulpy-y"},"content":"                .withExperience(VALID_EXPERIENCE_AMY)","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Pulpy-y"},"content":"                .withInterview(VALID_INTERVIEW_AMY)","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"                .withNotes(VALID_NOTES_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"                .withDone(VALID_DONE_AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"kaushikkrdy"},"content":"                .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmploymentType(VALID_EMPLOYMENT_TYPE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"kaushikkrdy"},"content":"                .withExpectedSalary(VALID_EXPECTED_SALARY_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"                .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"kaushikkrdy"},"content":"                .withExperience(VALID_EXPERIENCE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Pulpy-y"},"content":"                .withInterview(VALID_INTERVIEW_BOB)","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"                .withNotes(VALID_NOTES_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"                .withDone(VALID_DONE_BOB).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"twothicc"},"content":"     * Generates a duplicate applicant error message using {@code duplicates} as existing duplicate applicants","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"twothicc"},"content":"     * and {@code toCheck} as the applicant to be checked for duplicates.","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"twothicc"},"content":"    public static String generateDuplicateErrorMessage(String message, Person toCheck, Person ... duplicates) {","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"twothicc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"twothicc"},"content":"        for (Person duplicate : duplicates) {","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"twothicc"},"content":"            stringBuilder.append(duplicate);","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"twothicc"},"content":"        return message + toCheck","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"twothicc"},"content":"                + \" shares either the same phone number or email as the following applicant(s):\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"twothicc"},"content":"                + stringBuilder;","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kaushikkrdy":18,"TohWeiJie01":29,"twothicc":20,"Pulpy-y":13,"-":118,"BryannYeap":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new Index[]{INDEX_SECOND_PERSON});","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":102,"BryannYeap":7}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMarkedCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"public class DeleteMarkedCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    public void execute_listIsNotFilteredAndNoDone_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"        DeleteMarkedCommand deleteMarkedCommand \u003d new DeleteMarkedCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(DeleteMarkedCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"                DeleteMarkedCommand.MESSAGE_NONE_DELETED);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(deleteMarkedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    public void execute_listIsFilteredAndNoDone_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        DeleteMarkedCommand deleteMarkedCommand \u003d new DeleteMarkedCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(DeleteMarkedCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"                DeleteMarkedCommand.MESSAGE_NONE_DELETED);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(deleteMarkedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    public void execute_listIsNotFilteredAndHasDone_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"        Person personToDone \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"        model.markPerson(personToDone);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        DeleteMarkedCommand deleteMarkedCommand \u003d new DeleteMarkedCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(DeleteMarkedCommand.MESSAGE_SUCCESS, personToDone);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.deletePerson(expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(deleteMarkedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"        personToDone.getDone().setAsUndone();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"    public void execute_listIsFilteredAndHasDone_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        Person personToDone \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        model.markPerson(personToDone);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        DeleteMarkedCommand deleteMarkedCommand \u003d new DeleteMarkedCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(DeleteMarkedCommand.MESSAGE_SUCCESS, personToDone);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.deletePerson(expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(deleteMarkedCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"        personToDone.getDone().setAsUndone();","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"BryannYeap":68}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.generateDuplicateErrorMessage;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"                generateDuplicateErrorMessage(\"Your edited applicant \", firstPerson, firstPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"                generateDuplicateErrorMessage(\"Your edited applicant \", personInList, personInList));","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"twothicc":5,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/FilterInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewCommand firstFilterPastInterviewCommand \u003d new FilterInterviewPastCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewCommand secondFilterPastInterviewCommand \u003d new FilterInterviewPastCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewCommand filterInterviewFutureCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(firstFilterPastInterviewCommand, firstFilterPastInterviewCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(firstFilterPastInterviewCommand, secondFilterPastInterviewCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterPastInterviewCommand, filterInterviewFutureCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterPastInterviewCommand, 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterPastInterviewCommand, null);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"BryannYeap":33}},{"path":"src/test/java/seedu/address/logic/commands/FilterInterviewFutureCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewFutureCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewFutureCommand firstFilterFutureInterviewCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewFutureCommand secondFilterFutureInterviewCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(firstFilterFutureInterviewCommand, firstFilterFutureInterviewCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(firstFilterFutureInterviewCommand, secondFilterFutureInterviewCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterFutureInterviewCommand, 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterFutureInterviewCommand, null);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    public void execute_modelUnfilteredList_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewFutureCommand filterInterviewFutureCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(FilterInterviewFutureCommand.MESSAGE_SUCCESS, 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        // First person is the only applicant with passed interview in Typical Persons","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(filterInterviewFutureCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    public void execute_modelFilteredList_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON); // Third person has empty interview","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewFutureCommand filterInterviewFutureCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(FilterInterviewFutureCommand.MESSAGE_SUCCESS, 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        // First person is the only applicant with passed interview in Typical Persons","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(filterInterviewFutureCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":2,"BryannYeap":66}},{"path":"src/test/java/seedu/address/logic/commands/FilterInterviewPastCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewPastCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewFutureCommand firstFilterPastInterviewCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewFutureCommand secondFilterPastInterviewCommand \u003d new FilterInterviewFutureCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(firstFilterPastInterviewCommand, firstFilterPastInterviewCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(firstFilterPastInterviewCommand, secondFilterPastInterviewCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterPastInterviewCommand, 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(firstFilterPastInterviewCommand, null);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    public void execute_modelUnfilteredList_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewPastCommand filterInterviewPastCommand \u003d new FilterInterviewPastCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(FilterInterviewPastCommand.MESSAGE_SUCCESS, 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        // Second person is the only applicant with passed interview in Typical Persons","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(expectedModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(filterInterviewPastCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    public void execute_modelFilteredList_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(model, INDEX_THIRD_PERSON); // Third person has empty interview","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewPastCommand filterInterviewPastCommand \u003d new FilterInterviewPastCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(FilterInterviewPastCommand.MESSAGE_SUCCESS, 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        // Second person is the only applicant with passed interview in Typical Persons","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        showPersonAtIndex(expectedModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(filterInterviewPastCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaushikkrdy":2,"BryannYeap":66}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.DoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.notes.NotesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentTypeContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalaryWithinRangePredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.ExperienceContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducationContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.RoleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e firstPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"        firstPredicateList.add(firstPredicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e secondPredicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"        secondPredicateList.add(secondPredicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicateList);","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicateList);","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicateList);","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(findFirstCommandCopy, findFirstCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(findFirstCommand, 1);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(findFirstCommand, null);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(findSecondCommand, findFirstCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"    public void execute_zeroNameKeywords_noPersonFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"kaushikkrdy"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"kaushikkrdy"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"    public void execute_zeroEmailKeywords_noPersonFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"        EmailContainsKeywordsPredicate predicate \u003d prepareEmailPredicate(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"    public void execute_multipleEmailKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"        EmailContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"                prepareEmailPredicate(\"heinz@example.com alice@example.com cornelia@example.com\");","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"    public void execute_zeroPhoneKeywords_noPersonFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d preparePhonePredicate(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"twothicc"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"    public void execute_multiplePhoneKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"                preparePhonePredicate(\"98765432 9482427 9482442\");","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"twothicc"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"twothicc"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"        assertEquals(Arrays.asList(BENSON, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"    public void execute_oneRoleKeyword_onePersonFound() {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"                prepareRolePredicate(\"Cashier\");","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"twothicc"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"twothicc"},"content":"        assertEquals(Collections.singletonList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"    public void execute_oneRoleKeyword_multiplePersonFound() {","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"        // Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"twothicc"},"content":"        Model modelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"twothicc"},"content":"        modelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"twothicc"},"content":"        modelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"twothicc"},"content":"        // Expected Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"twothicc"},"content":"        Model expectedModelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"        expectedModelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"twothicc"},"content":"        expectedModelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate predicate \u003d prepareRolePredicate(\"Software\");","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"twothicc"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"        expectedModelWithHoonIda.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"twothicc"},"content":"        assertCommandSuccess(command, modelWithHoonIda, expectedMessage, expectedModelWithHoonIda);","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"twothicc"},"content":"        assertEquals(Arrays.asList(HOON, IDA), modelWithHoonIda.getFilteredPersonList());","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_zeroEmploymentTypeKeywords_noPersonFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate predicate \u003d prepareEmploymentTypePredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"kaushikkrdy"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"kaushikkrdy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_oneEmploymentTypeKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"kaushikkrdy"},"content":"        // Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"kaushikkrdy"},"content":"        Model modelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"kaushikkrdy"},"content":"        modelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"kaushikkrdy"},"content":"        modelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"kaushikkrdy"},"content":"        // Expected Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"kaushikkrdy"},"content":"        Model expectedModelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"kaushikkrdy"},"content":"        expectedModelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"kaushikkrdy"},"content":"        expectedModelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"kaushikkrdy"},"content":"                prepareEmploymentTypePredicate(\"Full time\");","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"kaushikkrdy"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"kaushikkrdy"},"content":"        expectedModelWithHoonIda.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, modelWithHoonIda, expectedMessage, expectedModelWithHoonIda);","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, IDA), modelWithHoonIda.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_multipleEmploymentTypeKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"kaushikkrdy"},"content":"                prepareEmploymentTypePredicate(\"Temporary internship\");","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"kaushikkrdy"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"kaushikkrdy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"BryannYeap"},"content":"    public void execute_zeroExpectedSalaryKeywords_noPersonFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"kaushikkrdy"},"content":"        ExpectedSalaryWithinRangePredicate predicate \u003d prepareExpectedSalaryPredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"BryannYeap"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"BryannYeap"},"content":"    public void execute_oneExpectedSalaryKeywords_multiplePersonDifferentSalariesFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"BryannYeap"},"content":"                prepareExpectedSalaryPredicate(\"2500\");","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"BryannYeap"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"BryannYeap"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"BryannYeap"},"content":"    public void execute_multipleExpectedSalaryKeyword_multiplePersonFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"BryannYeap"},"content":"                prepareExpectedSalaryPredicate(\"5000 3500 500\");","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"BryannYeap"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"BryannYeap"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":273,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":274,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":275,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":276,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":277,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_zeroLevelOfEducationKeywords_noPersonFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":278,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":279,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":280,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate predicate \u003d prepareLevelOfEducationPredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":281,"author":{"gitId":"TohWeiJie01"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":282,"author":{"gitId":"TohWeiJie01"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":283,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":284,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":285,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":286,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":287,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":288,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":289,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_oneLevelOfEducationKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":290,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"TohWeiJie01"},"content":"        // Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"TohWeiJie01"},"content":"        Model modelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"TohWeiJie01"},"content":"        modelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"TohWeiJie01"},"content":"        modelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"TohWeiJie01"},"content":"        // Expected Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"TohWeiJie01"},"content":"        Model expectedModelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":298,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":300,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":302,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":303,"author":{"gitId":"TohWeiJie01"},"content":"                prepareLevelOfEducationPredicate(\"Masters\");","lastModifiedDate":"2021-10-13"},{"lineNumber":304,"author":{"gitId":"TohWeiJie01"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"TohWeiJie01"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModelWithHoonIda.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":307,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandSuccess(command, modelWithHoonIda, expectedMessage, expectedModelWithHoonIda);","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(Arrays.asList(BENSON, IDA), modelWithHoonIda.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_multipleLevelOfEducationKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"TohWeiJie01"},"content":"                prepareLevelOfEducationPredicate(\"Masters University\");","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"TohWeiJie01"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":318,"author":{"gitId":"TohWeiJie01"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":319,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":320,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(Arrays.asList(BENSON, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":322,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":323,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":324,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":325,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":326,"author":{"gitId":"Pulpy-y"},"content":"    public void execute_zeroExperience_noPersonFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":327,"author":{"gitId":"Pulpy-y"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":328,"author":{"gitId":"Pulpy-y"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":329,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate predicate \u003d prepareExperiencePredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":330,"author":{"gitId":"Pulpy-y"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":331,"author":{"gitId":"Pulpy-y"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":332,"author":{"gitId":"Pulpy-y"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":333,"author":{"gitId":"Pulpy-y"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":334,"author":{"gitId":"Pulpy-y"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":335,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":336,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":337,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"Pulpy-y"},"content":"    public void execute_oneExperience_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":339,"author":{"gitId":"Pulpy-y"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"Pulpy-y"},"content":"        // Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":341,"author":{"gitId":"Pulpy-y"},"content":"        Model modelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"Pulpy-y"},"content":"        modelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":343,"author":{"gitId":"Pulpy-y"},"content":"        modelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":344,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":345,"author":{"gitId":"Pulpy-y"},"content":"        // Expected Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":346,"author":{"gitId":"Pulpy-y"},"content":"        Model expectedModelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":347,"author":{"gitId":"Pulpy-y"},"content":"        expectedModelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":348,"author":{"gitId":"Pulpy-y"},"content":"        expectedModelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":349,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":350,"author":{"gitId":"Pulpy-y"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":351,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":352,"author":{"gitId":"Pulpy-y"},"content":"                prepareExperiencePredicate(\"7\");","lastModifiedDate":"2021-10-13"},{"lineNumber":353,"author":{"gitId":"Pulpy-y"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":354,"author":{"gitId":"Pulpy-y"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":355,"author":{"gitId":"Pulpy-y"},"content":"        expectedModelWithHoonIda.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":356,"author":{"gitId":"Pulpy-y"},"content":"        assertCommandSuccess(command, modelWithHoonIda, expectedMessage, expectedModelWithHoonIda);","lastModifiedDate":"2021-10-13"},{"lineNumber":357,"author":{"gitId":"Pulpy-y"},"content":"        assertEquals(Arrays.asList(HOON, IDA), modelWithHoonIda.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":358,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":359,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":360,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":361,"author":{"gitId":"Pulpy-y"},"content":"    public void execute_multipleExperience_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":362,"author":{"gitId":"Pulpy-y"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-13"},{"lineNumber":363,"author":{"gitId":"Pulpy-y"},"content":"        // Model with Hoon and Ida","lastModifiedDate":"2021-10-13"},{"lineNumber":364,"author":{"gitId":"Pulpy-y"},"content":"        Model modelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":365,"author":{"gitId":"Pulpy-y"},"content":"        modelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":366,"author":{"gitId":"Pulpy-y"},"content":"        modelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":367,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":368,"author":{"gitId":"Pulpy-y"},"content":"        // Expected Model with Hoon and Ida manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":369,"author":{"gitId":"Pulpy-y"},"content":"        Model expectedModelWithHoonIda \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":370,"author":{"gitId":"Pulpy-y"},"content":"        expectedModelWithHoonIda.addPerson(HOON);","lastModifiedDate":"2021-10-13"},{"lineNumber":371,"author":{"gitId":"Pulpy-y"},"content":"        expectedModelWithHoonIda.addPerson(IDA);","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"Pulpy-y"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"Pulpy-y"},"content":"                prepareExperiencePredicate(\"7 6\");","lastModifiedDate":"2021-10-13"},{"lineNumber":376,"author":{"gitId":"Pulpy-y"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"Pulpy-y"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":378,"author":{"gitId":"Pulpy-y"},"content":"        expectedModelWithHoonIda.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":379,"author":{"gitId":"Pulpy-y"},"content":"        assertCommandSuccess(command, modelWithHoonIda, expectedMessage, expectedModelWithHoonIda);","lastModifiedDate":"2021-10-13"},{"lineNumber":380,"author":{"gitId":"Pulpy-y"},"content":"        assertEquals(Arrays.asList(GEORGE, HOON, IDA), modelWithHoonIda.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":381,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":382,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":383,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":384,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":385,"author":{"gitId":"BryannYeap"},"content":"    public void execute_zeroTagKeywords_noPersonFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":386,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":387,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":388,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate predicate \u003d prepareTagPredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":389,"author":{"gitId":"BryannYeap"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":390,"author":{"gitId":"BryannYeap"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":391,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":392,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":393,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":394,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":395,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":396,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":397,"author":{"gitId":"BryannYeap"},"content":"    public void execute_multipleTagKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-13"},{"lineNumber":398,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-10-13"},{"lineNumber":399,"author":{"gitId":"BryannYeap"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":400,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate predicate \u003d prepareTagPredicate(\"friends old\");","lastModifiedDate":"2021-10-13"},{"lineNumber":401,"author":{"gitId":"BryannYeap"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":402,"author":{"gitId":"BryannYeap"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-13"},{"lineNumber":403,"author":{"gitId":"BryannYeap"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":404,"author":{"gitId":"BryannYeap"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":405,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-13"},{"lineNumber":406,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":407,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":408,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":409,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_notesKeyword_onePersonFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":410,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":412,"author":{"gitId":"kaushikkrdy"},"content":"        NotesContainsKeywordsPredicate predicate \u003d prepareNotesPredicate(\"She has prior experience\");","lastModifiedDate":"2021-10-26"},{"lineNumber":413,"author":{"gitId":"TohWeiJie01"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":414,"author":{"gitId":"TohWeiJie01"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":418,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":419,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":420,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":421,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_notesKeyword_multiplePersonsFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":422,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-26"},{"lineNumber":423,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":424,"author":{"gitId":"kaushikkrdy"},"content":"        NotesContainsKeywordsPredicate predicate \u003d prepareNotesPredicate(\"this field\");","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"TohWeiJie01"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":426,"author":{"gitId":"TohWeiJie01"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-26"},{"lineNumber":427,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":428,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":429,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(Arrays.asList(ALICE, CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":430,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":431,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_zeroDoneKeywords_noPersonFound() {","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate predicate \u003d prepareDonePredicate(\" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"TohWeiJie01"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"TohWeiJie01"},"content":"        FindCommand command \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"TohWeiJie01"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":443,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":446,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":447,"author":{"gitId":"twothicc"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":450,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":451,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":452,"author":{"gitId":"twothicc"},"content":"     * Parses {@code userInput} into a {@code EmailContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":453,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":454,"author":{"gitId":"twothicc"},"content":"    private EmailContainsKeywordsPredicate prepareEmailPredicate(String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":455,"author":{"gitId":"twothicc"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":456,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":457,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":458,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":459,"author":{"gitId":"twothicc"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":460,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":461,"author":{"gitId":"twothicc"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":462,"author":{"gitId":"twothicc"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":463,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":464,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":465,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":466,"author":{"gitId":"twothicc"},"content":"     * Parses {@code userInput} into a {@code RoleContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":467,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":468,"author":{"gitId":"twothicc"},"content":"    private RoleContainsKeywordsPredicate prepareRolePredicate(String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":469,"author":{"gitId":"twothicc"},"content":"        return new RoleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":470,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":471,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":472,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":473,"author":{"gitId":"kaushikkrdy"},"content":"     * Parses {@code userInput} into a {@code EmploymentTypeContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":474,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":475,"author":{"gitId":"kaushikkrdy"},"content":"    private EmploymentTypeContainsKeywordsPredicate prepareEmploymentTypePredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":476,"author":{"gitId":"kaushikkrdy"},"content":"        return new EmploymentTypeContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":477,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":478,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":479,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":480,"author":{"gitId":"BryannYeap"},"content":"     * Parses {@code userInput} into a {@code ExpectedSalaryWithinRangePredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":481,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":482,"author":{"gitId":"BryannYeap"},"content":"    private ExpectedSalaryWithinRangePredicate prepareExpectedSalaryPredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":483,"author":{"gitId":"BryannYeap"},"content":"        return new ExpectedSalaryWithinRangePredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":484,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":485,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":486,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":487,"author":{"gitId":"TohWeiJie01"},"content":"     * Parses {@code userInput} into a {@code LevelOfEducationContainsKeywordPredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":488,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":489,"author":{"gitId":"TohWeiJie01"},"content":"    private LevelOfEducationContainsKeywordsPredicate prepareLevelOfEducationPredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":490,"author":{"gitId":"TohWeiJie01"},"content":"        return new LevelOfEducationContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":491,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":492,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":493,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":494,"author":{"gitId":"Pulpy-y"},"content":"     * Parses {@code userInput} into a {@code ExperienceContainsKeywordPredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":495,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":496,"author":{"gitId":"Pulpy-y"},"content":"    private ExperienceContainsKeywordsPredicate prepareExperiencePredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":497,"author":{"gitId":"Pulpy-y"},"content":"        return new ExperienceContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":498,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":499,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":500,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":501,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":502,"author":{"gitId":"BryannYeap"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordPredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":503,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":504,"author":{"gitId":"BryannYeap"},"content":"    private TagContainsKeywordsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":505,"author":{"gitId":"BryannYeap"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":506,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":507,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":508,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":509,"author":{"gitId":"kaushikkrdy"},"content":"     * Parses {@code userInput} into a {@code NotesContainsKeywordPredicate}.","lastModifiedDate":"2021-10-26"},{"lineNumber":510,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":511,"author":{"gitId":"kaushikkrdy"},"content":"    private NotesContainsKeywordsPredicate prepareNotesPredicate(String userInput) {","lastModifiedDate":"2021-10-26"},{"lineNumber":512,"author":{"gitId":"kaushikkrdy"},"content":"        return new NotesContainsKeywordsPredicate(userInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":513,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":514,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":515,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":516,"author":{"gitId":"TohWeiJie01"},"content":"     * Parses {@code userInput} into a {@code DoneContainsKeywordPredicate}.","lastModifiedDate":"2021-10-26"},{"lineNumber":517,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":518,"author":{"gitId":"TohWeiJie01"},"content":"    private DoneContainsKeywordsPredicate prepareDonePredicate(String userInput) {","lastModifiedDate":"2021-10-26"},{"lineNumber":519,"author":{"gitId":"TohWeiJie01"},"content":"        return new DoneContainsKeywordsPredicate(Arrays.asList(userInput));","lastModifiedDate":"2021-10-26"},{"lineNumber":520,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":521,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":522,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kaushikkrdy":88,"twothicc":122,"TohWeiJie01":95,"Pulpy-y":68,"-":66,"BryannYeap":83}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"public class MarkCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(new Index[]{INDEX_SECOND_PERSON});","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"TohWeiJie01":70}},{"path":"src/test/java/seedu/address/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"public class ShowCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"    public void execute_nullPrefix_nullPointerExceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ShowCommand(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_namePrefix_namesListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the names present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e names \u003d getTypicalPersons().stream().map(x -\u003e x.getName().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"        for (String name: names) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_phonePrefix_phonesListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the contact numbers present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e phones \u003d getTypicalPersons().stream().map(x -\u003e x.getPhone().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"        for (String name: phones) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_PHONE);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_emailPrefix_emailsListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the emails present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e emails \u003d getTypicalPersons().stream().map(x -\u003e x.getEmail().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"        for (String email: emails) {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(email);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_EMAIL);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_rolePrefix_rolesListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the roles present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e roles \u003d getTypicalPersons().stream().map(x -\u003e x.getRole().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kaushikkrdy"},"content":"        for (String role: roles) {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(role);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_ROLE);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_employmentTypePrefix_employmentTypesListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the employment types present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e employmentTypes \u003d getTypicalPersons().stream().map(x -\u003e x.getEmploymentType().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"kaushikkrdy"},"content":"        for (String employmentType: employmentTypes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(employmentType);","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_expectedSalaryPrefix_expectedSalariesListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the expected salaries present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e expectedSalaries \u003d getTypicalPersons().stream().map(x -\u003e x.getExpectedSalary().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted(Comparator.comparing(String::length).thenComparing(String::compareTo))","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"kaushikkrdy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"kaushikkrdy"},"content":"        for (String expectedSalary: expectedSalaries) {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(expectedSalary);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_EXPECTED_SALARY);","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_levelOfEducationPrefix_levelsOfEducationListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the levels of education present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e levelsOfEducation \u003d getTypicalPersons().stream().map(x -\u003e x.getLevelOfEducation().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"kaushikkrdy"},"content":"        for (String levelOfEducation: levelsOfEducation) {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(levelOfEducation);","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_experiencePrefix_experiencesListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the years of experience present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e experiences \u003d getTypicalPersons().stream().map(x -\u003e x.getExperience().toString())","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted(Comparator.comparing(String::length).thenComparing(String::compareTo))","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"kaushikkrdy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"kaushikkrdy"},"content":"        for (String experience: experiences) {","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(experience);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_EXPERIENCE);","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"kaushikkrdy"},"content":"    public void execute_tagPrefix_tagsListed() {","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"kaushikkrdy"},"content":"        StringBuilder expectedMessageSB \u003d new StringBuilder(\"Here are all the tags present:\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e tags \u003d getTypicalPersons().stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"kaushikkrdy"},"content":"                .flatMap(person -\u003e person.getTags().stream().map(Tag::toString))","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"kaushikkrdy"},"content":"                .distinct().sorted().collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"kaushikkrdy"},"content":"        for (String tag: tags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(tag);","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"kaushikkrdy"},"content":"            expectedMessageSB.append(\"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"kaushikkrdy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d expectedMessageSB.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"kaushikkrdy"},"content":"        ShowCommand command \u003d new ShowCommand(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"kaushikkrdy"},"content":"        assertCommandSuccess(command, model, expectedMessage, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kaushikkrdy":182,"twothicc":7}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandFailure(unmarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        assertCommandFailure(unmarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        UnmarkCommand unmarkFirstCommand \u003d new UnmarkCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        UnmarkCommand unmarkSecondCommand \u003d new UnmarkCommand(new Index[]{INDEX_SECOND_PERSON});","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        UnmarkCommand unmarkFirstCommandCopy \u003d new UnmarkCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"TohWeiJie01":66}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENT_TYPE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENT_TYPE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_SALARY_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_SALARY_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPERIENCE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPERIENCE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMPLOYMENT_TYPE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPECTED_SALARY_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPERIENCE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INTERVIEW_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LEVEL_OF_EDUCATION_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_OF_EDUCATION_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_OF_EDUCATION_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTES_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTES_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENT_TYPE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_SALARY_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LEVEL_OF_EDUCATION_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTES_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"                .withNotes(VALID_NOTES_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"                + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"kaushikkrdy"},"content":"                + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"                + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"                + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"        // multiple roles - last role accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_AMY + ROLE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"kaushikkrdy"},"content":"                + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"kaushikkrdy"},"content":"        // multiple employment types - last employment type accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"kaushikkrdy"},"content":"                + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"kaushikkrdy"},"content":"        // multiple expected salaries - last expected salary accepted","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"kaushikkrdy"},"content":"                + EXPECTED_SALARY_DESC_AMY + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"        // multiple levels of education - last level of education accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPECTED_SALARY_DESC_BOB + LEVEL_OF_EDUCATION_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"Pulpy-y"},"content":"        // multiple experiences - last experience accepted","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPECTED_SALARY_DESC_BOB + LEVEL_OF_EDUCATION_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPERIENCE_DESC_AMY + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPECTED_SALARY_DESC_BOB + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_BOB,","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"Pulpy-y"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"Pulpy-y"},"content":"        // multiple interviews - last interview accepted","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"Pulpy-y"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"Pulpy-y"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"Pulpy-y"},"content":"                + EXPECTED_SALARY_DESC_BOB + LEVEL_OF_EDUCATION_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"Pulpy-y"},"content":"                + EXPERIENCE_DESC_BOB + TAG_DESC_FRIEND + INTERVIEW_DESC_AMY + INTERVIEW_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"Pulpy-y"},"content":"                + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"TohWeiJie01"},"content":"        // multiple notes - last notes accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPECTED_SALARY_DESC_BOB + LEVEL_OF_EDUCATION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"Pulpy-y"},"content":"                + EXPERIENCE_DESC_BOB + TAG_DESC_FRIEND + INTERVIEW_DESC_BOB + NOTES_DESC_AMY","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"                + NOTES_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"Pulpy-y"},"content":"        Person expectedPersonNoTag \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_AMY + EMPLOYMENT_TYPE_DESC_AMY + EXPECTED_SALARY_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"Pulpy-y"},"content":"                + LEVEL_OF_EDUCATION_DESC_AMY + EXPERIENCE_DESC_AMY + INTERVIEW_DESC_AMY + NOTES_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"Pulpy-y"},"content":"                new AddCommand(expectedPersonNoTag));","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"Pulpy-y"},"content":"        // zero interview","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"Pulpy-y"},"content":"        Person expectedPersonNoInterview \u003d new PersonBuilder(AMY).withInterview(\"\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"Pulpy-y"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"Pulpy-y"},"content":"                        + ROLE_DESC_AMY + EMPLOYMENT_TYPE_DESC_AMY + EXPECTED_SALARY_DESC_AMY","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"Pulpy-y"},"content":"                        + LEVEL_OF_EDUCATION_DESC_AMY + EXPERIENCE_DESC_AMY + TAG_DESC_FRIEND + NOTES_DESC_AMY,","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"Pulpy-y"},"content":"                new AddCommand(expectedPersonNoInterview));","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"twothicc"},"content":"        // missing role prefix","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"kaushikkrdy"},"content":"                + VALID_ROLE_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"kaushikkrdy"},"content":"        // missing employmentType prefix","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_BOB + VALID_EMPLOYMENT_TYPE_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":209,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"BryannYeap"},"content":"        // missing expected salary prefix","lastModifiedDate":"2021-10-01"},{"lineNumber":212,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + VALID_EXPECTED_SALARY_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"TohWeiJie01"},"content":"        // missing level of education prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"TohWeiJie01"},"content":"                + VALID_LEVEL_OF_EDUCATION_BOB + EXPERIENCE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"Pulpy-y"},"content":"        // missing experience prefix","lastModifiedDate":"2021-10-01"},{"lineNumber":222,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + VALID_EXPERIENCE_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"kaushikkrdy"},"content":"                + VALID_ROLE_BOB + VALID_EMPLOYMENT_TYPE_BOB + VALID_EXPECTED_SALARY_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"TohWeiJie01"},"content":"                + VALID_LEVEL_OF_EDUCATION_BOB + VALID_EXPERIENCE_BOB, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":237,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":249,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":252,"author":{"gitId":"BryannYeap"},"content":"        // invalid role","lastModifiedDate":"2021-10-02"},{"lineNumber":253,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"TohWeiJie01"},"content":"                + INVALID_ROLE_DESC + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":258,"author":{"gitId":"kaushikkrdy"},"content":"        // invalid employment type","lastModifiedDate":"2021-10-02"},{"lineNumber":259,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + INVALID_EMPLOYMENT_TYPE_DESC + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, EmploymentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"BryannYeap"},"content":"        // invalid expected salary","lastModifiedDate":"2021-10-01"},{"lineNumber":265,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + INVALID_EXPECTED_SALARY_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"kaushikkrdy"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ExpectedSalary.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":269,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"TohWeiJie01"},"content":"        // invalid level of education","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"TohWeiJie01"},"content":"                + INVALID_LEVEL_OF_EDUCATION_DESC + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, LevelOfEducation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"Pulpy-y"},"content":"        // invalid experience","lastModifiedDate":"2021-10-01"},{"lineNumber":277,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":278,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + INVALID_EXPERIENCE_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Experience.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":283,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":284,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":285,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"Pulpy-y"},"content":"                + INVALID_TAG_DESC + TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"Pulpy-y"},"content":"        // invalid interview","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"Pulpy-y"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"Pulpy-y"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"Pulpy-y"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB + INVALID_INTERVIEW_DESC","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"Pulpy-y"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_FRIEND, Interview.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":295,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"TohWeiJie01"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + EXPERIENCE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":300,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":301,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_BOB + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + EXPECTED_SALARY_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":302,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kaushikkrdy":23,"TohWeiJie01":106,"twothicc":5,"Pulpy-y":71,"-":97,"BryannYeap":3}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.DeleteMarkedCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewFutureCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewPastCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(new DeleteCommand(new Index[]{INDEX_FIRST_PERSON}), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"    public void parseCommand_deleteMarked() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(parser.parseCommand(DeleteMarkedCommand.COMMAND_WORD) instanceof DeleteMarkedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(parser.parseCommand(DeleteMarkedCommand.COMMAND_WORD + \" 3\") instanceof DeleteMarkedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"    public void parseCommand_filterInterview() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewCommand filterInterviewPastCommand \u003d (FilterInterviewCommand) parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"                FilterInterviewCommand.COMMAND_WORD + \" past\");","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"        FilterInterviewCommand filterInterviewFutureCommand \u003d (FilterInterviewCommand) parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"                FilterInterviewCommand.COMMAND_WORD + \" future\");","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(filterInterviewPastCommand, new FilterInterviewPastCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(filterInterviewFutureCommand, new FilterInterviewFutureCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"                FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"                        + PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e expectedPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"        expectedPredicates.add(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"        assertEquals(new FindCommand(expectedPredicates), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"BryannYeap"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"BryannYeap"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"BryannYeap"},"content":"                MarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(new MarkCommand(new Index[]{INDEX_FIRST_PERSON}), command);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"BryannYeap"},"content":"    public void parseCommand_unmark() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"BryannYeap"},"content":"        UnmarkCommand command \u003d (UnmarkCommand) parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"BryannYeap"},"content":"                UnmarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(new UnmarkCommand(new Index[]{INDEX_FIRST_PERSON}), command);","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"BryannYeap"},"content":"    public void parseCommand_show() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"BryannYeap"},"content":"        ShowCommand command \u003d (ShowCommand) parser.parseCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"BryannYeap"},"content":"                ShowCommand.COMMAND_WORD + \" \" + PREFIX_NAME);","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(new ShowCommand(PREFIX_NAME), command);","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"twothicc":8,"-":100,"BryannYeap":44}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_emptyArgsString_noValues() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argumentMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argumentMultimap, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_noPrefixes_noValues() {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString);","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, dashT);","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_oneArgument() {","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"        // Preamble not present","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \" p/ Argument value \";","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"        // Preamble present","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_multipleArguments() {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"        // Only two arguments are present without preamble","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \" -t dashT-Value p/pSlash value\";","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"        // All three arguments are present without preamble","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \" ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"twothicc"},"content":"        // All three arguments are present with preamble","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"twothicc"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"twothicc"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"twothicc"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"twothicc"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \" \" + unknownPrefix + \"some value\";","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":208,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_multipleArgumentsWithRepeats() {","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"twothicc"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":229,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_multipleArgumentsJoined() {","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"twothicc"},"content":"    public void tokenizeWithoutPreamble_noPrecedingWhitespaceBeforePrefix() {","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \"p/ pSlash -t dashT^qhatQ\";","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"twothicc"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"twothicc"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT^qhatQ\");","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"twothicc"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"twothicc"},"content":"    public void findAllPrefixSorted_singlePrefix() {","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \" p/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"twothicc"},"content":"        List\u003cPrefix\u003e prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"twothicc"},"content":"        assertEquals(prefixList.get(0), pSlash);","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"twothicc"},"content":"        // prefix value given -\u003e prefix value ignored","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \" p/some random string\";","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"twothicc"},"content":"        prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"twothicc"},"content":"        assertEquals(prefixList.get(0), pSlash);","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"twothicc"},"content":"        // preamble given -\u003e preamble ignored","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \"some random string p/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"twothicc"},"content":"        prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"twothicc"},"content":"        assertEquals(prefixList.get(0), pSlash);","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"twothicc"},"content":"    public void findAllPrefixSorted_noPrecedingWhitespaceBeforePrefix() {","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \"p/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"twothicc"},"content":"        List\u003cPrefix\u003e prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"twothicc"},"content":"        assertTrue(prefixList.isEmpty());","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"twothicc"},"content":"    public void findAllPrefixSorted_multiplePrefixes_firstElementIsFirstPrefix() {","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"twothicc"},"content":"        String argsString \u003d \" -t ^Q p/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"twothicc"},"content":"        List\u003cPrefix\u003e prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"twothicc"},"content":"        assertEquals(prefixList.get(0), dashT);","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"twothicc"},"content":"        // No preceding whitespace -\u003e first prefix ignored","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \"-t ^Q p/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"twothicc"},"content":"        prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"twothicc"},"content":"        assertEquals(prefixList.get(0), hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"twothicc"},"content":"        // preamble and prefix input given -\u003e preamble and prefix input ignored","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"twothicc"},"content":"        argsString \u003d \"preamble -tsome random string ^Qsome random string p/some random string\";","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"twothicc"},"content":"        prefixList \u003d ArgumentTokenizer.findAllPrefixSorted(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"twothicc"},"content":"        assertEquals(prefixList.get(0), dashT);","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"twothicc":151,"-":150}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_DUPLICATE_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        // One index","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(new Index[]{INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        // Multiple index","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, \"1 2\", new DeleteCommand(new Index[]{INDEX_SECOND_PERSON, INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        // Multiple index with varying white space","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, \"3            1     2\",","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"                new DeleteCommand(new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"        String errorDueToInvalidIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"        String errorDueToDuplicateIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + MESSAGE_DUPLICATE_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        // Not a number","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"a\", String.format(errorDueToInvalidIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        // Zero index","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"0\", String.format(errorDueToInvalidIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"        // Negative index","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"-1\", String.format(errorDueToInvalidIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        // Multiple inputs, one invalid","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"0 1\", String.format(errorDueToInvalidIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        // Multiple inputs, all invalid","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"0 -1\", String.format(errorDueToInvalidIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        // 2 duplicate inputs","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"1 1\",","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"        // Many duplicates interspersed (Note that DeleteCommandParser does not detect out of range indexes)","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"70 2 3 2 2 1 70\",","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        // Duplicates as last few inputs","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"2 3 4 4 4\",","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":30,"BryannYeap":43}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENT_TYPE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPLOYMENT_TYPE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_SALARY_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPECTED_SALARY_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPERIENCE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXPERIENCE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMPLOYMENT_TYPE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPECTED_SALARY_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EXPERIENCE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INTERVIEW_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LEVEL_OF_EDUCATION_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_OF_EDUCATION_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LEVEL_OF_EDUCATION_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTES_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTES_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENT_TYPE_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENT_TYPE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_SALARY_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_SALARY_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LEVEL_OF_EDUCATION_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LEVEL_OF_EDUCATION_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTES_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTES_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"Pulpy-y"},"content":"        assertParseFailure(parser, \"1 x/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC, Role.MESSAGE_CONSTRAINTS); // invalid role","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMPLOYMENT_TYPE_DESC,","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"kaushikkrdy"},"content":"                EmploymentType.MESSAGE_CONSTRAINTS); // invalid employment type","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXPECTED_SALARY_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"                ExpectedSalary.MESSAGE_CONSTRAINTS); // invalid expected salary","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LEVEL_OF_EDUCATION_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"                LevelOfEducation.MESSAGE_CONSTRAINTS); // invalid level of education","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXPERIENCE_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"                Experience.MESSAGE_CONSTRAINTS); // invalid experience","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"Pulpy-y"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INTERVIEW_DESC, Interview.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"                + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"                + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"TohWeiJie01"},"content":"                + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"TohWeiJie01"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"                + TAG_DESC_HUSBAND + NAME_DESC_AMY + EMAIL_DESC_AMY + ROLE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"                + EMPLOYMENT_TYPE_DESC_AMY + EXPECTED_SALARY_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"TohWeiJie01"},"content":"                + LEVEL_OF_EDUCATION_DESC_AMY + EXPERIENCE_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"Pulpy-y"},"content":"                + INTERVIEW_DESC_AMY + NOTES_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"                .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"                .withEmail(VALID_EMAIL_AMY).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmploymentType(VALID_EMPLOYMENT_TYPE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"kaushikkrdy"},"content":"                .withExpectedSalary(VALID_EXPECTED_SALARY_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"                .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"Pulpy-y"},"content":"                .withExperience(VALID_EXPERIENCE_AMY)","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Pulpy-y"},"content":"                .withInterview(VALID_INTERVIEW_AMY)","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"TohWeiJie01"},"content":"                .withNotes(VALID_NOTES_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"TohWeiJie01"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"twothicc"},"content":"        // role","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"twothicc"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":216,"author":{"gitId":"twothicc"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRole(VALID_ROLE_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"twothicc"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"kaushikkrdy"},"content":"        // employment type","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"kaushikkrdy"},"content":"        userInput \u003d targetIndex.getOneBased() + EMPLOYMENT_TYPE_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"kaushikkrdy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmploymentType(VALID_EMPLOYMENT_TYPE_AMY).build();","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"kaushikkrdy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"BryannYeap"},"content":"        // expected salary","lastModifiedDate":"2021-10-01"},{"lineNumber":227,"author":{"gitId":"BryannYeap"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPECTED_SALARY_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"BryannYeap"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withExpectedSalary(VALID_EXPECTED_SALARY_AMY).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":229,"author":{"gitId":"BryannYeap"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-01"},{"lineNumber":230,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-01"},{"lineNumber":231,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":232,"author":{"gitId":"TohWeiJie01"},"content":"        // level of education","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"TohWeiJie01"},"content":"        userInput \u003d targetIndex.getOneBased() + LEVEL_OF_EDUCATION_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"TohWeiJie01"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":237,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"Pulpy-y"},"content":"        // experience","lastModifiedDate":"2021-10-01"},{"lineNumber":239,"author":{"gitId":"Pulpy-y"},"content":"        userInput \u003d targetIndex.getOneBased() + EXPERIENCE_DESC_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":240,"author":{"gitId":"Pulpy-y"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withExperience(VALID_EXPERIENCE_AMY).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":249,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"Pulpy-y"},"content":"        // interview","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"Pulpy-y"},"content":"        userInput \u003d targetIndex.getOneBased() + INTERVIEW_DESC_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"Pulpy-y"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withInterview(VALID_INTERVIEW_AMY).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"Pulpy-y"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"Pulpy-y"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"TohWeiJie01"},"content":"        // notes","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"TohWeiJie01"},"content":"        userInput \u003d targetIndex.getOneBased() + NOTES_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNotes(VALID_NOTES_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"TohWeiJie01"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":266,"author":{"gitId":"TohWeiJie01"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"TohWeiJie01"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":268,"author":{"gitId":"Pulpy-y"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + INTERVIEW_DESC_AMY","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"kaushikkrdy"},"content":"                + ROLE_DESC_AMY + EMPLOYMENT_TYPE_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":270,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPECTED_SALARY_DESC_AMY + LEVEL_OF_EDUCATION_DESC_AMY","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPERIENCE_DESC_AMY + NOTES_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"Pulpy-y"},"content":"                + ROLE_DESC_BOB + EMPLOYMENT_TYPE_DESC_BOB + INTERVIEW_DESC_BOB","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPECTED_SALARY_DESC_BOB + LEVEL_OF_EDUCATION_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"TohWeiJie01"},"content":"                + EXPERIENCE_DESC_BOB + TAG_DESC_HUSBAND + NOTES_DESC_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"TohWeiJie01"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":277,"author":{"gitId":"TohWeiJie01"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":278,"author":{"gitId":"kaushikkrdy"},"content":"                .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":279,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmploymentType(VALID_EMPLOYMENT_TYPE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"kaushikkrdy"},"content":"                .withExpectedSalary(VALID_EXPECTED_SALARY_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":281,"author":{"gitId":"TohWeiJie01"},"content":"                .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":282,"author":{"gitId":"Pulpy-y"},"content":"                .withExperience(VALID_EXPERIENCE_BOB)","lastModifiedDate":"2021-10-03"},{"lineNumber":283,"author":{"gitId":"twothicc"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-28"},{"lineNumber":284,"author":{"gitId":"Pulpy-y"},"content":"                .withInterview(VALID_INTERVIEW_BOB)","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"TohWeiJie01"},"content":"                .withNotes(VALID_NOTES_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":302,"author":{"gitId":"TohWeiJie01"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-09"},{"lineNumber":303,"author":{"gitId":"TohWeiJie01"},"content":"                + PHONE_DESC_BOB + ROLE_DESC_BOB + LEVEL_OF_EDUCATION_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":304,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":305,"author":{"gitId":"TohWeiJie01"},"content":"                .withEmail(VALID_EMAIL_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":306,"author":{"gitId":"TohWeiJie01"},"content":"                .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kaushikkrdy":17,"TohWeiJie01":52,"twothicc":9,"Pulpy-y":54,"-":183,"BryannYeap":6}},{"path":"src/test/java/seedu/address/logic/parser/FilterInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewFutureCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.logic.commands.FilterInterviewPastCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"public class FilterInterviewCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    private FilterInterviewCommandParser parser \u003d new FilterInterviewCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    private String argPast \u003d \"past\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    private String argFuture \u003d \"future\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        // blank input","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"      \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"                FilterInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        // empty input","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"                FilterInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        // Not \"past\" or \"future\"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"test\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                FilterInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"                FilterInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    public void parse_validArgs_returnsFilterInterviewCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, argPast, new FilterInterviewPastCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, argFuture, new FilterInterviewFutureCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        // leading and trailing whitespaces","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, \"  \" + argPast + \"   \", new FilterInterviewPastCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"        assertParseSuccess(parser, \"  \" + argFuture + \"   \", new FilterInterviewFutureCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"BryannYeap":46}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.FindCommandParser.FindDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"        predicates.add(namePredicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(predicates);","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseSuccess(parser, \"n/\\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        // blank inputs for prefixes","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cPredicate\u003cPerson\u003e\u003e emptyPredicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"        FindCommand emptyFindCommand \u003d new FindCommand(emptyPredicates);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"n/ y/\", emptyFindCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"    // Find Descriptor tests","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"    public void findDescriptor_validPrefixInput_addToPredicateList() throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        String validNamePrefixInput \u003d \" n/John Doe\";","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validNamePrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_NAME);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        FindDescriptor findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        String validPhonePrefixInput \u003d \" p/12345678\";","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validPhonePrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_PHONE);","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        String validEmailPrefixInput \u003d \" e/johndoe@abc.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validEmailPrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_EMAIL);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"        String validRolePrefixInput \u003d \" r/Teacher\";","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validRolePrefixInput, PREFIX_ROLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        String validEmploymentTypePrefixInput \u003d \" et/Temporary\";","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validEmploymentTypePrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"        String validExpectedSalaryPrefixInput \u003d \" s/3500\";","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validExpectedSalaryPrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_EXPECTED_SALARY);","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"        String validLevelOfEducationPrefixInput \u003d \" l/Masters\";","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validLevelOfEducationPrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Pulpy-y"},"content":"        String validExperiencePrefixInput \u003d \" y/3\";","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validExperiencePrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_EXPERIENCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"        String validTagPrefixInput \u003d \" t/old\";","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validTagPrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"Pulpy-y"},"content":"        String validInterviewPrefixInputOne \u003d \" i/2021-10-29, 20:00\";","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"Pulpy-y"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validInterviewPrefixInputOne,","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_INTERVIEW);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"Pulpy-y"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"        String validDonePrefixInputOne \u003d \" d/Done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validDonePrefixInputOne,","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"                PREFIX_DONE);","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"        String validDonePrefixInputTwo \u003d \" d/Not Done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(validDonePrefixInputTwo,","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"TohWeiJie01"},"content":"                PREFIX_DONE);","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"TohWeiJie01"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"BryannYeap"},"content":"        String multipleValidPrefixInput \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"Pulpy-y"},"content":"                \" n/John Doe p/12345678 e/johndoe@abc.com r/Teacher et/Temporary s/3500 l/Masters \"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"Pulpy-y"},"content":"                        + \"y/3 t/old i/2021-10-29, 20:00 d/Done\";","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(multipleValidPrefixInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE, PREFIX_TAG,","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_INTERVIEW, PREFIX_DONE);","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"    public void findDescriptor_emptyPrefixInput_emptyPredicatesList() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"        String emptyNamePrefixInput \u003d \" n/\";","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyNamePrefixInput, PREFIX_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"        FindDescriptor findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"        String emptyPhonePrefixInput \u003d \" p/\";","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyPhonePrefixInput, PREFIX_PHONE);","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"        String emptyEmailPrefixInput \u003d \" e/\";","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyEmailPrefixInput, PREFIX_EMAIL);","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"        String emptyRolePrefixInput \u003d \" r/\";","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyRolePrefixInput, PREFIX_ROLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"kaushikkrdy"},"content":"        String emptyEmploymentTypePrefixInput \u003d \" et/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"kaushikkrdy"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyEmploymentTypePrefixInput, PREFIX_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"kaushikkrdy"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"        String emptyExpectedSalaryPrefixInput \u003d \" s/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyExpectedSalaryPrefixInput, PREFIX_EXPECTED_SALARY);","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"TohWeiJie01"},"content":"        String emptyLevelOfEducationPrefixInput \u003d \" l/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"TohWeiJie01"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyLevelOfEducationPrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"TohWeiJie01"},"content":"                PREFIX_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"TohWeiJie01"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"Pulpy-y"},"content":"        String emptyExperiencePrefixInput \u003d \" y/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"Pulpy-y"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyExperiencePrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_EXPERIENCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"Pulpy-y"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"BryannYeap"},"content":"        String emptyTagPrefixInput \u003d \" t/\";","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyTagPrefixInput, PREFIX_TAG);","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"Pulpy-y"},"content":"        String emptyInterviewPrefixInput \u003d \" i/\";","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"Pulpy-y"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyInterviewPrefixInput, PREFIX_INTERVIEW);","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"Pulpy-y"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"TohWeiJie01"},"content":"        String emptyDonePrefixInput \u003d \" d/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(emptyDonePrefixInput, PREFIX_DONE);","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"TohWeiJie01"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"Pulpy-y"},"content":"        String multipleEmptyPrefixInput \u003d \" n/ p/ e/ r/ et/ s/ l/ y/ t/ i/ d/\";","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(multipleEmptyPrefixInput,","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"kaushikkrdy"},"content":"                PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE, PREFIX_TAG,","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_INTERVIEW, PREFIX_DONE);","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"twothicc"},"content":"    public void findDescriptor_blankPrefixInput_emptyPredicatesList() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"twothicc"},"content":"        String blankNamePrefixInput \u003d \" n/  \";","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"twothicc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankNamePrefixInput, PREFIX_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"twothicc"},"content":"        FindDescriptor findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"BryannYeap"},"content":"        String blankPhonePrefixInput \u003d \" p/  \";","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankPhonePrefixInput, PREFIX_PHONE);","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"BryannYeap"},"content":"        String blankEmailPrefixInput \u003d \" e/  \";","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankEmailPrefixInput, PREFIX_EMAIL);","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"twothicc"},"content":"        String blankRolePrefixInput \u003d \" r/  \";","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankRolePrefixInput, PREFIX_ROLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"kaushikkrdy"},"content":"        String blankEmploymentTypePrefixInput \u003d \" et/  \";","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"kaushikkrdy"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankEmploymentTypePrefixInput, PREFIX_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"kaushikkrdy"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"        String blankExpectedSalaryPrefixInput \u003d \" s/  \";","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankExpectedSalaryPrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"BryannYeap"},"content":"                PREFIX_EXPECTED_SALARY);","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"TohWeiJie01"},"content":"        String blankLevelOfEducationPrefixInput \u003d \" l/  \";","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"TohWeiJie01"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankLevelOfEducationPrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"TohWeiJie01"},"content":"                PREFIX_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"TohWeiJie01"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"Pulpy-y"},"content":"        String blankExperiencePrefixInput \u003d \" y/  \";","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"Pulpy-y"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankExperiencePrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_EXPERIENCE);","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"Pulpy-y"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"BryannYeap"},"content":"        String blankTagPrefixInput \u003d \" t/  \";","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"BryannYeap"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankTagPrefixInput, PREFIX_TAG);","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"BryannYeap"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"Pulpy-y"},"content":"        String blankInterviewPrefixInput \u003d \" i/  \";","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"Pulpy-y"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankInterviewPrefixInput, PREFIX_INTERVIEW);","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"Pulpy-y"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"TohWeiJie01"},"content":"        String blankDonePrefixInput \u003d \" d/  \";","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"TohWeiJie01"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(blankDonePrefixInput, PREFIX_DONE);","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"TohWeiJie01"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"Pulpy-y"},"content":"        String multipleBlankPrefixInput \u003d \" n/   p/   e/   r/   et/   s/   l/   y/   t/   i/    d/  \";","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"twothicc"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenizeWithoutPreamble(multipleBlankPrefixInput,","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"kaushikkrdy"},"content":"                PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-13"},{"lineNumber":280,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE, PREFIX_TAG,","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"Pulpy-y"},"content":"                PREFIX_INTERVIEW, PREFIX_DONE);","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"twothicc"},"content":"        findDescriptor \u003d new FindDescriptor(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"twothicc"},"content":"        assertTrue(findDescriptor.getPredicates().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":287,"author":{"gitId":"BryannYeap"},"content":"    public void findDescriptor_invalidPrefixInput_parseExceptionThrown() throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":288,"author":{"gitId":"BryannYeap"},"content":"        String invalidNamePrefixInput \u003d \" n/@#$\"; // non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":289,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":290,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidNamePrefixInput, PREFIX_NAME)));","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"BryannYeap"},"content":"        String invalidPhonePrefixInput \u003d \" p/abc\"; // non-numeric","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidPhonePrefixInput, PREFIX_PHONE)));","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"BryannYeap"},"content":"        String invalidEmailPrefixInput \u003d \" e/peterjack@\"; // missing domain name","lastModifiedDate":"2021-10-17"},{"lineNumber":297,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":298,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidEmailPrefixInput, PREFIX_EMAIL)));","lastModifiedDate":"2021-10-17"},{"lineNumber":299,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":300,"author":{"gitId":"BryannYeap"},"content":"        String invalidRolePrefixInput \u003d \" r/@#$%^\u0026*()\"; // only non-alphanumeric","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":302,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidRolePrefixInput, PREFIX_ROLE)));","lastModifiedDate":"2021-10-13"},{"lineNumber":303,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":304,"author":{"gitId":"kaushikkrdy"},"content":"        String invalidEmploymentTypePrefixInput \u003d \" et/longtime\"; // none of the employment types","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"kaushikkrdy"},"content":"        // start with this keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"kaushikkrdy"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":307,"author":{"gitId":"kaushikkrdy"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidEmploymentTypePrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"kaushikkrdy"},"content":"                        PREFIX_EMPLOYMENT_TYPE)));","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"BryannYeap"},"content":"        String invalidExpectedSalaryPrefixInput \u003d \" s/-100\"; // negative number","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidExpectedSalaryPrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"BryannYeap"},"content":"                        PREFIX_EXPECTED_SALARY)));","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"TohWeiJie01"},"content":"        String invalidLevelOfEducationTypePrefixInput \u003d \" l/Kindergarten\"; // none of the levels of education","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"TohWeiJie01"},"content":"        // start with this keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":318,"author":{"gitId":"TohWeiJie01"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidLevelOfEducationTypePrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":319,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_LEVEL_OF_EDUCATION)));","lastModifiedDate":"2021-10-13"},{"lineNumber":320,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"Pulpy-y"},"content":"        String invalidExperiencePrefixInput1 \u003d \" y/800\"; // large number","lastModifiedDate":"2021-10-13"},{"lineNumber":322,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":323,"author":{"gitId":"Pulpy-y"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidExperiencePrefixInput1,","lastModifiedDate":"2021-10-13"},{"lineNumber":324,"author":{"gitId":"Pulpy-y"},"content":"                        PREFIX_EXPERIENCE)));","lastModifiedDate":"2021-10-13"},{"lineNumber":325,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":326,"author":{"gitId":"BryannYeap"},"content":"        String invalidTagPrefixInput \u003d \" t/old(70)\"; // brackets","lastModifiedDate":"2021-10-13"},{"lineNumber":327,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":328,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidTagPrefixInput, PREFIX_TAG)));","lastModifiedDate":"2021-10-13"},{"lineNumber":329,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":330,"author":{"gitId":"TohWeiJie01"},"content":"        String invalidDonePrefixInput \u003d \" d/Wrong\"; // Neither \"Done\" nor \"Not Done\"","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"TohWeiJie01"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(invalidDonePrefixInput, PREFIX_DONE)));","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":334,"author":{"gitId":"BryannYeap"},"content":"        String multipleInvalidPrefixInput \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":335,"author":{"gitId":"Pulpy-y"},"content":"                \" n/@#$ p/abc e/peterjack@ r/@#$%^\u0026*() et/longterm s/-100 l/Kindergarten y/800 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"Pulpy-y"},"content":"                        + \"t/old(70) i/monday d/Wrong\";","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"BryannYeap"},"content":"                new FindDescriptor(ArgumentTokenizer.tokenizeWithoutPreamble(multipleInvalidPrefixInput,","lastModifiedDate":"2021-10-13"},{"lineNumber":339,"author":{"gitId":"kaushikkrdy"},"content":"                        PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_ROLE, PREFIX_EMPLOYMENT_TYPE,","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"TohWeiJie01"},"content":"                        PREFIX_EXPECTED_SALARY, PREFIX_LEVEL_OF_EDUCATION, PREFIX_EXPERIENCE,","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"Pulpy-y"},"content":"                        PREFIX_TAG, PREFIX_INTERVIEW, PREFIX_DONE)));","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kaushikkrdy":29,"twothicc":56,"TohWeiJie01":47,"Pulpy-y":64,"-":31,"BryannYeap":116}},{"path":"src/test/java/seedu/address/logic/parser/MarkingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_DUPLICATE_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"public class MarkingCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    private String markCommandWord \u003d \"mark\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    private String unmarkCommandWord \u003d \"unmark\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    private MarkingCommandParser parserForMark \u003d new MarkingCommandParser(markCommandWord);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    private MarkingCommandParser parserForUnmark \u003d new MarkingCommandParser(unmarkCommandWord);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public void parse_validArgs_returnsMarkingCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        // One index","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parserForMark, \"1\", new MarkCommand(new Index[]{INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parserForUnmark, \"1\", new UnmarkCommand(new Index[]{INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        // Multiple index","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parserForMark, \"1 2\",","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"                new MarkCommand(new Index[]{INDEX_SECOND_PERSON, INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parserForUnmark, \"1 2\",","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"                new UnmarkCommand(new Index[]{INDEX_SECOND_PERSON, INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        // Multiple index with varying white space","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parserForMark, \"3            1     2\",","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"                new MarkCommand(new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseSuccess(parserForUnmark, \"3            1     2\",","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"                new UnmarkCommand(new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON}));","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        String errorDueToInvalidIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        String errorDueToDuplicateIndex \u003d MESSAGE_INVALID_COMMAND_FORMAT + \"\\n\" + MESSAGE_DUPLICATE_INDEX;","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"        // Not a number","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForMark, \"a\",","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForUnmark, \"a\",","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        // Zero index","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForMark, \"0\",","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForUnmark, \"0\",","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"        // Negative index","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForMark, \"-1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForUnmark, \"-1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"        // Multiple inputs, one invalid","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForMark, \"0 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForUnmark, \"0 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        // Multiple inputs, all invalid","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForMark, \"0 -1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        assertParseFailure(parserForUnmark, \"0 -1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToInvalidIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"        // 2 duplicate inputs","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parserForMark, \"1 1\",","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parserForUnmark, \"1 1\",","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"        // Many duplicates interspersed (Note that MarkingCommandParser does not detect out of range indexes)","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parserForMark, \"70 2 3 2 2 1 70\",","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parserForUnmark, \"70 2 3 2 2 1 70\",","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"        // Duplicates as last few inputs","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parserForMark, \"2 3 4 4 4\",","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"        assertParseFailure(parserForUnmark, \"2 3 4 4 4\",","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"                String.format(errorDueToDuplicateIndex, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"TohWeiJie01":61,"BryannYeap":37}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"    private static final String INVALID_ROLE \u003d \"Softw@re Eng1n33r\";","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"    private static final String INVALID_EMPLOYMENT_TYPE \u003d \"intern\";","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    private static final String INVALID_EXPECTED_SALARY \u003d \"-1200\";","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String INVALID_LEVEL_OF_EDUCATION \u003d \"Kindergarten\";","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    private static final String INVALID_EXPERIENCE \u003d \"-1\";","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"    private static final String INVALID_INTERVIEW \u003d \"monday\";","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"    private static final String VALID_ROLE \u003d \"Software Engineer\";","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"    private static final String VALID_EMPLOYMENT_TYPE \u003d \"Internship\";","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    private static final String VALID_EXPECTED_SALARY \u003d \"1200\";","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String VALID_LEVEL_OF_EDUCATION \u003d \"PhD\";","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"    private static final String VALID_EXPERIENCE \u003d \"1\";","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"    private static final String VALID_Interview \u003d \"2021-10-29, 10:30\";","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String VALID_NOTES \u003d \"He is a very good candidate!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"    public void parseMultipleIndex_oneInvalidInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMultipleIndex(\"10 a\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"    public void parseMultipleIndex_allInvalidInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMultipleIndex(\"b a c\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"    public void parseMultipleIndex_duplicateInput_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMultipleIndex(\"1 1 2\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"    public void parseMultipleIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"                ParserUtil.parseMultipleIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"    public void parseMultipleIndex_validInput_success() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"        // Only 1 space in between","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"        assertArrayEquals(new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON},","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"                ParserUtil.parseMultipleIndex(\"1 2 3\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"        assertArrayEquals(new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON},","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"                ParserUtil.parseMultipleIndex(\"  1 3 2  \"));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"        // Varying whitespaces","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"        assertArrayEquals(new Index[]{INDEX_THIRD_PERSON, INDEX_SECOND_PERSON, INDEX_FIRST_PERSON},","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"                ParserUtil.parseMultipleIndex(\"  3     1               2  \"));","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"    public void parseRole_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"twothicc"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRole((String) null));","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"twothicc"},"content":"    public void parseRole_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"twothicc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(INVALID_ROLE));","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"twothicc"},"content":"    public void parseRole_validValueWithoutWhitespace_returnsRole() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"twothicc"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2021-09-28"},{"lineNumber":199,"author":{"gitId":"twothicc"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(VALID_ROLE));","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"twothicc"},"content":"    public void parseRole_validValueWithWhitespace_returnsTrimmedRole() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"twothicc"},"content":"        String roleWithWhitespace \u003d WHITESPACE + VALID_ROLE + WHITESPACE;","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"twothicc"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2021-09-28"},{"lineNumber":206,"author":{"gitId":"twothicc"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(roleWithWhitespace));","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"kaushikkrdy"},"content":"    public void parseEmploymentType_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"kaushikkrdy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmploymentType((String) null));","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"kaushikkrdy"},"content":"    public void parseEmploymentType_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"kaushikkrdy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmploymentType(INVALID_EMPLOYMENT_TYPE));","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":219,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":220,"author":{"gitId":"kaushikkrdy"},"content":"    public void parseEmploymentType_validValueWithoutWhitespace_returnsEmploymentType() throws Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentType employmentType \u003d new EmploymentType(VALID_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(employmentType, ParserUtil.parseEmploymentType(VALID_EMPLOYMENT_TYPE));","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"kaushikkrdy"},"content":"    public void parseEmploymentType_validValueWithWhitespace_returnsTrimmedEmploymentType() throws Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"kaushikkrdy"},"content":"        String employmentTypeWithWhitespace \u003d WHITESPACE + VALID_EMPLOYMENT_TYPE + WHITESPACE;","lastModifiedDate":"2021-10-02"},{"lineNumber":228,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentType expectedEmploymentType \u003d new EmploymentType(VALID_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-02"},{"lineNumber":229,"author":{"gitId":"kaushikkrdy"},"content":"        assertEquals(expectedEmploymentType, ParserUtil.parseEmploymentType(employmentTypeWithWhitespace));","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":233,"author":{"gitId":"BryannYeap"},"content":"    public void parseExpectedSalary_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":234,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExpectedSalary((String) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":235,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":236,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":237,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":238,"author":{"gitId":"BryannYeap"},"content":"    public void parseExpectedSalary_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":239,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExpectedSalary(INVALID_EXPECTED_SALARY));","lastModifiedDate":"2021-10-01"},{"lineNumber":240,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":241,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":242,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":243,"author":{"gitId":"BryannYeap"},"content":"    public void parseExpectedSalary_validValueWithoutWhitespace_returnsExpectedSalary() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalary expectedExpectedSalary \u003d new ExpectedSalary(VALID_EXPECTED_SALARY);","lastModifiedDate":"2021-10-01"},{"lineNumber":245,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(expectedExpectedSalary, ParserUtil.parseExpectedSalary(VALID_EXPECTED_SALARY));","lastModifiedDate":"2021-10-01"},{"lineNumber":246,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":247,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":248,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":249,"author":{"gitId":"BryannYeap"},"content":"    public void parseExpectedSalary_validValueWithWhitespace_returnsTrimmedExpectedSalary() throws Exception {","lastModifiedDate":"2021-10-01"},{"lineNumber":250,"author":{"gitId":"BryannYeap"},"content":"        String expectedSalaryWithWhitespace \u003d WHITESPACE + VALID_EXPECTED_SALARY + WHITESPACE;","lastModifiedDate":"2021-10-01"},{"lineNumber":251,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalary expectedExpectedSalary \u003d new ExpectedSalary(VALID_EXPECTED_SALARY);","lastModifiedDate":"2021-10-01"},{"lineNumber":252,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(expectedExpectedSalary, ParserUtil.parseExpectedSalary(expectedSalaryWithWhitespace));","lastModifiedDate":"2021-10-01"},{"lineNumber":253,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":254,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":255,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"TohWeiJie01"},"content":"    public void parseLevelOfEducation_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLevelOfEducation((String) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"TohWeiJie01"},"content":"    public void parseLevelOfEducation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLevelOfEducation(INVALID_LEVEL_OF_EDUCATION));","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"TohWeiJie01"},"content":"    public void parseLevelOfEducation_validValueWithoutWhitespace_returnsLevelOfEducation() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducation expectedLevelOfEducation \u003d new LevelOfEducation(VALID_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(expectedLevelOfEducation, ParserUtil.parseLevelOfEducation(VALID_LEVEL_OF_EDUCATION));","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"TohWeiJie01"},"content":"    public void parseLevelOfEducation_validValueWithWhitespace_returnsTrimmedLevelOfEducation() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"TohWeiJie01"},"content":"        String levelOfEducationWithWhitespace \u003d WHITESPACE + VALID_LEVEL_OF_EDUCATION + WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducation expectedLevelOfEducation \u003d new LevelOfEducation(VALID_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(expectedLevelOfEducation, ParserUtil.parseLevelOfEducation(levelOfEducationWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":277,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":279,"author":{"gitId":"Pulpy-y"},"content":"    public void parseExperience_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":280,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExperience((String) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":281,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":282,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":283,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"Pulpy-y"},"content":"    public void parseExperience_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExperience(INVALID_EXPERIENCE));","lastModifiedDate":"2021-10-01"},{"lineNumber":286,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":287,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":288,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":289,"author":{"gitId":"Pulpy-y"},"content":"    public void parseExperience_validValueWithoutWhitespace_returnsExperience() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":290,"author":{"gitId":"Pulpy-y"},"content":"        Experience expectedExperience \u003d new Experience(VALID_EXPERIENCE);","lastModifiedDate":"2021-10-08"},{"lineNumber":291,"author":{"gitId":"Pulpy-y"},"content":"        assertEquals(expectedExperience, ParserUtil.parseExperience(VALID_EXPERIENCE));","lastModifiedDate":"2021-10-08"},{"lineNumber":292,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":293,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":294,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":295,"author":{"gitId":"Pulpy-y"},"content":"    public void parseExperience_validValueWithWhitespace_returnsTrimmedExperience() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":296,"author":{"gitId":"Pulpy-y"},"content":"        String experienceWithWhitespace \u003d WHITESPACE + VALID_EXPERIENCE + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":297,"author":{"gitId":"Pulpy-y"},"content":"        Experience expectedExperience \u003d new Experience(VALID_EXPERIENCE);","lastModifiedDate":"2021-10-08"},{"lineNumber":298,"author":{"gitId":"Pulpy-y"},"content":"        assertEquals(expectedExperience, ParserUtil.parseExperience(experienceWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":346,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"Pulpy-y"},"content":"    public void parseInterview_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterview(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"Pulpy-y"},"content":"    public void parseInterview_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterview(INVALID_INTERVIEW));","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"Pulpy-y"},"content":"    public void parseInterview_validValue_returnsInterview() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"Pulpy-y"},"content":"        Optional\u003cInterview\u003e expectedInterview \u003d Optional.ofNullable(new Interview(VALID_Interview));","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"Pulpy-y"},"content":"        assertEquals(expectedInterview, ParserUtil.parseInterview(VALID_Interview));","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":363,"author":{"gitId":"TohWeiJie01"},"content":"    public void parseNotes_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNotes((String) null));","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":367,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"TohWeiJie01"},"content":"    public void parseNotes_validValue_returnsNotes() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":369,"author":{"gitId":"TohWeiJie01"},"content":"        Optional\u003cNotes\u003e expectedNotes \u003d Optional.ofNullable(new Notes(VALID_NOTES));","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(expectedNotes, ParserUtil.parseNotes(VALID_NOTES));","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kaushikkrdy":22,"TohWeiJie01":40,"twothicc":15,"Pulpy-y":42,"-":188,"BryannYeap":66}},{"path":"src/test/java/seedu/address/logic/parser/ShowCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"public class ShowCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"    private ShowCommandParser parser \u003d new ShowCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"                ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    public void parse_blankInput_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"                ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"    public void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseFailure(parser, \"x/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"                ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"    public void parseOneValidPrefix_returnsShowCommandWithPrefix() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"        ShowCommand expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"n/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  n/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_EMAIL);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"e/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  e/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_PHONE);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"p/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  p/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_ROLE);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"r/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  r/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"et/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  et/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_EXPECTED_SALARY);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"s/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  s/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"l/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  l/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_EXPERIENCE);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"y/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  y/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"t/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"  t/   \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"Pulpy-y"},"content":"        expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_INTERVIEW);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"Pulpy-y"},"content":"        assertParseSuccess(parser, \"i/\", expectedShowCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Pulpy-y"},"content":"        // whitespaces before and after prefix","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Pulpy-y"},"content":"        assertParseSuccess(parser, \"  i/   \", expectedShowCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"    public void parse_multipleValidPrefixes_returnsShowCommandWithFirstPrefix() {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"        ShowCommand expectedShowCommand \u003d new ShowCommand(CliSyntax.PREFIX_NAME);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseSuccess(parser, \"n/ r/ et/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kaushikkrdy"},"content":"        // multiple whitespaces between prefixes","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"kaushikkrdy"},"content":"        assertParseSuccess(parser, \"n/   r/    et/\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"        // multiple whitespaces before and after prefixes","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"    n/ r/ et/    \", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"        // Prefixes with inputs","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"        assertParseSuccess(parser, \"n/J@hn r/Softw@re 3ngin33r$$ et/25/7\", expectedShowCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kaushikkrdy":34,"twothicc":68,"Pulpy-y":5}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"    public void resetData_withDuplicatePersonsSameContactNumberDifferentEmail_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        // Two persons with the same contact number but different email","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(AMY, editedBob);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"    public void resetData_withDuplicatePersonsSameEmailDifferentContactNumber_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        // Two persons with the same email but different contact number","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(AMY, editedBob);","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"    public void resetData_withDuplicatePersonsSameEmailSameContactNumber_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        // Two persons with the same email but different contact number","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"                .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(AMY, editedBob);","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"        assertTrue(addressBook.hasPerson(editedBob));","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_noPersonInAddressBook_returnsEmptyList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"        assertTrue(addressBook.getDuplicate(AMY).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_noPersonWithSameIdentityFieldsInAddressBook_returnsEmptyList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"        assertTrue(addressBook.getDuplicate(BOB).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_personWithSameIdentityFieldsInAddressBook_returnsDuplicatePerson() {","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"        assertEquals(addressBook.getDuplicate(editedBob).get(0), AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_personsWithSameIdentityFieldsInAddressBook_returnsDuplicatePersons() {","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"        addressBook.addPerson(BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"        List\u003cPerson\u003e duplicates \u003d addressBook.getDuplicate(editedBob);","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"        assertEquals(duplicates.get(0), AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"        assertEquals(duplicates.get(1), BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"twothicc":53,"TohWeiJie01":2,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_noPersonInAddressBook_returnsEmptyList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        assertTrue(modelManager.getDuplicate(ALICE).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_noDuplicatePersonInAddressBook_returnsEmptyList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"        assertTrue(modelManager.getDuplicate(BOB).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_duplicatePersonInAddressBook_returnsDuplicatePersonInAddressBook() {","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"        assertEquals(modelManager.getDuplicate(ALICE).get(0), ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_duplicatePersonsInAddressBook_returnsDuplicatePersonsInAddressBook() {","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"        Person bobWithAmyPhone \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"        modelManager.addPerson(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"        modelManager.addPerson(BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"        List\u003cPerson\u003e duplicates \u003d modelManager.getDuplicate(bobWithAmyPhone);","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"        assertEquals(duplicates.get(0), AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"        assertEquals(duplicates.get(1), BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"twothicc":33,"-":132}},{"path":"src/test/java/seedu/address/model/done/DoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.done;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class DoneContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate firstPredicate \u003d new DoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate secondPredicate \u003d new DoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate firstPredicateCopy \u003d new DoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    public void test_doneContainsOnlyMatchingKeywords_returnsTrue() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        // Matching Done","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"                new DoneContainsKeywordsPredicate(Collections.singletonList(\"Done\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDone(\"Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"        // Matching Not Done","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new DoneContainsKeywordsPredicate(Collections.singletonList(\"Not Done\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"Not Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"    public void test_doneContainsMismatchKeywords_returnsFalse() {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        // One mismatching keyword against single term done","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                new DoneContainsKeywordsPredicate(Collections.singletonList(\"Don\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDone(\"Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        // One mismatching keyword against multiple term done","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new DoneContainsKeywordsPredicate(Collections.singletonList(\"Don\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDone(\"Not Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        // Multiple keywords with partial mismatch against similar term done","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new DoneContainsKeywordsPredicate(Arrays.asList(\"No\", \"Done\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDone(\"Not Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"        // All mismatch keywords against multiple term done","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new DoneContainsKeywordsPredicate(Arrays.asList(\"Wrong\", \"Stuff\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDone(\"Not Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"        // Searching for Done will not match Not Done","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new DoneContainsKeywordsPredicate(Arrays.asList(\"Done\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDone(\"Not Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"    public void test_doneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"        DoneContainsKeywordsPredicate predicate \u003d new DoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDone(\"Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"        // Keywords match all other prefixes, but does not match done","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new DoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"                Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"                        \"Programmer\", \"Full\", \"time\", \"3000\", \"High\", \"School\", \"3\", \"friend\", \"Done\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Programmer\")","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"                .withEmploymentType(\"Full time\").withExpectedSalary(\"3000\")","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"                .withLevelOfEducation(\"High School\").withExperience(\"3\").withTags(\"friend\")","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"                .withDone(\"Not Done\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"TohWeiJie01":95}},{"path":"src/test/java/seedu/address/model/done/DoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.done;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class DoneTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Done(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public void constructor_invalidDone_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        String invalidDone \u003d \"\"; // A doneStatus can only be \"Done\" or \"Not Done\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidDone));","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    public void testSetAsDone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        String validDone \u003d \"Done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        Done testDone \u003d new Done(\"Not Done\");","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        testDone.setAsDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(validDone, testDone.getDoneStatus());","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public void testSetAsUndone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        String validDone \u003d \"Not Done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        Done testDone \u003d new Done(\"Done\");","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        testDone.setAsUndone();","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(validDone, testDone.getDoneStatus());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"TohWeiJie01":39}},{"path":"src/test/java/seedu/address/model/interview/InterviewContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"class InterviewContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"        InterviewContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"                new InterviewContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"        InterviewContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"                new InterviewContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"        InterviewContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"                new InterviewContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"    public void test_interviewContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"        InterviewContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"                new InterviewContainsKeywordsPredicate(Collections.singletonList(\"2021\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterview(\"2021-10-10, 10:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new InterviewContainsKeywordsPredicate(Arrays.asList(\"2021\", \"Mar\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterview(\"2021-03-21, 20:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new InterviewContainsKeywordsPredicate(Arrays.asList(\"2021\", \"Mar\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterview(\"2021-04-21, 10:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new InterviewContainsKeywordsPredicate(Arrays.asList(\"maR\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInterview(\"2021-03-21, 10:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"    public void test_interviewDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"        InterviewContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Pulpy-y"},"content":"                new InterviewContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterview(\"2021-10-10, 10:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Pulpy-y"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new InterviewContainsKeywordsPredicate(Arrays.asList(\"2022\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInterview(\"2021-10-31, 10:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Pulpy-y"},"content":"        // Keywords match name phone, email, applied role, employment type, expected salary,","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Pulpy-y"},"content":"        // level of education, years of experience, and tag, but does not match interview","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new InterviewContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Pulpy-y"},"content":"                \"Engineer\", \"Temporary\", \"4000\", \"PhD\", \"5\", \"old\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Pulpy-y"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Engineer\").withEmploymentType(\"Temporary\")","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Pulpy-y"},"content":"                .withExpectedSalary(\"4000\").withLevelOfEducation(\"PhD\").withExperience(\"5\")","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Pulpy-y"},"content":"                .withInterview(\"2021-10-30, 10:00\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Pulpy-y":84}},{"path":"src/test/java/seedu/address/model/interview/InterviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"class InterviewTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Interview(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"    public void constructor_invalidInterview_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"        String invalidInterview \u003d \"monday\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Interview(invalidInterview));","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"    public void isValidInterview() {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"        // null interview","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(NullPointerException.class, () -\u003e Interview.isValidInterviewTime(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"        // invalid interview","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Interview.isValidInterviewTime(\"monday\")); // not following format","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Interview.isValidInterviewTime(\" \")); // empty","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"        // valid interview","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-10-29, 10:30\")); // 4 digit year","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"20-10-29, 10:30\")); // 2 digit year","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-09-29, 10:30\")); // 2 digit month","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-9-29, 10:30\")); // 1 digit month","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-9-09, 10:30\")); // 2 digit day","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-9-9, 10:30\")); // 1 digit day","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-09-29, 08:30\")); // 2 digit time","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Interview.isValidInterviewTime(\"2020-09-29, 8:3\")); // 1 digit time","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"    public void isEmptyInterview() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        // EMPTY","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"        Interview emptyInterview \u003d new Interview(\"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(emptyInterview.isEmptyInterview());","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        // NON EMPTY","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"        Interview nonEmptyInterview \u003d new Interview(\"2021-10-31, 10:25\");","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(nonEmptyInterview.isEmptyInterview());","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    public void hasInterviewPassed() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        // PASSED","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        Interview passedInterview \u003d new Interview(\"99-08-12, 00:10\");","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(passedInterview.hasInterviewPassed());","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        // NOT YET PASSED","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        Interview notPassedInterview \u003d new Interview(\"2100-08-12, 00:10\");","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(notPassedInterview.hasInterviewPassed());","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Pulpy-y":53,"BryannYeap":12}},{"path":"src/test/java/seedu/address/model/notes/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class NotesTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Notes(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"TohWeiJie01":14}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"        // One keyword","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"                Collections.singletonList(\"test@123.com\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"test@123.com\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"        // Multiple keywords with one matching email","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"test1@email.com\", \"test2@email.com\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"test1@email.com\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"tEst1@emaIl.com\", \"TESt2@email.com\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"test1@email.com\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Pulpy-y"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Pulpy-y"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Pulpy-y"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"test1@email.com\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"test2@email.com\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"test1@email.com\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Pulpy-y"},"content":"        // Keywords match all other prefixes, but does not match email","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"                Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Pulpy-y"},"content":"                        \"Programmer\", \"Full\", \"time\", \"3000\", \"High\", \"School\", \"3\", \"friend\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmail(\"bob@email.com\").withRole(\"Cat Whisperer\")","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Pulpy-y"},"content":"                .withEmploymentType(\"Full time\").withExpectedSalary(\"3000\")","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Pulpy-y"},"content":"                .withLevelOfEducation(\"High School\").withExperience(\"3\")","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Pulpy-y"},"content":"                .build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kaushikkrdy":3,"Pulpy-y":76}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"        assertFalse(Email.isValidEmail(\"a@bc\")); // minimal, no TLD (Top Level Domain)","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        assertFalse(Email.isValidEmail(\"test@localhost\")); // alphabets only, no TLD","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        assertFalse(Email.isValidEmail(\"123@145\")); // numeric local part and domain name, no TLD","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"twothicc":3,"-":65}},{"path":"src/test/java/seedu/address/model/person/EmploymentTypeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"public class EmploymentTypeContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Full time\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Full time\", \"Part time\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentTypeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentTypeContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentTypeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"    public void test_employmentTypeContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"        // One matching letter that starts with","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentTypeContainsKeywordsPredicate(Collections.singletonList(\"F\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmploymentType(\"Full time\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"        // One keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(Collections.singletonList(\"Internship\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmploymentType(\"Internship\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"        // First word of a two word category","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(Collections.singletonList(\"Part\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmploymentType(\"Part time\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"        // Both parts of a two word category","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(Collections.singletonList(\"Part time\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmploymentType(\"Part time\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(Collections.singletonList(\"iNteRnShiP\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmploymentType(\"Internship\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"    public void test_employmentTypeDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"        EmploymentTypeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"                new EmploymentTypeContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmploymentType(\"Temporary\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"kaushikkrdy"},"content":"        // Keyword that is part of an employment type but does not start with it","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(Arrays.asList(\"time\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmploymentType(\"Part time\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"kaushikkrdy"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(Arrays.asList(\"Temporary\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmploymentType(\"Internship\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"kaushikkrdy"},"content":"        // Keywords match name, phone, email, address, applied role, employment type, expected salary,","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"kaushikkrdy"},"content":"        // level of education, years of experience and tags, but does not match employment type","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new EmploymentTypeContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"kaushikkrdy"},"content":"                Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"kaushikkrdy"},"content":"                        \"Software\", \"Engineer\", \"Full time\", \"4000\", \"PhD\", \"5\", \"young\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Software Engineer\")","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmploymentType(\"Part time\").withExpectedSalary(\"4000\").withLevelOfEducation(\"PhD\")","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"kaushikkrdy"},"content":"                .withExperience(\"5\").withTags(\"young\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kaushikkrdy":94}},{"path":"src/test/java/seedu/address/model/person/ExpectedSalaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"public class ExpectedSalaryTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ExpectedSalary(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    public void constructor_invalidExpectedSalary_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        String invalidExpectedSalary \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ExpectedSalary(invalidExpectedSalary));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    public void isValidExpectedSalary() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        // null expected salary","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(NullPointerException.class, () -\u003e ExpectedSalary.isValidExpectedSalary(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        // invalid expected salary","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"-1\")); // negative number","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"phone\")); // non-numeric","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"!@#$%^\u0026*()\")); // non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(ExpectedSalary.isValidExpectedSalary(\"124293842033123\")); // long expected salary","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        // valid expected salary","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(ExpectedSalary.isValidExpectedSalary(\"0\")); // exactly 1 number","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(ExpectedSalary.isValidExpectedSalary(\"911\")); // more than 1 number","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(ExpectedSalary.isValidExpectedSalary(\"93121534\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"BryannYeap":43}},{"path":"src/test/java/seedu/address/model/person/ExpectedSalaryWithinRangePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"public class ExpectedSalaryWithinRangePredicateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"1000\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"1000\", \"2000\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate firstPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalaryWithinRangePredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate secondPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalaryWithinRangePredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalaryWithinRangePredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"    public void test_expectedSalaryWithinRange_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        // One salary","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate predicate \u003d new ExpectedSalaryWithinRangePredicate(Collections","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"                .singletonList(\"1000\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder().withExpectedSalary(\"1000\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"        // One matching salary out of multiple salaries","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new ExpectedSalaryWithinRangePredicate(Arrays.asList(\"1000\", \"2000\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder().withExpectedSalary(\"1000\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        // Salary within range","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        int salary \u003d 1000;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        int salaryWithinRange \u003d salary + ExpectedSalaryWithinRangePredicate.RANGE;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new ExpectedSalaryWithinRangePredicate(Collections.singletonList(Integer.toString(salary)));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"                .withExpectedSalary(Integer.toString(salaryWithinRange)).build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    public void test_expectedSalaryOutOfRange_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        // Salary out of range","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        int salary1 \u003d 2000;","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        int salaryOutOfRange1 \u003d salary1 + ExpectedSalaryWithinRangePredicate.RANGE + 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        ExpectedSalaryWithinRangePredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"                new ExpectedSalaryWithinRangePredicate(Collections.singletonList(Integer.toString(salary1)));","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"                .withExpectedSalary(Integer.toString(salaryOutOfRange1)).build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        // Multiple salaries out of range","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"        int salary2 \u003d 2000;","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"        int salary3 \u003d 3000;","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        int salaryOutOfRange2 \u003d salary2 + salary3 + ExpectedSalaryWithinRangePredicate.RANGE + 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new ExpectedSalaryWithinRangePredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"                Arrays.asList(Integer.toString(salary2), Integer.toString(salary3)));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"                .withExpectedSalary(Integer.toString(salaryOutOfRange2)).build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"BryannYeap":84}},{"path":"src/test/java/seedu/address/model/person/ExperienceContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"public class ExperienceContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"                new ExperienceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"                new ExperienceContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"                new ExperienceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"    public void test_experienceContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"        // One keyword","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"                new ExperienceContainsKeywordsPredicate(Collections.singletonList(\"2\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(predicate.test(new PersonBuilder().withExperience(\"2\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Pulpy-y"},"content":"    public void test_experienceDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Pulpy-y"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Pulpy-y"},"content":"        ExperienceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Pulpy-y"},"content":"                new ExperienceContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withExperience(\"10\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Pulpy-y"},"content":"        // entry less than keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new ExperienceContainsKeywordsPredicate(Arrays.asList(\"3\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withExperience(\"1\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"        // Keywords match every other category except experience","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Pulpy-y"},"content":"        predicate \u003d new ExperienceContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Pulpy-y"},"content":"                \"Programmer\", \"Full\", \"time\", \"3000\", \"High\", \"School\", \"3\", \"friend\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Cat Whisperer\")","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Pulpy-y"},"content":"                .withEmploymentType(\"Full time\").withExpectedSalary(\"3000\")","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Pulpy-y"},"content":"                .withLevelOfEducation(\"High School\").withExperience(\"1\").withTags(\"friend\")","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Pulpy-y"},"content":"                .build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kaushikkrdy":1,"Pulpy-y":72}},{"path":"src/test/java/seedu/address/model/person/ExperienceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pulpy-y"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Pulpy-y"},"content":"public class ExperienceTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Experience(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Pulpy-y"},"content":"    public void constructor_invalidExperience_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Pulpy-y"},"content":"        String invalidExperience \u003d \"-2\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Experience(invalidExperience));","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Pulpy-y"},"content":"    public void isValidExperience() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Pulpy-y"},"content":"        // null experience","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(NullPointerException.class, () -\u003e Experience.isValidExperience(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Pulpy-y"},"content":"        // invalid experience","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"\")); // empty string","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\" \")); // spaces only","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"^!@#$%\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"11*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"1.1\")); // positive number with decimal other than .0 and .5","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"-11\")); // contains negative number","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"12345\")); // number is too large","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"        assertFalse(Experience.isValidExperience(\"12345678909876\")); // long number","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Pulpy-y"},"content":"        // valid experience","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Experience.isValidExperience(\"1\")); // positive number without decimals","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Experience.isValidExperience(\"3.0\")); // positive number with .0","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Experience.isValidExperience(\"5.5\")); // positive number with .5","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Pulpy-y"},"content":"        assertTrue(Experience.isValidExperience(","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"Pulpy-y"},"content":"                Double.toString(Experience.MAX_EXPERIENCE))); // number not larger than maximum","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Pulpy-y":46}},{"path":"src/test/java/seedu/address/model/person/LevelOfEducationContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class LevelOfEducationContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducationContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducationContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    public void test_levelOfEducationContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        // One matching letter that starts with","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducationContainsKeywordsPredicate(Collections.singletonList(\"M\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLevelOfEducation(\"Masters\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"        // One keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Collections.singletonList(\"Masters\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLevelOfEducation(\"Masters\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        // First word of a two word category","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Collections.singletonList(\"High\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLevelOfEducation(\"High School\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"        // Both parts of a two word category","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Collections.singletonList(\"High School\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLevelOfEducation(\"High School\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Collections.singletonList(\"maSteRS\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(predicate.test(new PersonBuilder().withLevelOfEducation(\"Masters\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"    public void test_levelOfEducationDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"        LevelOfEducationContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"                new LevelOfEducationContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withLevelOfEducation(\"PhD\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"        // Keyword that is part of a level of education but does not start with it","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Arrays.asList(\"School\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withLevelOfEducation(\"High School\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Arrays.asList(\"Masters\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withLevelOfEducation(\"PhD\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"        // Keywords match name, phone, and email, but does not match level of education","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"        predicate \u003d new LevelOfEducationContainsKeywordsPredicate(Arrays","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"                .asList(\"Alice\", \"12345\", \"alice@email.com\", \"Engineer\", \"Temporary\", \"4000\", \"5\", \"old\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Engineer\").withEmploymentType(\"Temporary\")","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"                .withExpectedSalary(\"4000\").withLevelOfEducation(\"PhD\").withExperience(\"5\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"TohWeiJie01":90}},{"path":"src/test/java/seedu/address/model/person/LevelOfEducationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class LevelOfEducationTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LevelOfEducation(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    public void constructor_invalidLevelOfEducation_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        String invalidLevelOfEducation \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LevelOfEducation(invalidLevelOfEducation));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public void isValidLevelOfEducation() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        // null level of education","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(NullPointerException.class, () -\u003e LevelOfEducation.isValidLevelOfEducation(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        // invalid level of education","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(LevelOfEducation.isValidLevelOfEducation(\"\")); // empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(LevelOfEducation.isValidLevelOfEducation(\" \")); // spaces only","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(LevelOfEducation.isValidLevelOfEducation(\"Kindergarten\")); // unsupported level of education","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        // valid level of education","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"Elementary\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"Middle School\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"High School\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"University\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"Bachelors\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"Masters\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        assertTrue(LevelOfEducation.isValidLevelOfEducation(\"PhD\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"TohWeiJie01":41}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        // Keywords match phone, email, applied role, employment type, expected salary,","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        // level of education, years of experience, and tag, but does not match name","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"                \"Engineer\", \"Temporary\", \"4000\", \"PhD\", \"5\", \"old\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Engineer\").withEmploymentType(\"Temporary\")","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"                .withExpectedSalary(\"4000\").withLevelOfEducation(\"PhD\").withExperience(\"5\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":72,"BryannYeap":6}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LEVEL_OF_EDUCATION_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTES_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"        // same email and same contact number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        assertTrue(AMY.isSamePerson(editedBob));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"        // same email but different contact number, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        // different email but same contact number, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        // different email and contact number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        // checks case sensitiveness of email","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        // email same but differing in case, different phone number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB.toUpperCase()).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"        // different level of education -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"        // different notes -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNotes(VALID_NOTES_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"        // different done status -\u003e return false","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"        Person aliceWithDone \u003d new PersonBuilder(ALICE).withDone(Done.STATUS_DONE).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"        Person aliceWithNotDone \u003d new PersonBuilder(ALICE).withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"        assertFalse(aliceWithDone.equals(aliceWithNotDone));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"twothicc":18,"TohWeiJie01":14,"-":76}},{"path":"src/test/java/seedu/address/model/person/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaushikkrdy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kaushikkrdy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaushikkrdy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaushikkrdy"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"87654321\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaushikkrdy"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"87654321\", \"98765432\");","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaushikkrdy"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaushikkrdy"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaushikkrdy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kaushikkrdy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaushikkrdy"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kaushikkrdy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kaushikkrdy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kaushikkrdy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kaushikkrdy"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kaushikkrdy"},"content":"        // One keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"                Collections.singletonList(\"87654321\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"87654321\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kaushikkrdy"},"content":"        // Multiple keywords with one matching phone","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"87654321\", \"98765432\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kaushikkrdy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"87654321\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kaushikkrdy"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kaushikkrdy"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"87654321\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"87654321\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"98765432\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kaushikkrdy"},"content":"        // Keywords match all other prefixes, but does not match phone","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"                Arrays.asList(\"Alice\", \"87654321\", \"alice@email.com\",","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"                        \"Programmer\", \"Full\", \"time\", \"3000\", \"High\", \"School\", \"3\", \"friend\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Cat Whisperer\")","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmploymentType(\"Full time\").withExpectedSalary(\"3000\")","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"                .withLevelOfEducation(\"High School\").withExperience(\"3\")","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"                .build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"kaushikkrdy"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kaushikkrdy":75}},{"path":"src/test/java/seedu/address/model/person/RoleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"class RoleContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate firstPredicate \u003d new RoleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate secondPredicate \u003d new RoleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate firstPredicateCopy \u003d new RoleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"    public void test_roleContainsOnlyMatchingKeywords_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"        // One matching keyword against single term role","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"                new RoleContainsKeywordsPredicate(Collections.singletonList(\"Engineer\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"Engineer\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"        // One matching keyword against multiple term role","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Collections.singletonList(\"Store\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"Store Assistant\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        // All matching keywords against similar terms role","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"Store\", \"Assistant\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"Store Assistant\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        // All matching keywords against role with more terms","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"Store\", \"Assistant\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"Senior Store Assistant\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"        // mixed-case and all matching keywords against similar terms role","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"stORe\", \"aSSistant\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRole(\"Store Assistant\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"    public void test_roleContainsMismatchKeywords_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        // One mismatching keyword against single term role","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"                new RoleContainsKeywordsPredicate(Collections.singletonList(\"Cleaner\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"Cook\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        // One mismatching keyword against multiple term role","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Collections.singletonList(\"Cleaner\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"Senior Cook\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"        // Multiple keywords with partial mismatch against similar term role","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"Store\", \"Manager\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"Store Assistant\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        // Multiple keywords with partial mismatch against role with more terms","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"Store\", \"Manager\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"Senior Store Assistant\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"        // All mismatch keywords against multiple term role","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(Arrays.asList(\"Restaurant\", \"Manager\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"Senior Store Assistant\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"    public void test_roleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"        RoleContainsKeywordsPredicate predicate \u003d new RoleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRole(\"Cook\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"        // Keywords match all other prefixes, but does not match role","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"        predicate \u003d new RoleContainsKeywordsPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"kaushikkrdy"},"content":"                Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"                        \"Programmer\", \"Full\", \"time\", \"3000\", \"High\", \"School\", \"3\", \"friend\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"kaushikkrdy"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Cat Whisperer\")","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"                .withEmploymentType(\"Full time\").withExpectedSalary(\"3000\")","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"kaushikkrdy"},"content":"                .withLevelOfEducation(\"High School\").withExperience(\"3\").withTags(\"friend\")","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"                .build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kaushikkrdy":3,"twothicc":103}},{"path":"src/test/java/seedu/address/model/person/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"public class RoleTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Role(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    public void constructor_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidRole));","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    public void isValidRole() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"        // null role","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        // invalid roles","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        assertFalse(Role.isValidRole(\"engineer@nus\")); // contains non-alphanumeric","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        assertFalse(Role.isValidRole(\"software engineer (senior)\")); // brackets","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Role.isValidRole(\"!@#$%^\u0026*()_+\")); // only non-alphanumeric","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        // valid roles","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        assertTrue(Role.isValidRole(\"software engineer\")); // alphabets only","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"        assertTrue(Role.isValidRole(\"93121534\")); // numbers only","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"        assertTrue(Role.isValidRole(\"ieee754 enjoyer\")); // alphanumeric characters","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        assertTrue(Role.isValidRole(\"Software Engineer\")); // contains capital letters","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"        assertTrue(Role.isValidRole(\"Extra looooong Software engineer and tester\")); // long roles","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"twothicc":40,"BryannYeap":2}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"        assertTrue(uniquePersonList.contains(editedBob));","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_noPersonsInList_returnsEmptyList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        assertTrue(uniquePersonList.getDuplicate(AMY).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_noPersonWithSameIdentityFieldsInList_returnsEmptyList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"        assertTrue(uniquePersonList.getDuplicate(BOB).isEmpty());","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_personWithSameIdentityFieldsInList_returnsDuplicatePerson() {","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"        assertEquals(uniquePersonList.getDuplicate(editedBob).get(0), AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"    public void getDuplicate_personsWithSameIdentityFieldsInLIst_returnsDuplicatePersons() {","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        uniquePersonList.add(AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"        List\u003cPerson\u003e duplicates \u003d uniquePersonList.getDuplicate(editedBob);","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"        assertEquals(duplicates.get(0), AMY);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        assertEquals(duplicates.get(1), BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":203,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"twothicc":36,"TohWeiJie01":2,"-":166}},{"path":"src/test/java/seedu/address/model/tag/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"favourite\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"young\", \"favourite\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"        // One keyword, one tag","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"young\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"young\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        // Multiple keywords, one tag","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"young\", \"favourite\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"favourite\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"        // One keyword, multiple tags","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"favourite\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"young\", \"favourite\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        // Mixed-case keyword","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"yOunG\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"young\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"young\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"old\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"young\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        // Keywords match name, phone, email, applied role, employment type, expected salary,","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        // level of education, and years of experience, but does not match tags","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"                \"Engineer\", \"Temporary\", \"4000\", \"PhD\", \"5\", \"old\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"                .withEmail(\"alice@email.com\").withRole(\"Engineer\").withEmploymentType(\"Temporary\")","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"                .withExpectedSalary(\"4000\").withLevelOfEducation(\"PhD\").withExperience(\"5\").build()));","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"BryannYeap":79}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        // invalid tags","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Tag.isValidTagName(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Tag.isValidTagName(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Tag.isValidTagName(\"class 4h\")); // contains spaces","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Tag.isValidTagName(\"old@\")); // contains non-alphanumeric","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Tag.isValidTagName(\"old(70)\")); // brackets","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(Tag.isValidTagName(\"!@#$%^\u0026*()_+\")); // only non-alphanumeric","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        // valid tags","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(Tag.isValidTagName(\"old\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(Tag.isValidTagName(\"87773411\")); // numbers only","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(Tag.isValidTagName(\"cap5\")); // alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(Tag.isValidTagName(\"CAP5\")); // contains capital letters","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(Tag.isValidTagName(\"DoubleDegreeGraduateWithFirstClassHonoursAndPresidentOfCCA\")); // long tag","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":26,"BryannYeap":17}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"    private static final String INVALID_ROLE \u003d \"Softw@re Eng1n33r\";","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"    private static final String INVALID_EMPLOYMENT_TYPE \u003d \"temp\";","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    private static final String INVALID_EXPECTED_SALARY \u003d \"-1200\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String INVALID_LEVEL_OF_EDUCATION \u003d \"Kindergarten\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kaushikkrdy"},"content":"    private static final String INVALID_EXPERIENCE \u003d \"-1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"    private static final String INVALID_INTERVIEW \u003d \"March 21\";","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    private static final String VALID_ROLE \u003d BENSON.getRole().toString();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"    private static final String VALID_EMPLOYMENT_TYPE \u003d BENSON.getEmploymentType().toString();","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"    private static final String VALID_EXPECTED_SALARY \u003d BENSON.getExpectedSalary().toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String VALID_LEVEL_OF_EDUCATION \u003d BENSON.getLevelOfEducation().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"    private static final String VALID_EXPERIENCE \u003d BENSON.getExperience().toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Pulpy-y"},"content":"    private static final String VALID_INTERVIEW \u003d BENSON.getInterview().get().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String VALID_NOTES \u003d BENSON.getNotes().get().toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String VALID_DONE \u003d BENSON.getDone().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"                INVALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"TohWeiJie01"},"content":"                null, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"kaushikkrdy"},"content":"    public void toModelType_invalidEmploymentType_throwsIllegalValueException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, INVALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d EmploymentType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"kaushikkrdy"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"kaushikkrdy"},"content":"    public void toModelType_nullEmploymentType_throwsIllegalValueException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, null, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"kaushikkrdy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EmploymentType.class.getSimpleName());","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"kaushikkrdy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"    public void toModelType_invalidExpectedSalary_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, INVALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d ExpectedSalary.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"BryannYeap"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"BryannYeap"},"content":"    public void toModelType_nullExpectedSalary_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, null,","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ExpectedSalary.class.getSimpleName());","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"kaushikkrdy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":179,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"TohWeiJie01"},"content":"    public void toModelType_invalidLevelOfEducation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"TohWeiJie01"},"content":"                INVALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d LevelOfEducation.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"TohWeiJie01"},"content":"    public void toModelType_nullLevelOfEducation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"TohWeiJie01"},"content":"                null, VALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"TohWeiJie01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LevelOfEducation.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"twothicc"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":199,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"Pulpy-y"},"content":"    public void toModelType_invalidExperience_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, INVALID_EXPERIENCE, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"Pulpy-y"},"content":"        String expectedMessage \u003d Experience.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"Pulpy-y"},"content":"    public void toModelType_nullExperience_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, null, VALID_TAGS, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"Pulpy-y"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Experience.class.getSimpleName());","lastModifiedDate":"2021-10-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":224,"author":{"gitId":"TohWeiJie01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, invalidTags, VALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":231,"author":{"gitId":"Pulpy-y"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"Pulpy-y"},"content":"    public void toModelType_invalidInterview_throwsIllegalValueException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"Pulpy-y"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"Pulpy-y"},"content":"                VALID_ROLE, VALID_EMPLOYMENT_TYPE, VALID_EXPECTED_SALARY,","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_LEVEL_OF_EDUCATION, VALID_EXPERIENCE, VALID_TAGS, INVALID_INTERVIEW,","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"TohWeiJie01"},"content":"                VALID_NOTES, VALID_DONE);","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"Pulpy-y"},"content":"        String expectedMessage \u003d Interview.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Pulpy-y"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"Pulpy-y"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaushikkrdy":18,"TohWeiJie01":84,"twothicc":13,"Pulpy-y":23,"-":90,"BryannYeap":13}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaushikkrdy":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        descriptor.setRole(person.getRole());","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"        descriptor.setEmploymentType(person.getEmploymentType());","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        descriptor.setExpectedSalary(person.getExpectedSalary());","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.setLevelOfEducation(person.getLevelOfEducation());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kaushikkrdy"},"content":"        descriptor.setExperience(person.getExperience());","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"        descriptor.setInterview(person.getInterview());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.setNotes(person.getNotes());","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"     * Sets the {@code Role} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"    public EditPersonDescriptorBuilder withRole(String role) {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"kaushikkrdy"},"content":"     * Sets the {@code EmploymentType} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"kaushikkrdy"},"content":"    public EditPersonDescriptorBuilder withEmploymentType(String employmentType) {","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"kaushikkrdy"},"content":"        descriptor.setEmploymentType(new EmploymentType(employmentType));","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"        return this;","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"     * Sets the {@code ExpectedSalary} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"    public EditPersonDescriptorBuilder withExpectedSalary(String expectedSalary) {","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"        descriptor.setExpectedSalary(new ExpectedSalary(expectedSalary));","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code Level of Education} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"    public EditPersonDescriptorBuilder withLevelOfEducation(String levelOfEducation) {","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.setLevelOfEducation(new LevelOfEducation(levelOfEducation));","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"kaushikkrdy"},"content":"     * Sets the {@code Experience} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"Pulpy-y"},"content":"    public EditPersonDescriptorBuilder withExperience(String experience) {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"kaushikkrdy"},"content":"        descriptor.setExperience(new Experience(experience));","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"Pulpy-y"},"content":"     * Sets the {@code Interview} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"Pulpy-y"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"Pulpy-y"},"content":"    public EditPersonDescriptorBuilder withInterview(String interview) {","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"Pulpy-y"},"content":"        descriptor.setInterview(Optional.ofNullable(new Interview(interview)));","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code Notes} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"    public EditPersonDescriptorBuilder withNotes(String notes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.setNotes(Optional.ofNullable(new Notes(notes)));","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code Done} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"TohWeiJie01"},"content":"    public EditPersonDescriptorBuilder withDone(String done) {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.setDone(new Done(done));","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"TohWeiJie01"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kaushikkrdy":13,"TohWeiJie01":30,"twothicc":13,"Pulpy-y":9,"-":82,"BryannYeap":10}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"Pulpy-y"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"kaushikkrdy"},"content":"import seedu.address.model.person.EmploymentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import seedu.address.model.person.ExpectedSalary;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.person.Experience;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.person.LevelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"import seedu.address.model.person.Role;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"    public static final String DEFAULT_ROLE \u003d \"Software Engineer\";","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kaushikkrdy"},"content":"    public static final String DEFAULT_EMPLOYMENT_TYPE \u003d \"Full time\";","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    public static final String DEFAULT_EXPECTED_SALARY \u003d \"3200\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String DEFAULT_LEVEL_OF_EDUCATION \u003d \"PhD\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Pulpy-y"},"content":"    public static final String DEFAULT_EXPERIENCE \u003d \"0\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Pulpy-y"},"content":"    public static final String DEFAULT_INTERVIEW \u003d \"2021-10-21, 19:00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    public static final String DEFAULT_NOTES \u003d \"This applicant is a very good candidate for the job!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    private Role role;","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kaushikkrdy"},"content":"    private EmploymentType employmentType;","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"    private ExpectedSalary expectedSalary;","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    private LevelOfEducation levelOfEducation;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"    private Experience experience;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"Pulpy-y"},"content":"    private Optional\u003cInterview\u003e interview;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    private Optional\u003cNotes\u003e notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"    private Done done;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"        employmentType \u003d new EmploymentType(DEFAULT_EMPLOYMENT_TYPE);","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        expectedSalary \u003d new ExpectedSalary(DEFAULT_EXPECTED_SALARY);","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        levelOfEducation \u003d new LevelOfEducation(DEFAULT_LEVEL_OF_EDUCATION);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"kaushikkrdy"},"content":"        experience \u003d new Experience(DEFAULT_EXPERIENCE);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"        interview \u003d Optional.ofNullable(new Interview(DEFAULT_INTERVIEW));","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        notes \u003d Optional.ofNullable(new Notes(DEFAULT_NOTES));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        done \u003d new Done();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"        role \u003d personToCopy.getRole();","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"kaushikkrdy"},"content":"        employmentType \u003d personToCopy.getEmploymentType();","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        expectedSalary \u003d personToCopy.getExpectedSalary();","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"        levelOfEducation \u003d personToCopy.getLevelOfEducation();","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"kaushikkrdy"},"content":"        experience \u003d personToCopy.getExperience();","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"Pulpy-y"},"content":"        interview \u003d personToCopy.getInterview();","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"        notes \u003d personToCopy.getNotes();","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"        done \u003d personToCopy.getDone();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"     * Sets the {@code Role} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"    public PersonBuilder withRole(String role) {","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"kaushikkrdy"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"kaushikkrdy"},"content":"     * Sets the {@code EmploymentType} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"kaushikkrdy"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"kaushikkrdy"},"content":"    public PersonBuilder withEmploymentType(String employmentType) {","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"kaushikkrdy"},"content":"        this.employmentType \u003d new EmploymentType(employmentType);","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"kaushikkrdy"},"content":"        return this;","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"kaushikkrdy"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"Pulpy-y"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code ExpectedSalary} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"BryannYeap"},"content":"    public PersonBuilder withExpectedSalary(String expectedSalary) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"BryannYeap"},"content":"        this.expectedSalary \u003d new ExpectedSalary(expectedSalary);","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"BryannYeap"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code Level of Education} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"    public PersonBuilder withLevelOfEducation(String levelOfEducation) {","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"        this.levelOfEducation \u003d new LevelOfEducation(levelOfEducation);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"kaushikkrdy"},"content":"     * Sets the {@code Experience} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"Pulpy-y"},"content":"    public PersonBuilder withExperience(String experience) {","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"        this.experience \u003d new Experience(experience);","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"twothicc"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"Pulpy-y"},"content":"     * Sets the {@code Interview} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"Pulpy-y"},"content":"    public PersonBuilder withInterview(String interview) {","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"Pulpy-y"},"content":"        this.interview \u003d Optional.ofNullable(new Interview(interview));","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code Notes} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"    public PersonBuilder withNotes(String notes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"        this.notes \u003d Optional.ofNullable(new Notes(notes));","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"TohWeiJie01"},"content":"     * Sets the {@code Done} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"TohWeiJie01"},"content":"    public PersonBuilder withDone(String done) {","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"TohWeiJie01"},"content":"        this.done \u003d new Done(done);","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"TohWeiJie01"},"content":"     * Builds a {@code Person} with the given information.","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":187,"author":{"gitId":"TohWeiJie01"},"content":"        return new Person(name, phone, email, role, employmentType,","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"TohWeiJie01"},"content":"                expectedSalary, levelOfEducation, experience, tags, interview, notes, done);","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kaushikkrdy":18,"TohWeiJie01":34,"twothicc":18,"Pulpy-y":13,"-":97,"BryannYeap":11}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPLOYMENT_TYPE;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPECTED_SALARY;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPERIENCE;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LEVEL_OF_EDUCATION;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"Pulpy-y"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.notes.Notes;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"        sb.append(PREFIX_ROLE + person.getRole().role + \" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"kaushikkrdy"},"content":"        sb.append(PREFIX_EMPLOYMENT_TYPE + person.getEmploymentType().employmentType + \" \");","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        sb.append(PREFIX_EXPECTED_SALARY + person.getExpectedSalary().value + \" \");","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        sb.append(PREFIX_LEVEL_OF_EDUCATION + person.getLevelOfEducation().levelOfEducation + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Pulpy-y"},"content":"        sb.append(PREFIX_EXPERIENCE + person.getExperience().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"Pulpy-y"},"content":"        sb.append(PREFIX_INTERVIEW + person.getInterview().orElse(Interview.EMPTY_INTERVIEW).parseTime + \" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        sb.append(PREFIX_NOTES + person.getNotes().orElse(new Notes(\"\")).information + \" \");","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(PREFIX_ROLE).append(role.role).append(\" \"));","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"kaushikkrdy"},"content":"        descriptor.getEmploymentType()","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"                .ifPresent(employmentType -\u003e sb.append(PREFIX_EMPLOYMENT_TYPE)","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"                        .append(employmentType.employmentType).append(\" \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        descriptor.getExpectedSalary()","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"                .ifPresent(expectedSalary -\u003e sb.append(PREFIX_EXPECTED_SALARY).append(expectedSalary.value)","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"                        .append(\" \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.getLevelOfEducation()","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"                .ifPresent(levelOfEducation -\u003e sb.append(PREFIX_LEVEL_OF_EDUCATION)","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"                        .append(levelOfEducation.levelOfEducation).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Pulpy-y"},"content":"        descriptor.getExperience().ifPresent(experience -\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"Pulpy-y"},"content":"                sb.append(PREFIX_EXPERIENCE).append(experience.value).append(\" \"));","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"Pulpy-y"},"content":"        descriptor.getInterview().ifPresent(interview -\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Pulpy-y"},"content":"                sb.append(PREFIX_INTERVIEW).append(interview.orElse(Interview.EMPTY_INTERVIEW).parseTime).append(\" \"));","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"        descriptor.getNotes().ifPresent(notes -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"                sb.append(PREFIX_NOTES).append(notes.orElse(Notes.EMPTY_NOTES).information).append(\" \"));","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kaushikkrdy":5,"TohWeiJie01":10,"twothicc":3,"Pulpy-y":11,"-":59,"BryannYeap":5}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DONE_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DONE_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENT_TYPE_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kaushikkrdy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMPLOYMENT_TYPE_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_SALARY_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPECTED_SALARY_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXPERIENCE_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_AMY;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Pulpy-y"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LEVEL_OF_EDUCATION_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LEVEL_OF_EDUCATION_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTES_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTES_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"import seedu.address.model.done.Done;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"Pulpy-y"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"            .withRole(\"Preschool Teacher\")","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Full time\")","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"2500\")","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"PhD\")","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Pulpy-y"},"content":"            .withExperience(\"0\")","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"            .withInterview(\"2022-10-22, 10:00\")","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"She is very passionate about this field.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Doctor\")","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Part time\")","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"2700\")","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"Masters\")","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Pulpy-y"},"content":"            .withExperience(\"1\")","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"2021-10-22, 10:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"He does not seem like he would fit the job based off his resume.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Electrical Engineer\")","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Temporary\")","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"5500\")","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"Elementary\")","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"            .withExperience(\"2\")","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"He has past leadership skills, but do not have proper experience in this field.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Sales Assistant\")","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Internship\")","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"3500\")","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"Middle School\")","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Pulpy-y"},"content":"            .withExperience(\"3\")","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"He is a perfect candidate for this job!\")","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Toilet Cleaner\")","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Full time\")","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"5700\")","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"Bachelors\")","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"            .withExperience(\"4\")","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"            .withTags(\"old\")","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"Nothing outstanding about this applicant compared to the rest of the applicants.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"NTUC Cashier\")","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Part time\")","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"1900\")","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"High School\")","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"            .withExperience(\"5\")","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"She has prior experience but in other countries.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Waiter\")","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Internship\")","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"900\")","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"University\")","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"            .withExperience(\"6\")","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"Might be worth taking more time to interview this person\")","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":131,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Software Engineer\")","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Part time\")","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"3300\")","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"PhD\")","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"            .withExperience(\"7\")","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"Good choice for this job, has the qualities the company is looking for.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(\"Software Tester\")","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(\"Full time\")","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(\"7100\")","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(\"Masters\")","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"TohWeiJie01"},"content":"            .withExperience(\"8\")","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(\"\")","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(\"Experienced, reliable and very very passionate.\")","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(Done.STATUS_UNDONE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":156,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(VALID_ROLE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(VALID_EMPLOYMENT_TYPE_AMY)","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(VALID_EXPECTED_SALARY_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"kaushikkrdy"},"content":"            .withExperience(VALID_EXPERIENCE_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"Pulpy-y"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(VALID_INTERVIEW_AMY)","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(VALID_NOTES_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(VALID_DONE_AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"kaushikkrdy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"kaushikkrdy"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"kaushikkrdy"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"kaushikkrdy"},"content":"            .withRole(VALID_ROLE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"kaushikkrdy"},"content":"            .withEmploymentType(VALID_EMPLOYMENT_TYPE_BOB)","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"kaushikkrdy"},"content":"            .withExpectedSalary(VALID_EXPECTED_SALARY_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"            .withLevelOfEducation(VALID_LEVEL_OF_EDUCATION_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"kaushikkrdy"},"content":"            .withExperience(VALID_EXPERIENCE_BOB)","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"kaushikkrdy"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"Pulpy-y"},"content":"            .withInterview(VALID_INTERVIEW_BOB)","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"TohWeiJie01"},"content":"            .withNotes(VALID_NOTES_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"TohWeiJie01"},"content":"            .withDone(VALID_DONE_BOB).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kaushikkrdy":73,"TohWeiJie01":51,"twothicc":3,"Pulpy-y":19,"-":50,"BryannYeap":4}}]
