[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"# SalesNote","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W08-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W08-3/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"**SalesNote** helps Singapore-based tailors to manage local sales and clients, so that they can focus on producing great work. ","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"For example, this product could help them to remember the dimensions and orders of their clients. ","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"### Example usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"* keeps track of all clients\u0027 details","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"* adds a client to the SalesNote","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"* deletes a client from the SalesNote","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"* keeps track of all sales orders\u0027 details","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"* adds and deletes sales orders","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"* mark the sales orders as done","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"### Project pages site","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"The project pages site can be accessed **[here](https://ay2122s1-cs2103t-w08-3.github.io/tp/)**.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"### Acknowledgement","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"This project is based on the AddressBook-Level3 project created by the **[SE-EDU initiative](https://se-education.org)**.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngchisern":20,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"You can reach us at the team lead (Shawn)\u0027s email `e0311246@u.nus.edu` \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"Here is our module coordinator\u0027s [homepage](https://www.comp.nus.edu.sg/~damithch/).","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"### Shawn Lim","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"\u003cimg src\u003d\"images/lwlshawn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"[[github](https://github.com/lwlshawn)]","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"* Responsibilities: Documentation, Integration","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"### Ng Chi Sern","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"\u003cimg src\u003d\"images/ngchisern.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"[[github](https://github.com/ngchisern)]","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"[[portfolio](team/ngchisern.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"* Role: Developer","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"yuifuku1118"},"content":"### Yuichiro Fukushima","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"yuifuku1118"},"content":"\u003cimg src\u003d\"images/Yuichiro.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yuifuku1118"},"content":"[[github](https://github.com/yuifuku1118)] [[portfolio](team/yuichiro.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yuifuku1118"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"GnohChengYi"},"content":"### Gnoh Cheng Yi","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"GnohChengYi"},"content":"\u003cimg src\u003d\"images/gnohchengyi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"GnohChengYi"},"content":"[[github](http://github.com/gnohchengyi)] [[portfolio](team/gnohchengyi.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"GnohChengYi"},"content":"* Responsibilities: Code Quality + JavaFX Expert","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Tanishq4331"},"content":"### Tanishq Sharma","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Tanishq4331"},"content":"\u003cimg src\u003d\"images/tanishq4331.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Tanishq4331"},"content":"[[github](https://github.com/Tanishq4331)]","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"Tanishq4331"},"content":"[[portfolio](team/tanishq.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Tanishq4331"},"content":"* Role: Testing","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"Tanishq4331"},"content":"* Responsibilities: ","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"yuifuku1118":4,"GnohChengYi":4,"ngchisern":8,"lwlshawn":5,"Tanishq4331":6,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/SalesNote-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/SalesNote-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"Tanishq4331"},"content":"1. When `Logic` is called upon to execute a command, it uses the `SalesNoteParser` class to parse the user command.","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"Tanishq4331"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"Tanishq4331"},"content":"* When called upon to parse a user command, the `SalesNoteParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `SalesNoteParser` returns back as a `Command` object.","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"lwlshawn"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `SalesNote`, which `Person` references. This allows `SalesNote` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"lwlshawn"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"Tanishq4331"},"content":"* inherits from both `SalesNoteStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"lwlshawn"},"content":"Classes used by multiple components are in the `seedu.salesnote.commons` package.","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"lwlshawn"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedSalesNote`. It extends `SalesNote` with an undo/redo history, stored internally as an `salesNoteStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"Tanishq4331"},"content":"* `VersionedSalesNote#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"Tanishq4331"},"content":"* `VersionedSalesNote#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"Tanishq4331"},"content":"* `VersionedSalesNote#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Tanishq4331"},"content":"These operations are exposed in the `Model` interface as `Model#commitSalesNote()`, `Model#undoSalesNote()` and `Model#redoSalesNote()` respectively.","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Tanishq4331"},"content":"Step 1. The user launches the application for the first time. The `VersionedSalesNote` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Tanishq4331"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command calls `Model#commitSalesNote()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `SalesNoteStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Tanishq4331"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `Model#commitSalesNote()`, causing another modified address book state to be saved into the `SalesNoteStateList`.","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitSalesNote()`, so the address book state will not be saved into the `SalesNoteStateList`.","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Tanishq4331"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoSalesNote()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial SalesNote state, then there are no previous SalesNote states to restore. The `undo` command uses `Model#canUndoSalesNote()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Tanishq4331"},"content":"The `redo` command does the opposite — it calls `Model#redoSalesNote()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `SalesNoteStateList.size() - 1`, pointing to the latest address book state, then there are no undone SalesNote states to restore. The `redo` command uses `Model#canRedoSalesNote()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Tanishq4331"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitSalesNote()`, `Model#undoSalesNote()` or `Model#redoSalesNote()`. Thus, the `SalesNoteStateList` remains unchanged.","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Tanishq4331"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSalesNote()`. Since the `currentStatePointer` is not pointing at the end of the `SalesNoteStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"Tanishq4331"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2021-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | add a deadline to a sales order                            | I can keep track of when I must complete it by  |","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | keep track of the contact details of my clients            |it is easier to find their contact details      |","lastModifiedDate":"2021-09-24"},{"lineNumber":277,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | maintain the preferences and body dimensions of my clients | I can cater to their requirements |","lastModifiedDate":"2021-09-24"},{"lineNumber":278,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | mark tasks as done                                         |        |","lastModifiedDate":"2021-09-24"},{"lineNumber":279,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | key customer orders into the application                   | I know what I need to complete   |","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | delete a task                                              | get rid of task no longer needed to track       |","lastModifiedDate":"2021-09-24"},{"lineNumber":281,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | know the valid commands when I key in the wrong command    | to help me remember what I should do     |","lastModifiedDate":"2021-09-24"},{"lineNumber":282,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | new user                                   | categorise my customers, to group them by categories relevant to me     | I can find the group of customers that I want easily   |","lastModifiedDate":"2021-09-24"},{"lineNumber":283,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | non-tech-savvy user                        | add users in a simple and straightforward way              | I can get up to speed easily   |","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | easily update contact details as these are likely to change over time.  | I can get up to speed easily   |","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | forgetful user                             | have reminders about deadlines                             | I am on track with my work   |","lastModifiedDate":"2021-09-24"},{"lineNumber":286,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | know how much in total sales each of my customers has brought in for me  |      |","lastModifiedDate":"2021-09-24"},{"lineNumber":287,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | track how much money I’m making each month                 | I can plan my budget accordingly    |","lastModifiedDate":"2021-09-24"},{"lineNumber":288,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | experienced user                           | clear past entries                                         | the application is less cluttered   |","lastModifiedDate":"2021-09-24"},{"lineNumber":289,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | sort my deadlines by date                                  | I can keep track of which are the most urgent.   |","lastModifiedDate":"2021-09-24"},{"lineNumber":290,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | add notes to tasks                                         | I can add details about special requests or notes for myself, for tasks that might be more difficult and/or take up more time  |","lastModifiedDate":"2021-09-24"},{"lineNumber":291,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | update the requirements of my clients as their needs and preferences change | I am aware of their latest preference |","lastModifiedDate":"2021-09-24"},{"lineNumber":292,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | new user                                   | have a tutorial to guide my on how to use the product      | I can get myself started   |","lastModifiedDate":"2021-09-24"},{"lineNumber":293,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user with poor eyesight                    | the text in the interface to be easily readable            |    |","lastModifiedDate":"2021-09-24"},{"lineNumber":294,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | experienced user                           | the application to be fast and easy                        |    |","lastModifiedDate":"2021-09-24"},{"lineNumber":295,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | keep track of the sales                                    | I don’t have to remember them   |","lastModifiedDate":"2021-09-24"},{"lineNumber":296,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | keep track of outstanding payments                         |    |","lastModifiedDate":"2021-09-24"},{"lineNumber":297,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | know the breakdown of my sales each month                  | to understand better which of my products are more popular   |","lastModifiedDate":"2021-09-24"},{"lineNumber":298,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | backup/undo my actions                                     | I can recover my lost data easily    |","lastModifiedDate":"2021-09-24"},{"lineNumber":299,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | experienced user                           | sort my clients by how much in sales they have brought in for me | I can focus more on clients that brings me more profit   |","lastModifiedDate":"2021-09-24"},{"lineNumber":300,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | skilled user                               | define my own shortcuts for commands                       |       |","lastModifiedDate":"2021-09-24"},{"lineNumber":301,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user who is picky about UI                 | redesign aspects of the application.                       |       |","lastModifiedDate":"2021-09-24"},{"lineNumber":302,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | know how much I spent on materials                         | I don’t exceed my budget      |","lastModifiedDate":"2021-09-24"},{"lineNumber":303,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | secure my data/information                 | secure my data/information                                 |     |","lastModifiedDate":"2021-09-24"},{"lineNumber":304,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | experienced user                           | use the app to track my material usage                     | I know when to order more in advance   |","lastModifiedDate":"2021-09-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Tanishq4331"},"content":"(For all use cases below, the **System** is the `SalesNote` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Add a client**","lastModifiedDate":"2021-09-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"Tanishq4331"},"content":"1. User requests to add a specific client to the list","lastModifiedDate":"2021-09-21"},{"lineNumber":316,"author":{"gitId":"Tanishq4331"},"content":"2. SalesNote adds the client","lastModifiedDate":"2021-09-21"},{"lineNumber":317,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":318,"author":{"gitId":"Tanishq4331"},"content":"    Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":319,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":320,"author":{"gitId":"Tanishq4331"},"content":"**Extensions**","lastModifiedDate":"2021-09-21"},{"lineNumber":321,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":322,"author":{"gitId":"Tanishq4331"},"content":"* 1a. The format of the request is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":323,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":324,"author":{"gitId":"Tanishq4331"},"content":"    * 1a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":325,"author":{"gitId":"Tanishq4331"},"content":"    ","lastModifiedDate":"2021-09-21"},{"lineNumber":326,"author":{"gitId":"Tanishq4331"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":327,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":328,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":329,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Delete a client**","lastModifiedDate":"2021-09-21"},{"lineNumber":330,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":331,"author":{"gitId":"Tanishq4331"},"content":"**MSS**","lastModifiedDate":"2021-09-21"},{"lineNumber":332,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":333,"author":{"gitId":"Tanishq4331"},"content":"1.  User requests to list clients","lastModifiedDate":"2021-09-21"},{"lineNumber":334,"author":{"gitId":"Tanishq4331"},"content":"2.  SalesNote shows a list of clients","lastModifiedDate":"2021-09-21"},{"lineNumber":335,"author":{"gitId":"Tanishq4331"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2021-09-21"},{"lineNumber":336,"author":{"gitId":"Tanishq4331"},"content":"4.  SalesNote deletes the client","lastModifiedDate":"2021-09-21"},{"lineNumber":337,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":338,"author":{"gitId":"Tanishq4331"},"content":"    Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":339,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":340,"author":{"gitId":"Tanishq4331"},"content":"**Extensions**","lastModifiedDate":"2021-09-21"},{"lineNumber":341,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":342,"author":{"gitId":"Tanishq4331"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":343,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":344,"author":{"gitId":"Tanishq4331"},"content":"  Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":345,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":346,"author":{"gitId":"Tanishq4331"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":347,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":348,"author":{"gitId":"Tanishq4331"},"content":"    * 3a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":349,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":350,"author":{"gitId":"Tanishq4331"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-21"},{"lineNumber":351,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":352,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":353,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Add a task**","lastModifiedDate":"2021-09-21"},{"lineNumber":354,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":355,"author":{"gitId":"Tanishq4331"},"content":"**MSS**","lastModifiedDate":"2021-09-21"},{"lineNumber":356,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":357,"author":{"gitId":"Tanishq4331"},"content":"1. User requests to add a specific task to the list","lastModifiedDate":"2021-09-21"},{"lineNumber":358,"author":{"gitId":"Tanishq4331"},"content":"2. SalesNote adds the task","lastModifiedDate":"2021-09-21"},{"lineNumber":359,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":360,"author":{"gitId":"Tanishq4331"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":361,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":362,"author":{"gitId":"Tanishq4331"},"content":"**Extensions**","lastModifiedDate":"2021-09-21"},{"lineNumber":363,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":364,"author":{"gitId":"Tanishq4331"},"content":"* 1a. The format of the request is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":365,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":366,"author":{"gitId":"Tanishq4331"},"content":"    * 1a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":367,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":368,"author":{"gitId":"Tanishq4331"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":369,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":371,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Delete a task**","lastModifiedDate":"2021-09-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-21"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":375,"author":{"gitId":"Tanishq4331"},"content":"1.  User requests to list tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":376,"author":{"gitId":"Tanishq4331"},"content":"2.  SalesNote shows a list of tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":377,"author":{"gitId":"Tanishq4331"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2021-09-21"},{"lineNumber":378,"author":{"gitId":"Tanishq4331"},"content":"4.  SalesNote deletes the task","lastModifiedDate":"2021-09-21"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"Tanishq4331"},"content":"    * 3a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"Tanishq4331"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-21"},{"lineNumber":400,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"Tanishq4331"},"content":"4. Currency amounts, dates, and times should follow Singapore standards.","lastModifiedDate":"2021-09-21"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"Tanishq4331"},"content":"### Deleting a client","lastModifiedDate":"2021-09-21"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"Tanishq4331"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2021-09-21"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"Tanishq4331"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"Tanishq4331"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-09-21"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yuifuku1118":30,"lwlshawn":9,"Tanishq4331":89,"-":333}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"SalesNote is a **desktop app for managing contacts and tasks, optimized for use via a Command Line Interface** (CLI) ","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"while still having the benefits of a Graphical User Interface (GUI). Fast typists can get more out of the application ","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"than from traditional GUI apps. The application and guide are based on AB3 with new added features.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"This project is based on the AB3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"Adds a person to the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS m/MEASUREMENT g/GENDER [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"A person can have any number of tags (including 0). The remark is also optional.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street Blk 92 g/M m/170_100_40`","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"* `add n/Betsy Crowe e/bcrowe@example.com a/Sesame Street p/1234567 t/important g/F d/160_85_35_81`","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"Shows a list of all persons in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"Edits an existing person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"Deletes the specified person from the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"lwlshawn"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"Clears all entries from the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"lwlshawn"},"content":"SalesNote data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":139,"author":{"gitId":"lwlshawn"},"content":"SalesNote data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":142,"author":{"gitId":"lwlshawn"},"content":"If your changes to the data file makes its format invalid, SalesNote will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":145,"author":{"gitId":"lwlshawn"},"content":"### Listing all tasks: `listtask`","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"lwlshawn"},"content":"Shows a list of all tasks in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"lwlshawn"},"content":"### Adding a task: `addtask`","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"lwlshawn"},"content":"Adds a task to the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"lwlshawn"},"content":"Format: `addtask l/LABEL d/DATE`","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"lwlshawn"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"lwlshawn"},"content":"* `addtask l/sew buttons onto blazer d/20th August 2021`","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"lwlshawn"},"content":"### Deleting a task : `deletetask`","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"lwlshawn"},"content":"Deletes the specified task from the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"lwlshawn"},"content":"Format: `deletetask INDEX`","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"lwlshawn"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"lwlshawn"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"lwlshawn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"lwlshawn"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"lwlshawn"},"content":"* `listtask` followed by `deletetask 2` deletes the 2nd person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"lwlshawn"},"content":"### Mark a task as done: `markdone`","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"lwlshawn"},"content":"Marks a specified task from the application as complete.","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"lwlshawn"},"content":"Format: `deletetask INDEX`","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"lwlshawn"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"lwlshawn"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"lwlshawn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"lwlshawn"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"lwlshawn"},"content":"* `listtask` followed by `deletetask 2` deletes the 2nd person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"lwlshawn"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SalesNote home folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"lwlshawn"},"content":"**ListTask** | `listtask`","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"lwlshawn"},"content":"**AddTask** | `addtask l/LABEL d/DATE` e.g. `addtask l/sew buttons onto blazer d/20th August 2021`","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"lwlshawn"},"content":"**DeleteTask** | `deletetask INDEX` e.g. `deletetask 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"lwlshawn"},"content":"**MarkDone** | `markdone INDEX` e.g. `markdone 2`","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":61,"-":147}},{"path":"docs/team/gnohchengyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GnohChengYi"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"GnohChengYi"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"GnohChengYi"},"content":"title: Gnoh Cheng Yi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"GnohChengYi"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"GnohChengYi"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"GnohChengYi"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"GnohChengYi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"GnohChengYi"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"GnohChengYi"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"GnohChengYi"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"GnohChengYi"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"GnohChengYi"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"GnohChengYi"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"GnohChengYi"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"GnohChengYi"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"GnohChengYi"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"GnohChengYi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"GnohChengYi"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"GnohChengYi"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"GnohChengYi"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"GnohChengYi"},"content":"  * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"GnohChengYi"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"GnohChengYi"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"GnohChengYi"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"GnohChengYi"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"GnohChengYi"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"GnohChengYi"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"GnohChengYi"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"GnohChengYi"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"GnohChengYi"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"GnohChengYi"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"GnohChengYi"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"GnohChengYi"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"GnohChengYi"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"GnohChengYi":46}},{"path":"docs/team/ngchisern.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"title: Chi Sern\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"* **Project management**:","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"    * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"* **Community**:","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"* **Tools**:","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"ngchisern":46}},{"path":"docs/team/tanishq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tanishq4331"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"Tanishq4331"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"Tanishq4331"},"content":"title: Tanishq\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"Tanishq4331"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"Tanishq4331"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"Tanishq4331"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"Tanishq4331"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"Tanishq4331"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Tanishq4331"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"Tanishq4331"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"Tanishq4331"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"Tanishq4331"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"Tanishq4331"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"Tanishq4331"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"Tanishq4331"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"Tanishq4331"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"Tanishq4331"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"Tanishq4331"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"Tanishq4331"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"Tanishq4331"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"Tanishq4331"},"content":"    * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"Tanishq4331"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"Tanishq4331"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"Tanishq4331"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"Tanishq4331"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"Tanishq4331"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"Tanishq4331"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"Tanishq4331"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"Tanishq4331"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"Tanishq4331"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"Tanishq4331"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"Tanishq4331"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"Tanishq4331"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"Tanishq4331"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"Tanishq4331":46}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lwlshawn":1,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the application. \"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_LABEL + \"LABEL \"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_DATE + \"DATE\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_LABEL + \"Sew buttons onto black blazer \"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_DATE + \"20th August 2021\";","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof AddTaskCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" * Deletes a task identified using its displayed index from the address book.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":53}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" * Lists all tasks in the application to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"listtask\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":24}},{"path":"src/main/java/seedu/address/logic/commands/MarkDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" * Marks a task as complete, with the task identified using its displayed index from the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"markdone\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            + \": Marks a task identified by the index number used in the displayed task list as complete.\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public MarkDoneCommand(Index targetIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        model.markDone(taskToMark);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, taskToMark));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof MarkDoneCommand // instanceof handles nulls","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 targetIndex.equals(((MarkDoneCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":53}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LABEL, PREFIX_DATE);","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        //checks that preamble has only spaces, and none of the prefix values are empty","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        //important for the argmultimap.getvalue().get() calls below","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LABEL, PREFIX_DATE)","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"        //very basic validation; only prevents empty strings right now","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        Label label \u003d ParserUtil.parseLabel(argMultimap.getValue(PREFIX_LABEL).get());","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        Task task \u003d new Task(label, date);","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    //Reused from AddCommandParser - consider refactoring in future.","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"        case MarkDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"            return new MarkDoneCommandParser().parse(arguments);","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lwlshawn":16,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    public static final Prefix PREFIX_LABEL \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lwlshawn":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":29}},{"path":"src/main/java/seedu/address/logic/parser/MarkDoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommandParser implements Parser\u003cMarkDoneCommand\u003e {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public MarkDoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            return new MarkDoneCommand(index);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"lwlshawn"},"content":"     * Simple check that validates label is not empty string after trimming.","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"lwlshawn"},"content":"     * @return","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"lwlshawn"},"content":"    public static Label parseLabel(String label) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(label);","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"lwlshawn"},"content":"        String trimmedLabel \u003d label.trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"lwlshawn"},"content":"        if (!Label.isValidLabel(trimmedLabel)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"lwlshawn"},"content":"        return new Label(trimmedLabel);","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"lwlshawn"},"content":"     * Simple check that validates date is not empty string after trimming.","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"lwlshawn"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"lwlshawn"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"lwlshawn"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"lwlshawn"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lwlshawn":27,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK FUNCTIONALITIES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"     * Adds the given task.","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"    /** Returns and unmodifiable view of the filtered task list */","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"    //added prior to the ui functionality actually being implemented.","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"    void deleteTask(Task toDelete);","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"    void markDone(Task task);","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lwlshawn":18,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.tasks.asUnmodifiableObservableList());","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"lwlshawn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"    public void addTask(Task toAdd) {","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"lwlshawn"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"lwlshawn"},"content":"    public void deleteTask(Task toDelete) {","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"lwlshawn"},"content":"        tasks.remove(toDelete);","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"lwlshawn"},"content":"        return filteredTasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"lwlshawn"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"lwlshawn"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"lwlshawn"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"lwlshawn"},"content":"        tasks.markDone(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lwlshawn":31,"-":151}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lwlshawn":1,"-":87}},{"path":"src/main/java/seedu/address/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class Date {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"            \"Date should be non-empty\"; //temporary solution","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    public final String parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     * Constructs a {@code Date}","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * @param date A valid date for a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    public Date(String date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        parsedDate \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"        return !date.equals(\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        return parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof Date","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 parsedDate.equals(((Date) other).parsedDate));","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        return parsedDate.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":43}},{"path":"src/main/java/seedu/address/model/task/Label.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" * Represents a Task\u0027s label in the application","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" * Guarantee: The label is a non-empty string.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class Label {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"            \"Label should be non-empty\"; //temporary solution","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    public final String checkedLabel;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * Constructs a {@code Label}.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     * @param label A valid label for a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    public Label(String label) {","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(label);","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        checkArgument(isValidLabel(label), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"        checkedLabel \u003d label;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"     * @param label Label to be checked","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    public static boolean isValidLabel(String label) {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"        return !label.equals(\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        return checkedLabel;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof Label","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 checkedLabel.equals(((Label) other).checkedLabel));","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"        return checkedLabel.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":52}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":" * Basic Task class for v1.2 implementation","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class Task {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"    protected Label label;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"    protected Date date;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"     * Basic constructor, creates a task with the given label.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     * @param label Label the task is created with. Not allowed to be empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    public Task(Label label, Date date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     * Method used to mark the task as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     * @param isDone indicates whether the task is marked as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"     * Getter for boolean isDone.","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"     * @return the isDone of the Task.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        return isDone;","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"     * Getter for label.","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"     * @return the label of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    public Label getLabel() {","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        return label;","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"     * Setter for label.","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"     * @param label The new label of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"    public void setLabel(Label label) {","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"     * Getter for date. Not applicable for Todo tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"     * @return A String representing the date associated with the Task.","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    public Date getDate() {","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"        return date;","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"     * Setter for date. Not applicable for Todo tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"     * Override of toString to provide a user-friendly String representation of Task objects.","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"     * @return A string representing the Task meant to be printed for the user.","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"            return \"[X] \" + label + \", due: \" + date;","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"            return \"[ ] \" + label + \", due: \" + date;","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"            return true;","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"            return false;","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"        return otherTask.getLabel().equals(getLabel())","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 otherTask.getDate().equals(getDate());","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":102}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":" * A list of tasks supporting minimal list operations. Implementation mirrors UniquePersonList to hopefully make ui","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * implementation more straightforward.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"     * Removes a task from the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    public void markDone(Task toMark) {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        if (!internalList.contains(toMark)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        int index \u003d internalList.indexOf(toMark);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        internalList.get(index).setIsDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof TaskList","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":71}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class TaskNotFoundException extends RuntimeException { }","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":6}},{"path":"src/test/java/seedu/address/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":" * A default model stub that has all of the methods failing. Classed out for tests to reuse","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"    public void deleteTask(Task toDelete) {","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":112}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"lwlshawn":1,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"class AddTaskCommandTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public void constructor_nullLabel_throwsNullPointerException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        Task validTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"     * A model stub for testing adding single task","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        private final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":47}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"class DeleteTaskCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    private static final Task testTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    //I followed the style of AddCommand test instead of DeleteCommand test since I thought using a modelStub","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    //was more stylistically appropriate for testing.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    public void execute_validIndexDeletion_success() throws Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        CommandResult commandResult \u003d new DeleteTaskCommand(targetIndex).execute(modelStub);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, testTask),","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(Arrays.asList(), modelStub.listWithOneTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, (","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        ) -\u003e deleteTaskCommand.execute(modelStub));","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    private class ModelStubWithOnePerson extends ModelStub {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        private final ObservableList\u003cTask\u003e listWithOneTask \u003d FXCollections.observableArrayList(testTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"            listWithOneTask.remove(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"            return listWithOneTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    //pending more tests for filtered list(?)","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":67}},{"path":"src/test/java/seedu/address/logic/commands/MarkDoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"class MarkDoneCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    private static final Task testTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    //I followed the style of AddCommand test instead of DeleteCommand test since I thought using a modelStub","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    //was more stylistically appropriate for testing.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    public void execute_validIndexMarkDone_success() throws Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        Task secondTestTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        secondTestTask.setIsDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        CommandResult commandResult \u003d new MarkDoneCommand(targetIndex).execute(modelStub);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(String.format(MarkDoneCommand.MESSAGE_MARK_TASK_SUCCESS, testTask),","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(Arrays.asList(secondTestTask), modelStub.listWithOneTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, (","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        ) -\u003e deleteTaskCommand.execute(modelStub));","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    private class ModelStubWithOnePerson extends ModelStub {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        private final ObservableList\u003cTask\u003e listWithOneTask \u003d FXCollections.observableArrayList(testTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        public void markDone(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"            listWithOneTask.get(0).setIsDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"            return listWithOneTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":64}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"class AddTaskCommandParserTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public void parse_allFieldsPresent_success() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        Task expectedTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        //basic test command","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        assertParseSuccess(parser, \" l/test label d/test date\", new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        //right now, only validation check is that both fields are not empty after trimming spaces","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        //missing label prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" d/test date\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" test label d/test date\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        //missing date prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/test label\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/test label test date\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        //empty label","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/ d/date\", Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        //empty date after spaces are trimmed","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/label d/ \", Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":47}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * Mirrors DeleteCommandParserTest","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":27}},{"path":"src/test/java/seedu/address/logic/parser/MarkDoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * Mirrors DeleteCommandParserTest","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommandParserTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private MarkDoneCommandParser parser \u003d new MarkDoneCommandParser();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        assertParseSuccess(parser, \"1\", new MarkDoneCommand(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":27}}]
