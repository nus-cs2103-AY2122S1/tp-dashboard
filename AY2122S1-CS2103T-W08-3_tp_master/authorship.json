[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"# SalesNote","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W08-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W08-3/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"**SalesNote** helps Singapore-based tailors to manage local sales and clients, so that they can focus on producing great work. ","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"For example, this product could help them to remember the dimensions and orders of their clients. ","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"### Example usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"* keeps track of all clients\u0027 details","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"* adds a client to the SalesNote","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"* deletes a client from the SalesNote","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"* keeps track of all sales orders\u0027 details","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"* adds and deletes sales orders","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"* mark the sales orders as done","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"### Project pages site","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"The project pages site can be accessed **[here](https://ay2122s1-cs2103t-w08-3.github.io/tp/)**.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"### Acknowledgement","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"This project is based on the AddressBook-Level3 project created by the **[SE-EDU initiative](https://se-education.org)**.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngchisern":20,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"You can reach us at the team lead (Shawn)\u0027s email `e0311246@u.nus.edu` \u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"Here is our module coordinator\u0027s [homepage](https://www.comp.nus.edu.sg/~damithch/).","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"### Shawn Lim","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"\u003cimg src\u003d\"images/lwlshawn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"[[github](https://github.com/lwlshawn)]","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"* Responsibilities: Documentation, Integration","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"### Ng Chi Sern","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"\u003cimg src\u003d\"images/ngchisern.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"[[github](https://github.com/ngchisern)]","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"[[portfolio](team/ngchisern.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"* Role: Developer","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"yuifuku1118"},"content":"### Yuichiro Fukushima","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"\u003cimg src\u003d\"images/yuifuku1118.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"yuifuku1118"},"content":"[[github](https://github.com/yuifuku1118)] [[portfolio](team/yuichiro.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"yuifuku1118"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"GnohChengYi"},"content":"### Gnoh Cheng Yi","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"GnohChengYi"},"content":"\u003cimg src\u003d\"images/gnohchengyi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"GnohChengYi"},"content":"[[github](http://github.com/gnohchengyi)] [[portfolio](team/gnohchengyi.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"GnohChengYi"},"content":"* Responsibilities: Code Quality + JavaFX Expert","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Tanishq4331"},"content":"### Tanishq Sharma","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Tanishq4331"},"content":"\u003cimg src\u003d\"images/tanishq4331.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Tanishq4331"},"content":"[[github](https://github.com/Tanishq4331)]","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"Tanishq4331"},"content":"[[portfolio](team/tanishq.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Tanishq4331"},"content":"* Role: Testing","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"Tanishq4331"},"content":"* Responsibilities: ","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"yuifuku1118":3,"GnohChengYi":4,"ngchisern":8,"lwlshawn":6,"Tanishq4331":6,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/SalesNote-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/SalesNote-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"Tanishq4331"},"content":"1. When `Logic` is called upon to execute a command, it uses the `SalesNoteParser` class to parse the user command.","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"Tanishq4331"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"Tanishq4331"},"content":"* When called upon to parse a user command, the `SalesNoteParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `SalesNoteParser` returns back as a `Command` object.","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"lwlshawn"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `SalesNote`, which `Person` references. This allows `SalesNote` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"lwlshawn"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W08-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"Tanishq4331"},"content":"* inherits from both `SalesNoteStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"lwlshawn"},"content":"Classes used by multiple components are in the `seedu.salesnote.commons` package.","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"lwlshawn"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedSalesNote`. It extends `SalesNote` with an undo/redo history, stored internally as an `salesNoteStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"Tanishq4331"},"content":"* `VersionedSalesNote#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"Tanishq4331"},"content":"* `VersionedSalesNote#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"Tanishq4331"},"content":"* `VersionedSalesNote#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Tanishq4331"},"content":"These operations are exposed in the `Model` interface as `Model#commitSalesNote()`, `Model#undoSalesNote()` and `Model#redoSalesNote()` respectively.","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Tanishq4331"},"content":"Step 1. The user launches the application for the first time. The `VersionedSalesNote` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Tanishq4331"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command calls `Model#commitSalesNote()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `SalesNoteStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"Tanishq4331"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `Model#commitSalesNote()`, causing another modified address book state to be saved into the `SalesNoteStateList`.","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitSalesNote()`, so the address book state will not be saved into the `SalesNoteStateList`.","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Tanishq4331"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoSalesNote()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial SalesNote state, then there are no previous SalesNote states to restore. The `undo` command uses `Model#canUndoSalesNote()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Tanishq4331"},"content":"The `redo` command does the opposite — it calls `Model#redoSalesNote()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Tanishq4331"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `SalesNoteStateList.size() - 1`, pointing to the latest address book state, then there are no undone SalesNote states to restore. The `redo` command uses `Model#canRedoSalesNote()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Tanishq4331"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitSalesNote()`, `Model#undoSalesNote()` or `Model#redoSalesNote()`. Thus, the `SalesNoteStateList` remains unchanged.","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Tanishq4331"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSalesNote()`. Since the `currentStatePointer` is not pointing at the end of the `SalesNoteStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"Tanishq4331"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2021-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"lwlshawn"},"content":"* has a need to manage a significant number of clients","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"lwlshawn"},"content":"* needs help managing tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":266,"author":{"gitId":"lwlshawn"},"content":"* needs help keeping financial record of sales","lastModifiedDate":"2021-09-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"lwlshawn"},"content":"**Value proposition**: lightweight application that helps manage contacts faster than a typical mouse/GUI driven app, ","lastModifiedDate":"2021-09-26"},{"lineNumber":269,"author":{"gitId":"lwlshawn"},"content":"and provides simple but helpful features to assist with managing a business.","lastModifiedDate":"2021-09-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | add a deadline to a sales order                            | I can keep track of when I must complete it by  |","lastModifiedDate":"2021-09-24"},{"lineNumber":279,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | keep track of the contact details of my clients            |it is easier to find their contact details      |","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | maintain the preferences and body dimensions of my clients | I can cater to their requirements |","lastModifiedDate":"2021-09-24"},{"lineNumber":281,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | mark tasks as done                                         |        |","lastModifiedDate":"2021-09-24"},{"lineNumber":282,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | key customer orders into the application                   | I know what I need to complete   |","lastModifiedDate":"2021-09-24"},{"lineNumber":283,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | delete a task                                              | get rid of task no longer needed to track       |","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | know the valid commands when I key in the wrong command    | to help me remember what I should do     |","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | new user                                   | categorise my customers, to group them by categories relevant to me     | I can find the group of customers that I want easily   |","lastModifiedDate":"2021-09-24"},{"lineNumber":286,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | non-tech-savvy user                        | add users in a simple and straightforward way              | I can get up to speed easily   |","lastModifiedDate":"2021-09-24"},{"lineNumber":287,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | easily update contact details as these are likely to change over time.  | I can get up to speed easily   |","lastModifiedDate":"2021-09-24"},{"lineNumber":288,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | forgetful user                             | have reminders about deadlines                             | I am on track with my work   |","lastModifiedDate":"2021-09-24"},{"lineNumber":289,"author":{"gitId":"yuifuku1118"},"content":"| `* * *`  | user                                       | know how much in total sales each of my customers has brought in for me  |      |","lastModifiedDate":"2021-09-24"},{"lineNumber":290,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | track how much money I’m making each month                 | I can plan my budget accordingly    |","lastModifiedDate":"2021-09-24"},{"lineNumber":291,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | experienced user                           | clear past entries                                         | the application is less cluttered   |","lastModifiedDate":"2021-09-24"},{"lineNumber":292,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | sort my deadlines by date                                  | I can keep track of which are the most urgent.   |","lastModifiedDate":"2021-09-24"},{"lineNumber":293,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | add notes to tasks                                         | I can add details about special requests or notes for myself, for tasks that might be more difficult and/or take up more time  |","lastModifiedDate":"2021-09-24"},{"lineNumber":294,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | update the requirements of my clients as their needs and preferences change | I am aware of their latest preference |","lastModifiedDate":"2021-09-24"},{"lineNumber":295,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | new user                                   | have a tutorial to guide my on how to use the product      | I can get myself started   |","lastModifiedDate":"2021-09-24"},{"lineNumber":296,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user with poor eyesight                    | the text in the interface to be easily readable            |    |","lastModifiedDate":"2021-09-24"},{"lineNumber":297,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | experienced user                           | the application to be fast and easy                        |    |","lastModifiedDate":"2021-09-24"},{"lineNumber":298,"author":{"gitId":"yuifuku1118"},"content":"| `* * `   | user                                       | keep track of the sales                                    | I don’t have to remember them   |","lastModifiedDate":"2021-09-24"},{"lineNumber":299,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | keep track of outstanding payments                         |    |","lastModifiedDate":"2021-09-24"},{"lineNumber":300,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | know the breakdown of my sales each month                  | to understand better which of my products are more popular   |","lastModifiedDate":"2021-09-24"},{"lineNumber":301,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | backup/undo my actions                                     | I can recover my lost data easily    |","lastModifiedDate":"2021-09-24"},{"lineNumber":302,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | experienced user                           | sort my clients by how much in sales they have brought in for me | I can focus more on clients that brings me more profit   |","lastModifiedDate":"2021-09-24"},{"lineNumber":303,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | skilled user                               | define my own shortcuts for commands                       |       |","lastModifiedDate":"2021-09-24"},{"lineNumber":304,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user who is picky about UI                 | redesign aspects of the application.                       |       |","lastModifiedDate":"2021-09-24"},{"lineNumber":305,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | user                                       | know how much I spent on materials                         | I don’t exceed my budget      |","lastModifiedDate":"2021-09-24"},{"lineNumber":306,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | secure my data/information                 | secure my data/information                                 |     |","lastModifiedDate":"2021-09-24"},{"lineNumber":307,"author":{"gitId":"yuifuku1118"},"content":"| `*`      | experienced user                           | use the app to track my material usage                     | I know when to order more in advance   |","lastModifiedDate":"2021-09-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"Tanishq4331"},"content":"(For all use cases below, the **System** is the `SalesNote` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-21"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Add a client**","lastModifiedDate":"2021-09-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"Tanishq4331"},"content":"1. User requests to add a specific client to the list","lastModifiedDate":"2021-09-21"},{"lineNumber":319,"author":{"gitId":"Tanishq4331"},"content":"2. SalesNote adds the client","lastModifiedDate":"2021-09-21"},{"lineNumber":320,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":321,"author":{"gitId":"Tanishq4331"},"content":"    Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":322,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":323,"author":{"gitId":"Tanishq4331"},"content":"**Extensions**","lastModifiedDate":"2021-09-21"},{"lineNumber":324,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":325,"author":{"gitId":"Tanishq4331"},"content":"* 1a. The format of the request is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":326,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":327,"author":{"gitId":"Tanishq4331"},"content":"    * 1a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":328,"author":{"gitId":"Tanishq4331"},"content":"    ","lastModifiedDate":"2021-09-21"},{"lineNumber":329,"author":{"gitId":"Tanishq4331"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":330,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":331,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":332,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Delete a client**","lastModifiedDate":"2021-09-21"},{"lineNumber":333,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":334,"author":{"gitId":"Tanishq4331"},"content":"**MSS**","lastModifiedDate":"2021-09-21"},{"lineNumber":335,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":336,"author":{"gitId":"Tanishq4331"},"content":"1.  User requests to list clients","lastModifiedDate":"2021-09-21"},{"lineNumber":337,"author":{"gitId":"Tanishq4331"},"content":"2.  SalesNote shows a list of clients","lastModifiedDate":"2021-09-21"},{"lineNumber":338,"author":{"gitId":"Tanishq4331"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2021-09-21"},{"lineNumber":339,"author":{"gitId":"Tanishq4331"},"content":"4.  SalesNote deletes the client","lastModifiedDate":"2021-09-21"},{"lineNumber":340,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":341,"author":{"gitId":"Tanishq4331"},"content":"    Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":342,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":343,"author":{"gitId":"Tanishq4331"},"content":"**Extensions**","lastModifiedDate":"2021-09-21"},{"lineNumber":344,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":345,"author":{"gitId":"Tanishq4331"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":346,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":347,"author":{"gitId":"Tanishq4331"},"content":"  Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":348,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":349,"author":{"gitId":"Tanishq4331"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":350,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":351,"author":{"gitId":"Tanishq4331"},"content":"    * 3a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":352,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":353,"author":{"gitId":"Tanishq4331"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-21"},{"lineNumber":354,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":355,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":356,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Add a task**","lastModifiedDate":"2021-09-21"},{"lineNumber":357,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":358,"author":{"gitId":"Tanishq4331"},"content":"**MSS**","lastModifiedDate":"2021-09-21"},{"lineNumber":359,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":360,"author":{"gitId":"Tanishq4331"},"content":"1. User requests to add a specific task to the list","lastModifiedDate":"2021-09-21"},{"lineNumber":361,"author":{"gitId":"Tanishq4331"},"content":"2. SalesNote adds the task","lastModifiedDate":"2021-09-21"},{"lineNumber":362,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":363,"author":{"gitId":"Tanishq4331"},"content":"   Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":364,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":365,"author":{"gitId":"Tanishq4331"},"content":"**Extensions**","lastModifiedDate":"2021-09-21"},{"lineNumber":366,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":367,"author":{"gitId":"Tanishq4331"},"content":"* 1a. The format of the request is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":368,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":369,"author":{"gitId":"Tanishq4331"},"content":"    * 1a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":370,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":371,"author":{"gitId":"Tanishq4331"},"content":"      Use case ends.","lastModifiedDate":"2021-09-21"},{"lineNumber":372,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":374,"author":{"gitId":"Tanishq4331"},"content":"**Use case: Delete a task**","lastModifiedDate":"2021-09-21"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-21"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":378,"author":{"gitId":"Tanishq4331"},"content":"1.  User requests to list tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":379,"author":{"gitId":"Tanishq4331"},"content":"2.  SalesNote shows a list of tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":380,"author":{"gitId":"Tanishq4331"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2021-09-21"},{"lineNumber":381,"author":{"gitId":"Tanishq4331"},"content":"4.  SalesNote deletes the task","lastModifiedDate":"2021-09-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"Tanishq4331"},"content":"    * 3a1. SalesNote shows an error message.","lastModifiedDate":"2021-09-21"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"Tanishq4331"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-21"},{"lineNumber":403,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"Tanishq4331"},"content":"4. Currency amounts, dates, and times should follow Singapore standards.","lastModifiedDate":"2021-09-21"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"Tanishq4331"},"content":"### Deleting a client","lastModifiedDate":"2021-09-21"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"Tanishq4331"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2021-09-21"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"Tanishq4331"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Tanishq4331"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-09-21"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yuifuku1118":30,"lwlshawn":14,"Tanishq4331":89,"-":331}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"SalesNote is a **desktop app for managing contacts and tasks, optimized for use via a Command Line Interface** (CLI) ","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"while still having the benefits of a Graphical User Interface (GUI). Fast typists can get more out of the application ","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"than from traditional GUI apps. The application and guide are based on AB3 with new added features.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"This project is based on the AB3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"Adds a person to the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS m/MEASUREMENT g/GENDER [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"A person can have any number of tags (including 0). The remark is also optional.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street Blk 92 g/M m/170_100_40`","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"* `add n/Betsy Crowe e/bcrowe@example.com a/Sesame Street p/1234567 t/important g/F d/160_85_35_81`","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"Shows a list of all persons in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"Edits an existing person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"Format: `edit INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS m/MEASUREMENT g/GENDER [r/REMARK] [t/TAG]…​`","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"Deletes the specified person from the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"lwlshawn"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"Clears all entries from the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"lwlshawn"},"content":"SalesNote data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":139,"author":{"gitId":"lwlshawn"},"content":"SalesNote data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":142,"author":{"gitId":"lwlshawn"},"content":"If your changes to the data file makes its format invalid, SalesNote will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":145,"author":{"gitId":"lwlshawn"},"content":"### Listing all tasks: `listtask`","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"lwlshawn"},"content":"Shows a list of all tasks in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"lwlshawn"},"content":"### Adding a task: `addtask`","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"lwlshawn"},"content":"Adds a task to the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"lwlshawn"},"content":"Format: `addtask l/LABEL d/DATE`","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"lwlshawn"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"lwlshawn"},"content":"* `addtask l/sew buttons onto blazer d/20th August 2021`","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"lwlshawn"},"content":"### Deleting a task : `deletetask`","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"lwlshawn"},"content":"Deletes the specified task from the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"lwlshawn"},"content":"Format: `deletetask INDEX`","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"lwlshawn"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"lwlshawn"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"lwlshawn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"lwlshawn"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"lwlshawn"},"content":"* `listtask` followed by `deletetask 2` deletes the 2nd person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"lwlshawn"},"content":"### Mark a task as done: `markdone`","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"lwlshawn"},"content":"Marks a specified task from the application as complete.","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"lwlshawn"},"content":"Format: `deletetask INDEX`","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"lwlshawn"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"lwlshawn"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"lwlshawn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"lwlshawn"},"content":"Examples:","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"lwlshawn"},"content":"* `listtask` followed by `deletetask 2` deletes the 2nd person in the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"lwlshawn"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SalesNote home folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"lwlshawn"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS m/MEASUREMENT g/GENDER [r/REMARK] [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street Blk 92 g/M m/170_100_40 t/friend`","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"lwlshawn"},"content":"**Edit** | `edit INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS m/MEASUREMENT g/GENDER [r/REMARK] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"lwlshawn"},"content":"**ListTask** | `listtask`","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"lwlshawn"},"content":"**AddTask** | `addtask l/LABEL d/DATE` e.g. `addtask l/sew buttons onto blazer d/20th August 2021`","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"lwlshawn"},"content":"**DeleteTask** | `deletetask INDEX` e.g. `deletetask 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"lwlshawn"},"content":"**MarkDone** | `markdone INDEX` e.g. `markdone 2`","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":64,"-":144}},{"path":"docs/team/gnohchengyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GnohChengYi"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"GnohChengYi"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"GnohChengYi"},"content":"title: Gnoh Cheng Yi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"GnohChengYi"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"GnohChengYi"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"GnohChengYi"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"GnohChengYi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"GnohChengYi"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"GnohChengYi"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"GnohChengYi"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"GnohChengYi"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"GnohChengYi"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"GnohChengYi"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"GnohChengYi"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"GnohChengYi"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"GnohChengYi"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"GnohChengYi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"GnohChengYi"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"GnohChengYi"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"GnohChengYi"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"GnohChengYi"},"content":"  * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"GnohChengYi"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"GnohChengYi"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"GnohChengYi"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"GnohChengYi"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"GnohChengYi"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"GnohChengYi"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"GnohChengYi"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"GnohChengYi"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"GnohChengYi"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"GnohChengYi"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"GnohChengYi"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"GnohChengYi"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"GnohChengYi"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"GnohChengYi"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"GnohChengYi":46}},{"path":"docs/team/ngchisern.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"title: Chi Sern\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"* **Project management**:","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"    * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"* **Community**:","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"* **Tools**:","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"ngchisern":46}},{"path":"docs/team/tanishq.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tanishq4331"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"Tanishq4331"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"Tanishq4331"},"content":"title: Tanishq\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"Tanishq4331"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"Tanishq4331"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"Tanishq4331"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"Tanishq4331"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"Tanishq4331"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Tanishq4331"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"Tanishq4331"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"Tanishq4331"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"Tanishq4331"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"Tanishq4331"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"Tanishq4331"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"Tanishq4331"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"Tanishq4331"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"Tanishq4331"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"Tanishq4331"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"Tanishq4331"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"Tanishq4331"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"Tanishq4331"},"content":"    * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"Tanishq4331"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"Tanishq4331"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"Tanishq4331"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"Tanishq4331"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"Tanishq4331"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"Tanishq4331"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"Tanishq4331"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"Tanishq4331"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"Tanishq4331"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"Tanishq4331"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"Tanishq4331"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"Tanishq4331"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"Tanishq4331"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"Tanishq4331"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"Tanishq4331":46}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lwlshawn":1,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEASUREMENT;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"            + PREFIX_MEASUREMENT + \"MEASUREMENT \"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"            + PREFIX_GENDER + \"Male \"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"            + PREFIX_MEASUREMENT + \"170_80_100\"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"            + PREFIX_REMARK + \"loves blue\"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngchisern":9,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the application. \"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_LABEL + \"LABEL \"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_DATE + \"DATE\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_LABEL + \"Sew buttons onto black blazer \"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            + PREFIX_DATE + \"20th August 2021\";","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof AddTaskCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" * Deletes a task identified using its displayed index from the address book.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":53}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEASUREMENT;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"            + \"[\" + PREFIX_MEASUREMENT + \"MEASUREMENT] \"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"ngchisern"},"content":"        if (!Measurement.isValidMeasurement(editedPerson.getMeasurement().value,","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ngchisern"},"content":"                editedPerson.getGender().value)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"            throw new CommandException(Measurement.getMessageConstraints(","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"                    editedPerson.getGender().value)","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"            );","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"ngchisern"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"ngchisern"},"content":"        Measurement updatedMeasurement \u003d editPersonDescriptor.getMeasurement().orElse(personToEdit.getMeasurement());","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"ngchisern"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"ngchisern"},"content":"        return new Person(updatedName, updatedGender, updatedPhone, updatedEmail,","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"ngchisern"},"content":"                updatedMeasurement, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"ngchisern"},"content":"        private Gender gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"ngchisern"},"content":"        private Measurement measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"ngchisern"},"content":"        private Remark remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"ngchisern"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"ngchisern"},"content":"            setMeasurement(toCopy.measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"ngchisern"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"ngchisern"},"content":"            return CollectionUtil.isAnyNonNull(name, gender, phone, email, measurement, address, remark, tags);","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"ngchisern"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"ngchisern"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"ngchisern"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"ngchisern"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"ngchisern"},"content":"        public void setMeasurement(Measurement measurement) {","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"ngchisern"},"content":"            this.measurement \u003d measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"ngchisern"},"content":"        public Optional\u003cMeasurement\u003e getMeasurement() {","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"ngchisern"},"content":"            return Optional.ofNullable(measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"ngchisern"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"ngchisern"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":232,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"ngchisern"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-09-23"},{"lineNumber":234,"author":{"gitId":"ngchisern"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-09-23"},{"lineNumber":235,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"ngchisern"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2021-09-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":273,"author":{"gitId":"ngchisern"},"content":"                    \u0026\u0026 getMeasurement().equals(e.getMeasurement())","lastModifiedDate":"2021-09-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"ngchisern"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ngchisern":55,"-":224}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" * Lists all tasks in the application to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"listtask\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":24}},{"path":"src/main/java/seedu/address/logic/commands/MarkDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" * Marks a task as complete, with the task identified using its displayed index from the address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public static final String COMMAND_WORD \u003d \"markdone\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            + \": Marks a task identified by the index number used in the displayed task list as complete.\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public MarkDoneCommand(Index targetIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        model.markDone(taskToMark);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, taskToMark));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof MarkDoneCommand // instanceof handles nulls","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 targetIndex.equals(((MarkDoneCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":53}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEASUREMENT;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GENDER, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"                        PREFIX_MEASUREMENT, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GENDER, PREFIX_ADDRESS,","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_MEASUREMENT) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"        Measurement measurement \u003d ParserUtil.parseMeasurement(argMultimap.getValue(PREFIX_MEASUREMENT).get(),","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"                gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        Person person \u003d new Person(name, gender, phone, email, measurement, address, remark, tagList);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ngchisern":15,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_LABEL, PREFIX_DATE);","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        //checks that preamble has only spaces, and none of the prefix values are empty","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        //important for the argmultimap.getvalue().get() calls below","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LABEL, PREFIX_DATE)","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"        //very basic validation; only prevents empty strings right now","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        Label label \u003d ParserUtil.parseLabel(argMultimap.getValue(PREFIX_LABEL).get());","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        Task task \u003d new Task(label, date);","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    //Reused from AddCommandParser - consider refactoring in future.","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"        case MarkDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"            return new MarkDoneCommandParser().parse(arguments);","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lwlshawn":16,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    public static final Prefix PREFIX_MEASUREMENT \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public static final Prefix PREFIX_LABEL \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ngchisern":3,"lwlshawn":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEASUREMENT;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GENDER, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"                        PREFIX_MEASUREMENT, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"        if (argMultimap.getValue(PREFIX_MEASUREMENT).isPresent()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"            editPersonDescriptor.setMeasurement(ParserUtil.parseMeasurement(","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"                   argMultimap.getValue(PREFIX_MEASUREMENT).get())","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"            );","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ngchisern":18,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/MarkDoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommandParser implements Parser\u003cMarkDoneCommand\u003e {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public MarkDoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            return new MarkDoneCommand(index);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"ngchisern"},"content":"     * Parses a {@code String measurement} into a {@code Measurement}.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"ngchisern"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"ngchisern"},"content":"     * @throws ParseException if the given {@code measurement} is invalid","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ngchisern"},"content":"    public static Measurement parseMeasurement(String measurement, Gender gender) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"        String trimmedMeasurement \u003d measurement.trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"        if (!Measurement.isValidMeasurement(trimmedMeasurement, gender.value)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngchisern"},"content":"            throw new ParseException(Measurement.getMessageConstraints(gender.value));","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ngchisern"},"content":"        return new Measurement(trimmedMeasurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"ngchisern"},"content":"     * Parses a {@code String measurement} into a {@code Measurement}.","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"ngchisern"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"ngchisern"},"content":"     * @throws ParseException if the given {@code measurement} is invalid","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"ngchisern"},"content":"    public static Measurement parseMeasurement(String measurement) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"ngchisern"},"content":"        String trimmedMeasurement \u003d measurement.trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"ngchisern"},"content":"        if (!Measurement.isValidMeasurement(trimmedMeasurement)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"ngchisern"},"content":"            throw new ParseException(Measurement.GENERAL_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"ngchisern"},"content":"        return new Measurement(trimmedMeasurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"ngchisern"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"ngchisern"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"ngchisern"},"content":"     * @throws ParseException if the given {@code remark} is invalid","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"ngchisern"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"ngchisern"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"ngchisern"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"ngchisern"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"ngchisern"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"lwlshawn"},"content":"     * Simple check that validates label is not empty string after trimming.","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"lwlshawn"},"content":"    public static Label parseLabel(String label) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(label);","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"lwlshawn"},"content":"        String trimmedLabel \u003d label.trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"lwlshawn"},"content":"        if (!Label.isValidLabel(trimmedLabel)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":197,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":198,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"lwlshawn"},"content":"        return new Label(trimmedLabel);","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"lwlshawn"},"content":"     * Simple check that validates date is not empty string after trimming.","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"lwlshawn"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"lwlshawn"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"lwlshawn"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"lwlshawn"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":210,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":211,"author":{"gitId":"lwlshawn"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-09-21"},{"lineNumber":212,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ngchisern":63,"lwlshawn":26,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK FUNCTIONALITIES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"     * Adds the given task.","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"    /** Returns and unmodifiable view of the filtered task list */","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"    //added prior to the ui functionality actually being implemented.","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"    void deleteTask(Task toDelete);","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"    void markDone(Task task);","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lwlshawn":18,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.tasks.asUnmodifiableObservableList());","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"lwlshawn"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"    public void addTask(Task toAdd) {","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"lwlshawn"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"lwlshawn"},"content":"    public void deleteTask(Task toDelete) {","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"lwlshawn"},"content":"        tasks.remove(toDelete);","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"lwlshawn"},"content":"        return filteredTasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"lwlshawn"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"lwlshawn"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"lwlshawn"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"lwlshawn"},"content":"        tasks.markDone(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lwlshawn":31,"-":151}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lwlshawn":1,"-":87}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"enum GenderType {","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"    MALE, FEMALE","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"public class Gender {","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"            \"Gender should only be M(ale) or F(emale), and it should not be blank\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"    public final GenderType value;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"    public Gender(String gender) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"        value \u003d getGenderType(gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"        String gender \u003d test.toLowerCase();","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"        return gender.equals(\"f\") || gender.equals(\"female\") || gender.equals(\"m\") || gender.equals(\"male\");","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    private GenderType getGenderType(String input) {","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"        String gender \u003d input.toLowerCase();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"        if (gender.equals(\"m\") || gender.equals(\"male\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"            return GenderType.MALE;","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"        } else if (gender.equals(\"f\") || gender.equals(\"female\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"            return GenderType.FEMALE;","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"            return null;","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"        return value.name();","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"                \u0026\u0026 value.name().equals(((Gender) other).value.name())); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngchisern":67}},{"path":"src/main/java/seedu/address/model/person/Measurement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":" * Represents a Person\u0027s body measurements in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMeasurement(String, GenderType)}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"public class Measurement {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"    public static final String GENERAL_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"            \"Body measurements should be of the format height_waist_shoulder[_bust] in cm, and it should not be blank\";","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    public static final String MALE_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"            \"A male\u0027s body measurements should be of the format height_waist_shoulder in cm,\"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"                    + \" and it should not be blank\";","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    public static final String FEMALE_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"            \"A female\u0027s body measurements should be of the format height_waist_shoulder_bust in cm,\"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"                    + \" and it should not be blank\";","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"    public static final String IS_NUMBER_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"    public final String value;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"     * Constructs a {@code Measurement}.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"     * @param measurement A valid measurement.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"    public Measurement(String measurement) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"        checkArgument(isValidMeasurement(measurement), GENERAL_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"        value \u003d measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"     * Returns true if a given string is a valid measurement.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"    public static boolean isValidMeasurement(String test, GenderType genderType) {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(genderType);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"        String[] args \u003d test.split(\"_\");","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"        boolean isArgsNumber \u003d isNumber(args);","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"        return isArgsNumber \u0026\u0026 (genderType \u003d\u003d GenderType.MALE ? args.length \u003d\u003d 3 : args.length \u003d\u003d 4);","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"     * Returns true if a given string is a valid measurement.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"    public static boolean isValidMeasurement(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"        String[] args \u003d test.split(\"_\");","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"        boolean isArgsNumber \u003d isNumber(args);","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"        return isArgsNumber \u0026\u0026 (args.length \u003d\u003d 3 || args.length \u003d\u003d 4);","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"     * Returns message constraints based on gender type.","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"    public static String getMessageConstraints(GenderType genderType) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(genderType);","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        if (genderType \u003d\u003d GenderType.MALE) {","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"            return MALE_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"            return FEMALE_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"    private static boolean isNumber(String[] args) {","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"        for (String i: args) {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"            if (!i.matches(IS_NUMBER_REGEX)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"                return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngchisern"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"        return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"ngchisern"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ngchisern"},"content":"        return value;","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ngchisern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"ngchisern"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"ngchisern"},"content":"                || (other instanceof Measurement // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ngchisern"},"content":"                \u0026\u0026 value.equals(((Measurement) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ngchisern"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"ngchisern"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngchisern":90}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"    private final Gender gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"    private final Measurement measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"    private final Remark remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"    public Person(Name name, Gender gender, Phone phone, Email email, Measurement measurement,","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"                  Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"        requireAllNonNull(name, gender, phone, email, measurement, address, remark, tags);","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"        this.measurement \u003d measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"        return gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"    public Measurement getMeasurement() {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"        return measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"        return remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"ngchisern"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"ngchisern"},"content":"                \u0026\u0026 otherPerson.getMeasurement().equals(getMeasurement())","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"ngchisern"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"ngchisern"},"content":"        return Objects.hash(name, gender, phone, email, measurement, address, remark, tags);","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"ngchisern"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"ngchisern"},"content":"                .append(getGender())","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"ngchisern"},"content":"                .append(\"; Measurement: \")","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"ngchisern"},"content":"                .append(getMeasurement())","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"ngchisern"},"content":"                .append(getAddress())","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"ngchisern"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"ngchisern"},"content":"                .append(getRemark());","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngchisern":32,"-":119}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"public class Remark {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"            \"Remarks should only contains alphanumeric alphabets, comma, full stop and whitespace.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9,. ]*\";","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"    public final String value;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"        value \u003d remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"     * Returns true if a given string is a valid remark.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"        return value;","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngchisern":51}},{"path":"src/main/java/seedu/address/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class Date {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"            \"Date should be non-empty\"; //temporary solution","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    public final String parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     * Constructs a {@code Date}","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * @param date A valid date for a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    public Date(String date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        parsedDate \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"        return !date.equals(\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        return parsedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof Date","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 parsedDate.equals(((Date) other).parsedDate));","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        return parsedDate.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":43}},{"path":"src/main/java/seedu/address/model/task/Label.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" * Represents a Task\u0027s label in the application","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" * Guarantee: The label is a non-empty string.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class Label {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"            \"Label should be non-empty\"; //temporary solution","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    public final String checkedLabel;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * Constructs a {@code Label}.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     * @param label A valid label for a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    public Label(String label) {","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(label);","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        checkArgument(isValidLabel(label), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"        checkedLabel \u003d label;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"     * @param label Label to be checked","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    public static boolean isValidLabel(String label) {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"        return !label.equals(\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        return checkedLabel;","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof Label","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 checkedLabel.equals(((Label) other).checkedLabel));","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"        return checkedLabel.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":52}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":" * Basic Task class for v1.2 implementation","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class Task {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"    protected Label label;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"    protected Date date;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"     * Basic constructor, creates a task with the given label.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     * @param label Label the task is created with. Not allowed to be empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    public Task(Label label, Date date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     * Method used to mark the task as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     * @param isDone indicates whether the task is marked as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"     * Getter for boolean isDone.","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"     * @return the isDone of the Task.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        return isDone;","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"     * Getter for label.","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"     * @return the label of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    public Label getLabel() {","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        return label;","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"     * Setter for label.","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"     * @param label The new label of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"    public void setLabel(Label label) {","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"     * Getter for date. Not applicable for Todo tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"     * @return A String representing the date associated with the Task.","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    public Date getDate() {","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"        return date;","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"     * Setter for date. Not applicable for Todo tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"     * Override of toString to provide a user-friendly String representation of Task objects.","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"     * @return A string representing the Task meant to be printed for the user.","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"            return \"[X] \" + label + \", due: \" + date;","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"            return \"[ ] \" + label + \", due: \" + date;","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"            return true;","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"            return false;","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"        return otherTask.getLabel().equals(getLabel())","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 otherTask.getDate().equals(getDate());","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":102}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":" * A list of tasks supporting minimal list operations. Implementation mirrors UniquePersonList to hopefully make ui","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * implementation more straightforward.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"     * Removes a task from the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    public void markDone(Task toMark) {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        if (!internalList.contains(toMark)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        int index \u003d internalList.indexOf(toMark);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        internalList.get(index).setIsDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"                || (other instanceof TaskList","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"                \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":71}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class TaskNotFoundException extends RuntimeException { }","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Gender(\"M\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"                    new Email(\"alexyeoh@example.com\"), new Measurement(\"180_90_110\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"son of Anthony\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"            new Person(new Name(\"Bernice Yu\"), new Gender(\"Female\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"                    new Email(\"berniceyu@example.com\"), new Measurement(\"160_50_60_70\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Gender(\"f\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"                    new Email(\"charlotte@example.com\"), new Measurement(\"165_60_80_90\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"high schooler\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"            new Person(new Name(\"David Li\"), new Gender(\"male\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"                    new Email(\"lidavid@example.com\"), new Measurement(\"170_80_90\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"only free on Friday\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Gender(\"m\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"                    new Email(\"irfan@example.com\"), new Measurement(\"175_90_110\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Gender(\"male\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"                    new Email(\"royb@example.com\"), new Measurement(\"172_85_105\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ngchisern":23,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"    private final String gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"    private final String measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"    private final String remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"                             @JsonProperty(\"measurement\") String measurement,","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"                             @JsonProperty(\"address\") String address, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"        this.measurement \u003d measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"        gender \u003d source.getGender().toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"        measurement \u003d source.getMeasurement().value;","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ngchisern"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ngchisern"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"ngchisern"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"ngchisern"},"content":"        if (measurement \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"ngchisern"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"ngchisern"},"content":"                    Measurement.class.getSimpleName()));","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"ngchisern"},"content":"        if (!Measurement.isValidMeasurement(measurement, modelGender.value)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"ngchisern"},"content":"            throw new IllegalValueException(Measurement.GENERAL_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"ngchisern"},"content":"        final Measurement modelMeasurement \u003d new Measurement(measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"ngchisern"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"ngchisern"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"ngchisern"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"ngchisern"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"ngchisern"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"ngchisern"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"ngchisern"},"content":"        return new Person(modelName, modelGender, modelPhone, modelEmail, modelMeasurement,","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"ngchisern"},"content":"                modelAddress, modelRemark, modelTags);","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ngchisern":46,"-":105}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"FEMALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"180_90_110_70\",","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"    \"remark\": \"dummy remark\",","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"FEMALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"180_90_110_70\",","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"    \"remark\": \"\"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ngchisern":7,"-":13}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"FEMALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"160_50_60_70\",","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"dummy remark\",","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"MALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"170_80_90\",","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"son of Bento\",","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"MALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"175_90_110\",","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"only free on Sunday\",","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"MALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"172_85_105\",","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"high schooler\",","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"MALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"175_90_110\",","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"loves pink\",","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"FEMALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"160_50_60_70\",","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"    \"gender\": \"MALE\",","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"    \"measurement\": \"175_90_110\",","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ngchisern":21,"-":46}},{"path":"src/test/java/seedu/address/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":" * A default model stub that has all of the methods failing. Classed out for tests to reuse","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"    public void deleteTask(Task toDelete) {","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"lwlshawn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":112}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEASUREMENT_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"ngchisern"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"ngchisern"},"content":"                + EMAIL_DESC_AMY + MEASUREMENT_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ngchisern":5,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"lwlshawn":1,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"class AddTaskCommandTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public void constructor_nullLabel_throwsNullPointerException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        Task validTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"     * A model stub for testing adding single task","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        private final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":47}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEASUREMENT;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"    public static final String VALID_GENDER_AMY \u003d \"FEMALE\";","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"    public static final String VALID_GENDER_BOB \u003d \"MALE\";","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    public static final String VALID_MEASUREMENT_AMY \u003d \"160_50_60_70\";","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"    public static final String VALID_MEASUREMENT_BOB \u003d \"170_80_90\";","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime, Eating\";","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"    public static final String MEASUREMENT_DESC_AMY \u003d \" \" + PREFIX_MEASUREMENT + VALID_MEASUREMENT_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"    public static final String MEASUREMENT_DESC_BOB \u003d \" \" + PREFIX_MEASUREMENT + VALID_MEASUREMENT_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"mimi\"; // mimi is not a gender","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"    public static final String INVALID_MEASUREMENT_DESC \u003d \" \" + PREFIX_MEASUREMENT + \"170_91\"; // missing 1 measurement","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"    public static final String INVALID_REMARK_DESC \u003d \" \" + PREFIX_REMARK + \"^happy\"; // \u0027^\u0027 not allowed in remarks","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"ngchisern"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ngchisern"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"ngchisern"},"content":"                .withMeasurement(VALID_MEASUREMENT_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"ngchisern"},"content":"                .withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"ngchisern"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"ngchisern"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"ngchisern"},"content":"                .withMeasurement(VALID_MEASUREMENT_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"ngchisern"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ngchisern":26,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"class DeleteTaskCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    private static final Task testTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    //I followed the style of AddCommand test instead of DeleteCommand test since I thought using a modelStub","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    //was more stylistically appropriate for testing.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    public void execute_validIndexDeletion_success() throws Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        CommandResult commandResult \u003d new DeleteTaskCommand(targetIndex).execute(modelStub);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, testTask),","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(Arrays.asList(), modelStub.listWithOneTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, (","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        ) -\u003e deleteTaskCommand.execute(modelStub));","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    private class ModelStubWithOnePerson extends ModelStub {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        private final ObservableList\u003cTask\u003e listWithOneTask \u003d FXCollections.observableArrayList(testTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        public void deleteTask(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"            listWithOneTask.remove(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"            return listWithOneTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    //pending more tests for filtered list(?)","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":67}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"                .withPhone(VALID_PHONE_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"                .withGender(VALID_GENDER_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ngchisern":6,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEASUREMENT_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"        // different measurement -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMeasurement(VALID_MEASUREMENT_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ngchisern":13,"-":60}},{"path":"src/test/java/seedu/address/logic/commands/MarkDoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.ModelStub;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"class MarkDoneCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    private static final Task testTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    //I followed the style of AddCommand test instead of DeleteCommand test since I thought using a modelStub","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    //was more stylistically appropriate for testing.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    public void execute_validIndexMarkDone_success() throws Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        Task secondTestTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        secondTestTask.setIsDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        CommandResult commandResult \u003d new MarkDoneCommand(targetIndex).execute(modelStub);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(String.format(MarkDoneCommand.MESSAGE_MARK_TASK_SUCCESS, testTask),","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(Arrays.asList(secondTestTask), modelStub.listWithOneTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        ModelStubWithOnePerson modelStub \u003d new ModelStubWithOnePerson();","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, (","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        ) -\u003e deleteTaskCommand.execute(modelStub));","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    private class ModelStubWithOnePerson extends ModelStub {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        private final ObservableList\u003cTask\u003e listWithOneTask \u003d FXCollections.observableArrayList(testTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        public void markDone(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"            listWithOneTask.get(0).setIsDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"            return listWithOneTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":64}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEASUREMENT_DESC;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEASUREMENT_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEASUREMENT_DESC_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEASUREMENT_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"                + EMAIL_DESC_BOB + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_AMY + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ngchisern"},"content":"        // multiple measurements - last measurement accepted","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"ngchisern"},"content":"                        + MEASUREMENT_DESC_AMY + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"ngchisern"},"content":"                        + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"ngchisern"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + REMARK_DESC_AMY + REMARK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":107,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"ngchisern"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":116,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"ngchisern"},"content":"                        + EMAIL_DESC_BOB + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngchisern"},"content":"        // missing gender prefix","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_GENDER_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"ngchisern"},"content":"                + EMAIL_DESC_BOB + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"ngchisern"},"content":"                        + EMAIL_DESC_BOB + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"ngchisern"},"content":"                        + VALID_EMAIL_BOB + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"ngchisern"},"content":"        // missing measurement prefix","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"ngchisern"},"content":"                + EMAIL_DESC_BOB + VALID_MEASUREMENT_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"ngchisern"},"content":"                        + EMAIL_DESC_BOB + MEASUREMENT_DESC_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_GENDER_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"ngchisern"},"content":"                        + VALID_EMAIL_BOB + VALID_MEASUREMENT_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"ngchisern"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"ngchisern"},"content":"        // invalid gender","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_GENDER_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"ngchisern"},"content":"                Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"ngchisern"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"ngchisern"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"ngchisern"},"content":"        // invalid measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"ngchisern"},"content":"                        + INVALID_MEASUREMENT_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"ngchisern"},"content":"                Measurement.MALE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"ngchisern"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"ngchisern"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"ngchisern"},"content":"                + MEASUREMENT_DESC_BOB + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"ngchisern"},"content":"                        + EMAIL_DESC_BOB + MEASUREMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ngchisern":96,"-":103}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Label;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"class AddTaskCommandParserTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public void parse_allFieldsPresent_success() throws Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        Task expectedTask \u003d new Task(new Label(\"test label\"), new Date(\"test date\"));","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        //basic test command","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        assertParseSuccess(parser, \" l/test label d/test date\", new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        //right now, only validation check is that both fields are not empty after trimming spaces","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        //missing label prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" d/test date\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" test label d/test date\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        //missing date prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/test label\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/test label test date\", expectedMessage);","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        //empty label","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/ d/date\", Label.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        //empty date after spaces are trimmed","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \" l/label d/ \", Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"lwlshawn":47}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * Mirrors DeleteCommandParserTest","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":27}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEASUREMENT_DESC;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEASUREMENT_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEASUREMENT_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GENDER_DESC, Gender.MESSAGE_CONSTRAINTS); //invalid gender","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MEASUREMENT_DESC,","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"ngchisern"},"content":"                Measurement.GENERAL_MESSAGE_CONSTRAINTS); // invalid measurement","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REMARK_DESC, Remark.MESSAGE_CONSTRAINTS); // invalid remark","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"ngchisern"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"ngchisern"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY + INVALID_REMARK_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"ngchisern"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND + GENDER_DESC_AMY","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngchisern"},"content":"                + EMAIL_DESC_AMY + MEASUREMENT_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"ngchisern"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"ngchisern"},"content":"                .withGender(VALID_GENDER_AMY).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"ngchisern"},"content":"                .withEmail(VALID_EMAIL_AMY).withMeasurement(VALID_MEASUREMENT_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"ngchisern"},"content":"                .withAddress(VALID_ADDRESS_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"ngchisern"},"content":"        // gender","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"ngchisern"},"content":"        userInput \u003d targetIndex.getOneBased() + GENDER_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"ngchisern"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGender(VALID_GENDER_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"ngchisern"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"ngchisern"},"content":"        // measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"ngchisern"},"content":"        userInput \u003d targetIndex.getOneBased() + MEASUREMENT_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"ngchisern"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMeasurement(VALID_MEASUREMENT_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"ngchisern"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"ngchisern"},"content":"        // remark","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"ngchisern"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"ngchisern"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"ngchisern"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"ngchisern"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ngchisern":42,"-":206}},{"path":"src/test/java/seedu/address/logic/parser/MarkDoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import seedu.address.logic.commands.MarkDoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * Mirrors DeleteCommandParserTest","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommandParserTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private MarkDoneCommandParser parser \u003d new MarkDoneCommandParser();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        assertParseSuccess(parser, \"1\", new MarkDoneCommand(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"lwlshawn":27}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"    private static final String INVALID_GENDER \u003d \"momo\";","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"    private static final String INVALID_MEASUREMENT \u003d \"160_60_apple\";","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"    private static final String INVALID_FEMALE_MEASUREMENT \u003d \"150_60_70\";","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    private static final String VALID_GENDER \u003d \"FEMALE\";","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"    private static final String VALID_MEASUREMENT \u003d \"160_50_70_80\";","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"    private static final String VALID_REMARK \u003d \"loves pink colour\";","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"ngchisern"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngchisern"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"ngchisern"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"ngchisern"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"ngchisern"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"ngchisern"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"ngchisern"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"ngchisern"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"ngchisern"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"ngchisern"},"content":"    public void parseMeasurement_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMeasurement(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"ngchisern"},"content":"    public void parseMeasurement_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"ngchisern"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMeasurement(INVALID_MEASUREMENT));","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"ngchisern"},"content":"    public void parseMeasurement_invalidFemaleValue_throwsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"ngchisern"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"ngchisern"},"content":"                ParserUtil.parseMeasurement(INVALID_FEMALE_MEASUREMENT, new Gender(\"f\")));","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"ngchisern"},"content":"    public void parseMeasurement_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"ngchisern"},"content":"        Measurement expectedMeasurement \u003d new Measurement(VALID_MEASUREMENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"ngchisern"},"content":"        assertEquals(expectedMeasurement, ParserUtil.parseMeasurement(VALID_MEASUREMENT));","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"ngchisern"},"content":"    public void parseMeasurement_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"ngchisern"},"content":"        String measurementWithWhitespace \u003d WHITESPACE + VALID_MEASUREMENT + WHITESPACE;","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"ngchisern"},"content":"        Measurement expectedMeasurement \u003d new Measurement(VALID_MEASUREMENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"ngchisern"},"content":"        assertEquals(expectedMeasurement, ParserUtil.parseMeasurement(measurementWithWhitespace));","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"ngchisern"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"ngchisern"},"content":"    @Test void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"ngchisern"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"ngchisern"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":225,"author":{"gitId":"ngchisern"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":226,"author":{"gitId":"ngchisern"},"content":"        String remarkWithWhitespace \u003d WHITESPACE + VALID_REMARK + WHITESPACE;","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"ngchisern"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-09-23"},{"lineNumber":228,"author":{"gitId":"ngchisern"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace));","lastModifiedDate":"2021-09-23"},{"lineNumber":229,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ngchisern":80,"-":196}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"public class GenderTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"        String invalidGender \u003d \"*hello\";","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"    public void isValidGender() {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"        // null gender","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"        // invalid gender","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Gender.isValidGender(\"hehe\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Gender.isValidGender(\"female^\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"        // valid gender","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Gender.isValidGender(\"f\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Gender.isValidGender(\"Female\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Gender.isValidGender(\"MALE\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Gender.isValidGender(\"male\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Gender.isValidGender(\"m\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"    public void getGenderType() {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"        assertEquals(GenderType.MALE, new Gender(\"m\").value);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"        assertEquals(GenderType.MALE, new Gender(\"mAle\").value);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"        assertEquals(GenderType.FEMALE, new Gender(\"F\").value);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"        assertEquals(GenderType.FEMALE, new Gender(\"femAle\").value);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"    public void equal() {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"        Gender gender \u003d new Gender(\"Male\");","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"        assertTrue(gender.equals(gender));","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"        Gender remarkCopy \u003d new Gender(gender.toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"        assertTrue(gender.equals(remarkCopy));","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"        assertFalse(gender.equals(1));","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"        assertFalse(gender.equals(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"        Gender differentGender \u003d new Gender(\"FEMALE\");","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"        assertFalse(gender.equals(differentGender));","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngchisern":69}},{"path":"src/test/java/seedu/address/model/person/MeasurementTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"class MeasurementTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Measurement(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    public void constructor_invalidMeasurement_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"        String measurement \u003d \"hello\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Measurement(measurement));","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"    public void isValidMeasurement() {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"        // null measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Measurement.isValidMeasurement(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"        // invalid measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Measurement.isValidMeasurement(\"happy\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Measurement.isValidMeasurement(\"100_50\")); // miss one argument","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Measurement.isValidMeasurement(\"100_60_hi\")); // not integer","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"        // valid measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Measurement.isValidMeasurement(\"170_60_80\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Measurement.isValidMeasurement(\"170_60_80_90\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    public void isValidMeasurement_genderSpecific() {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"        // null measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Measurement.isValidMeasurement(null, GenderType.MALE));","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Measurement.isValidMeasurement(null, GenderType.FEMALE));","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"        // invalid measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Measurement.isValidMeasurement(\"100_50_60_65\", GenderType.MALE));","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Measurement.isValidMeasurement(\"100_50_70\", GenderType.FEMALE));","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"        // valid measurement","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Measurement.isValidMeasurement(\"170_60_80\", GenderType.MALE));","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Measurement.isValidMeasurement(\"170_60_80_90\", GenderType.FEMALE));","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"    public void equal() {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"        Measurement measurement \u003d new Measurement(\"100_40_50\");","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"        assertTrue(measurement.equals(measurement));","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"        Measurement measurementCopy \u003d new Measurement(measurement.value);","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"        assertTrue(measurement.equals(measurementCopy));","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"        assertFalse(measurement.equals(1));","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"        assertFalse(measurement.equals(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"        // different measurement -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngchisern"},"content":"        Measurement differentMeasurement \u003d new Measurement(\"100_40_60\");","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"        assertFalse(measurement.equals(differentMeasurement));","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngchisern":73}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ngchisern"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngchisern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"class RemarkTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngchisern"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"        String invalidRemark \u003d \"*hello\";","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    public void isValidRemark() {","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"ngchisern"},"content":"        // null remark","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngchisern"},"content":"        // invalid remark","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Remark.isValidRemark(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"        assertFalse(Remark.isValidRemark(\"happy*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"        // valid remark","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Remark.isValidRemark(\"happy\")); // alphabets only","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Remark.isValidRemark(\"12345\")); // numbers only","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Remark.isValidRemark(\"the 2nd son of Peter\")); // alphanumeric characters","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Remark.isValidRemark(\"Capital Land\")); // with capital letters","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"        assertTrue(Remark.isValidRemark(\"David Roger Jackson Ray Jr 2nd\")); // long remarks","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"    public void equal() {","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngchisern":60}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ngchisern"},"content":"    private static final String INVALID_GENDER \u003d \"momo\";","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ngchisern"},"content":"    private static final String INVALID_MEASUREMENT \u003d \"130_40_hi\";","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngchisern"},"content":"    private static final String INVALID_REMARK \u003d \"^what?\";","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    private static final String VALID_MEASUREMENT \u003d BENSON.getMeasurement().toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"ngchisern"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"                VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngchisern"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"ngchisern"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"ngchisern"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"ngchisern"},"content":"                VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"ngchisern"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"ngchisern"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, null, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"                VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"ngchisern"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, null,","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"ngchisern"},"content":"                VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"ngchisern"},"content":"    public void toModelType_invalidMeasurement_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"ngchisern"},"content":"                INVALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"ngchisern"},"content":"        String expectedMessage \u003d Measurement.GENERAL_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"ngchisern"},"content":"    public void toModelType_nullMeasurement_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"ngchisern"},"content":"                null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"ngchisern"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Measurement.class.getSimpleName());","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"ngchisern"},"content":"                VALID_MEASUREMENT, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"ngchisern"},"content":"    public void toModelType_invalidRemark_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, VALID_ADDRESS, INVALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"ngchisern"},"content":"        String expectedMessage \u003d Remark.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"ngchisern"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"ngchisern"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"ngchisern"},"content":"                        VALID_MEASUREMENT, VALID_ADDRESS, null, VALID_TAGS);","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"ngchisern"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"ngchisern"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"ngchisern"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"ngchisern"},"content":"                VALID_MEASUREMENT, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ngchisern":76,"-":99}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ngchisern"},"content":"     * Sets the {@code Measurement} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ngchisern"},"content":"    public EditPersonDescriptorBuilder withMeasurement(String measurement) {","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"ngchisern"},"content":"        descriptor.setMeasurement(new Measurement(measurement));","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"ngchisern"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ngchisern"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngchisern"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngchisern"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngchisern"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ngchisern":27,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"ngchisern"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"ngchisern"},"content":"    public static final String DEFAULT_GENDER \u003d \"FEMALE\";","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"ngchisern"},"content":"    public static final String DEFAULT_MEASUREMENT \u003d \"160_50_60_70\";","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"ngchisern"},"content":"    public static final String DEFAULT_REMARK \u003d \"dummy remark\";","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"ngchisern"},"content":"    private Gender gender;","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"    private Measurement measurement;","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"ngchisern"},"content":"    private Remark remark;","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"        measurement \u003d new Measurement(DEFAULT_MEASUREMENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"        measurement \u003d personToCopy.getMeasurement();","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ngchisern"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ngchisern"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ngchisern"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ngchisern"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"ngchisern"},"content":"     * Sets the {@code Measurement} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"ngchisern"},"content":"    public PersonBuilder withMeasurement(String measurement) {","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"ngchisern"},"content":"        this.measurement \u003d new Measurement(measurement);","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"ngchisern"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"ngchisern"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"ngchisern"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"ngchisern"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"ngchisern"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"ngchisern"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngchisern"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"ngchisern"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"ngchisern"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"ngchisern"},"content":"        return new Person(name, gender, phone, email, measurement, address, remark, tags);","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ngchisern":40,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEASUREMENT;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"        sb.append(PREFIX_GENDER + person.getGender().toString() + \" \");","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"        sb.append(PREFIX_MEASUREMENT + person.getMeasurement().value + \" \");","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"ngchisern"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.toString()).append(\" \"));","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"        descriptor.getMeasurement().ifPresent(","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"            measurement -\u003e sb.append(PREFIX_MEASUREMENT).append(measurement.value).append(\" \")","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"        );","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ngchisern":11,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEASUREMENT_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEASUREMENT_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngchisern"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"ngchisern"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withGender(\"FEMALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"160_50_60_70\")","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngchisern"},"content":"            .withPhone(\"94351253\").withRemark(\"dummy remark\")","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"ngchisern"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withGender(\"MALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"170_80_90\")","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngchisern"},"content":"            .withRemark(\"son of Bento\")","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"ngchisern"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withGender(\"MALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngchisern"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngchisern"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"175_90_110\")","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngchisern"},"content":"            .withRemark(\"only free on Sunday\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngchisern"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withGender(\"MALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngchisern"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngchisern"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"172_85_105\")","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngchisern"},"content":"            .withRemark(\"high schooler\").withTags(\"friends\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngchisern"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withGender(\"MALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngchisern"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngchisern"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"175_90_110\")","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngchisern"},"content":"            .withRemark(\"loves pink\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngchisern"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withGender(\"FEMALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngchisern"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngchisern"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"160_50_60_70\")","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngchisern"},"content":"            .withRemark(\"\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngchisern"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withGender(\"MALE\")","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngchisern"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"ngchisern"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"175_90_110\")","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngchisern"},"content":"            .withRemark(\"\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"ngchisern"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withGender(\"MALE\").withPhone(\"8482424\")","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"100_30_20\")","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":73,"author":{"gitId":"ngchisern"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withGender(\"MALE\").withPhone(\"8482131\")","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(\"180_70_80\")","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"ngchisern"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ngchisern"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(VALID_MEASUREMENT_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"ngchisern"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"ngchisern"},"content":"            .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"ngchisern"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"ngchisern"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"ngchisern"},"content":"            .withMeasurement(VALID_MEASUREMENT_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"ngchisern"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ngchisern"},"content":"            .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ngchisern":51,"-":57}}]
