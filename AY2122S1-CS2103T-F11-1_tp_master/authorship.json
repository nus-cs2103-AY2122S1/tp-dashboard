[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"# TimesTable","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"This is a contact application aimed at helping freelance tutors to","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"1. keep track of their tutee information such as contact information, address, etc.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"2. keep track of teaching schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"# More about this project","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"* This is a software engineering project by team F11-1 for NUS module CS2103T of AY2021-22 Sem 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"* The starting codebase is written in OOP fashion. It provides a reasonably well-written code base bigger (around 6 KLoC) than","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"softmagnet":14,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"run {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ongzl":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"# Project team","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"### Bernard Wan De Yuan","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"\u003cimg src\u003d\"images/bernardwan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"[[github](https://github.com/bernardwan)]","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"Personal email: bernardwan99@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"School email: bernardwan@u.nus.edu","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"* Role: Deliverables and Deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"### Lin Zhiwei","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"\u003cimg src\u003d\"images/softmagnet.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"[[github](https://github.com/softmagnet)]","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"Personal email: zhiwei3141@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"School email: zhiwei_lin@u.nus.edu","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"* Role: Code quality and testing","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"### Ong Zheng Lin","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"\u003cimg src\u003d\"images/ongzl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"[[github](https://github.com/Ongzl)]","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"Personal email: ongzhenglin1999@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"School email: ong.zhenglin@u.nus.edu","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"### Kevin Chua Kian Chun","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"\u003cimg src\u003d\"images/yourally2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"[[github](https://github.com/yourally2)]","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"Personal email: kevinchua6@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"School email: kevinchua@u.nus.edu","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"* Role: Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"* Subrole: Intellij and Git expert","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"### Stuart Long Chay Boon","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"\u003cimg src\u003d\"images/s7u4rt99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"[[github](https://github.com/s7u4rt99)]","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"Personal email: stuartlongchayboon@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"School email: stuartlong@u.nus.edu","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"* Subrole: Scheduling and Tracking","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"yourally2":8,"s7u4rt99":10,"Ongzl":7,"softmagnet":12,"bernardwan":6,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"### Find commands","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"The implementation of all search-related commands such as `findtag` and `findname` uses a common approach of setting a","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"predicate inside the `FilteredList` class. As mentioned above in `Model` section, this filtered list contains an","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"`ObservableList\u003cPerson\u003e` that is bound to the UI such that UI is responsive to any changes in the list and these changes","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"can be brought forward by setting a new predicate. One should also note that the default predicate always returns a","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"boolean `true` which means no `Person` is filtered out at the start.","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"The sequence diagram when a `findXYZ` (XYZ is placeholder for searchable attributes) command is executed is as follows:","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"![Sequence of execution when a find command is executed](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"Furthermore, to fully understand the find command, we also have to understand how predicate is works. The predicates used","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"that filters out students are typical java `Predicate`. It is important to know that for each find command, multiple","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"keywords are allowed so we have to design predicates such that every keyword is checked against each student.","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"To add a searchable attributes, one has to design and add a new predicate.","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"### Timetable feature","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"s7u4rt99"},"content":"The timetable feature is a feature which displays the user\u0027s classes in a visual timetable format.","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"s7u4rt99"},"content":"#### Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"s7u4rt99"},"content":"When the TimesTable starts, it uses the uniqueClassList to build the timetable UI in the timetable tab. It sorts the","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"classes in order of class timing (earliest class first) and builds them iteratively. There is also a listener attached","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"to the uniqueClassList which causes the timetable to rebuild itself whenever there are changes to the uniqueClassList, ","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"s7u4rt99"},"content":"such as when a new class is added or an existing class is deleted from the uniqueClassList.","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"s7u4rt99"},"content":"Additionally, due to the limited size of the app window, the timetable would adjust itself and starts everyday with the","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"s7u4rt99"},"content":"earliest class timing so that the timetable would not look cluttered. There is a time panel at the top to indicate what","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"time are the slots at.","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"yourally2"},"content":"### \\[Proposed\\] \\[Unfinished\\] Adding a Student to a class","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"yourally2"},"content":"When adding a student, a Class is automatically created if a class at the same timing doesn\u0027t already exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"yourally2"},"content":"The AddCommandParse parses the user input to obtain the classTiming (denoted by parameter `/ct`), and","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"yourally2"},"content":"uniquely identifies the class. Afterwards, an AddCommand is created with the `Class` and `Student`, after which","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"yourally2"},"content":"it checks whether an existing class with the same timing exists and adds the student to the `Class`\u0027s classList","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"yourally2"},"content":"and if not, adds the student to the new class created.","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"bernardwan"},"content":"### \\[Proposed\\] \\[Unfinished\\] Deleting Tuition Class","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"bernardwan"},"content":"To delete a tuition class, the \u0027deleteclass\u0027 command is used.","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"bernardwan"},"content":"The DeleteCommandParser parses the user input to obtain the parameters, which is the class timing of the class to be","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"bernardwan"},"content":"deleted.","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"bernardwan"},"content":"Then, a DeleteCommand is created with the parsed class timing. When the DeleteCommand#execute() is run, the AddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"bernardwan"},"content":"is searched to find the tuition class to be deleted. If no classes matches the ClassTiming, an exception is thrown.","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"bernardwan"},"content":"Otherwise, the TuitionClass is obtained. The TuitionClass object stores a list of students in the class in the form","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"bernardwan"},"content":"of a list of names. From each name, the respective student is found and the TuitionClass is deleted from the student\u0027s","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"bernardwan"},"content":"internal class list.","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"bernardwan"},"content":"Finally, the TuitionClass itself can be removed from the AddressBook\u0027s class list.","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"bernardwan"},"content":"A diagram of the procedure is shown below:","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"Ongzl"},"content":"### \\[Proposed\\] \\[Unfinished\\] A UniqueTuitionClassList in Model and by extension a \"Classes\" tab","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"Ongzl"},"content":"A student can attend multiple TuitionClass, so a List\u003cJSONAdaptedTuitionClass\u003e is used to store the classes this student","lastModifiedDate":"2021-10-22"},{"lineNumber":297,"author":{"gitId":"Ongzl"},"content":"attends, while each TuitionClass contains a List\u003cName\u003e of all student who attends it.","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"Ongzl"},"content":"When a new Student is added to the AddressBook, the TuitionClass of the new Student created will be checked through","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"Ongzl"},"content":"the UniqueTuitionClassList for equality and overlapping, if the TuitionClasses are equal, the new student name will be","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"Ongzl"},"content":"added to the TuitionClass name list and the TuitionClass of the new student will be replaced by the TuitionClass with","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"Ongzl"},"content":"the updated name list, if they are overlapping but not equal, an exception will be thrown.","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"Ongzl"},"content":"This UniqueTuitionClassList consists of an ObservableArrayList which will then be used to display all unique ","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"Ongzl"},"content":"TuitionClasses that the user will be teaching in the GUI.","lastModifiedDate":"2021-10-22"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"s7u4rt99"},"content":"* Name: Kevin Bernard Long Zheng Wei","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"s7u4rt99"},"content":"* Age: 28","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"s7u4rt99"},"content":"* Gender: Male","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"s7u4rt99"},"content":"* Marital status: Single","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"s7u4rt99"},"content":"* Country: Singapore","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"s7u4rt99"},"content":"* Habits: Sleeping, Netflix, Gym, Gaming","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"s7u4rt99"},"content":"* Lifestyle: Code, eat, sleep, gives freelance tuition.","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    * prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    * can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    * prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    * is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"s7u4rt99"},"content":"* Interest: Loves coding and building apps during his free time with friends. Loves teaching people.","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"s7u4rt99"},"content":"* Values: Work hard play hard.","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"s7u4rt99"},"content":"* Salary: $12000/mth","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"s7u4rt99"},"content":"* Job: Full time freelance A-levels Mathematics tuition teacher (Size of class: group and one-to-one)","lastModifiedDate":"2021-09-30"},{"lineNumber":338,"author":{"gitId":"s7u4rt99"},"content":"    * Has a need to manage a significant number of contacts","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"s7u4rt99"},"content":"* Car: Owns 2 Teslas.","lastModifiedDate":"2021-09-30"},{"lineNumber":340,"author":{"gitId":"s7u4rt99"},"content":"* Home Environment: Lives with parents, older brother and dog.","lastModifiedDate":"2021-09-30"},{"lineNumber":341,"author":{"gitId":"s7u4rt99"},"content":"* Education: NIE graduate.","lastModifiedDate":"2021-09-30"},{"lineNumber":342,"author":{"gitId":"s7u4rt99"},"content":"* Household Description: Sentosa Cove landed property with rich parents.","lastModifiedDate":"2021-09-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"softmagnet"},"content":"**Value proposition**: \u003c/br\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"softmagnet"},"content":"A busy tutor who has a large number of students can find it extremely difficult to","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"softmagnet"},"content":"* manage and organize student information","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"softmagnet"},"content":"* schedule according to student class timing","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"softmagnet"},"content":"This is where Timestable comes in. It improves two main areas:","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"softmagnet"},"content":"* querying","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"softmagnet"},"content":"  * student information","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"softmagnet"},"content":"  * parent information","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"softmagnet"},"content":"  * class timing","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"softmagnet"},"content":"* data manipulation","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"softmagnet"},"content":"  * add","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"softmagnet"},"content":"  * delete","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"softmagnet"},"content":"  * update","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"softmagnet"},"content":"By improving the data manipulation process, the tutor can organize student information more easily. \u003c/br\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"softmagnet"},"content":"By improving the querying process, the tutor can make scheduling less painstaking and time-consuming.","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"yourally2"},"content":"| `* *`    | User                                       | Check if student has paid                                    | Keep track of who I need to remind                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"yourally2"},"content":"| `* * `   | User                                       | Save class rates                                             | Keep track of how much to charge each class                |","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"yourally2"},"content":"| `* * `   | User                                       | Edit my student details                                      | Keep track of changes of my students                       |","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"yourally2"},"content":"| `* * *`  | Forgetful user                             | Save their contacts                                          | I can remember them                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User                                       | View my class timings for a specific contact (day and time)  |          Know which day will I be teaching this contact    |","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User                                       | Record parent contact of my students                         | Contact the student\u0027s parent in case of emergencies        |","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User                                       | Delete/archive my student\u0027s contacts and information         | I can declutter my contacts.                               |","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"yourally2"},"content":"| `* * *`  | Experienced User                           | Add all contact details without any specifiers               | I can save time in creating new contacts                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User                                       | Record locations of classes of each student                  | Knows where to go                                          |","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"yourally2"},"content":"| `* `     | Careless User                              | Be notified if there was a clash in timing                   | I can have peace of mind                                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"yourally2"},"content":"| `* `     | User                                       | View schedule for a specific day                             | Can prepare for lesson and won\u0027t be absent                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"Ongzl"},"content":"(For all use cases below, the **System** is the `TimesTable` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Ongzl"},"content":"2.  TimesTable shows a list of persons","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"Ongzl"},"content":"4.  TimesTable deletes the person","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"Ongzl"},"content":"    * 3a1. TimesTable shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"Ongzl"},"content":"**Use case: Add a person**","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":412,"author":{"gitId":"Ongzl"},"content":"1. User adds details of new person to be added to TimesTable.","lastModifiedDate":"2021-09-28"},{"lineNumber":413,"author":{"gitId":"Ongzl"},"content":"2. TimesTable adds new person with relevant details.","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"Ongzl"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":416,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":417,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"Ongzl"},"content":"* 1a. User keys in add command with invalid format.","lastModifiedDate":"2021-09-28"},{"lineNumber":419,"author":{"gitId":"Ongzl"},"content":"    *1a1. TimesTable shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"Ongzl"},"content":"**Use case: Add parent contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"Ongzl"},"content":"1. User adds detail of parent contact to existing contact.","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"Ongzl"},"content":"2. TimesTable updates the parent contact field with the added details.","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"Ongzl"},"content":"* 1a. User keys in Add Parent command with invalid format.","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"Ongzl"},"content":"    *1a1. TimesTable shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"Ongzl"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"bernardwan"},"content":"4.  The data should be stored locally in a human editable text file","lastModifiedDate":"2021-09-27"},{"lineNumber":441,"author":{"gitId":"bernardwan"},"content":"5.  Should not use a database management system to store data","lastModifiedDate":"2021-09-27"},{"lineNumber":442,"author":{"gitId":"bernardwan"},"content":"6.  Should follow OOP paradigm primarily","lastModifiedDate":"2021-09-27"},{"lineNumber":443,"author":{"gitId":"bernardwan"},"content":"7.  Should work without requiring an installer","lastModifiedDate":"2021-09-27"},{"lineNumber":444,"author":{"gitId":"bernardwan"},"content":"8.  Should not depend on a remote server","lastModifiedDate":"2021-09-27"},{"lineNumber":445,"author":{"gitId":"bernardwan"},"content":"9.  Project should simulate a brownfield project by evolving the code base with each iteration incrementally (breadth-first)","lastModifiedDate":"2021-09-27"},{"lineNumber":446,"author":{"gitId":"bernardwan"},"content":"10. Should be for a single user","lastModifiedDate":"2021-09-27"},{"lineNumber":447,"author":{"gitId":"bernardwan"},"content":"11. Third-party frameworks, libraries and services should be free, open-source, do not require any installation by the user, and do not violate other requirements.","lastModifiedDate":"2021-09-27"},{"lineNumber":448,"author":{"gitId":"bernardwan"},"content":"12. GUI should work well for","lastModifiedDate":"2021-09-27"},{"lineNumber":449,"author":{"gitId":"bernardwan"},"content":"    * Standard screen resolutions of 1920x1080 and higher","lastModifiedDate":"2021-09-27"},{"lineNumber":450,"author":{"gitId":"bernardwan"},"content":"    * Screen scales 100% and 125%","lastModifiedDate":"2021-09-27"},{"lineNumber":451,"author":{"gitId":"bernardwan"},"content":"13. GUI should be usable for","lastModifiedDate":"2021-09-27"},{"lineNumber":452,"author":{"gitId":"bernardwan"},"content":"    * Resolutions 1280x720 and higher","lastModifiedDate":"2021-09-27"},{"lineNumber":453,"author":{"gitId":"bernardwan"},"content":"    * Screen scales 150%","lastModifiedDate":"2021-09-27"},{"lineNumber":454,"author":{"gitId":"bernardwan"},"content":"14. Should package everything into a single JAR file","lastModifiedDate":"2021-09-27"},{"lineNumber":455,"author":{"gitId":"bernardwan"},"content":"15. Product should not exceed 100 MB and documents should not exceed 15 MB/file","lastModifiedDate":"2021-09-27"},{"lineNumber":456,"author":{"gitId":"bernardwan"},"content":"16. Developer Guide and User Guide should be PDF-friendly","lastModifiedDate":"2021-09-27"},{"lineNumber":457,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"yourally2"},"content":"### Adding a Student to a class","lastModifiedDate":"2021-10-22"},{"lineNumber":493,"author":{"gitId":"yourally2"},"content":"1. Adding a student to a class that doesn\u0027t currently exist","lastModifiedDate":"2021-10-22"},{"lineNumber":494,"author":{"gitId":"yourally2"},"content":"    1. Test case: `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 r/70 ct/Mon 11:30-13:30 l/311, Clementi Ave 2, #02-25 t/friends t/owesMoney","lastModifiedDate":"2021-10-22"},{"lineNumber":495,"author":{"gitId":"yourally2"},"content":"       nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25 `","lastModifiedDate":"2021-10-22"},{"lineNumber":496,"author":{"gitId":"yourally2"},"content":"       Expected: A class is created at 11:30-13:30 on Monday.","lastModifiedDate":"2021-10-22"},{"lineNumber":497,"author":{"gitId":"yourally2"},"content":"       Details of the created `Student` and `Class` is shown in the status message.","lastModifiedDate":"2021-10-22"},{"lineNumber":498,"author":{"gitId":"yourally2"},"content":"   List is updated to include the student in the `studentTab` and class is added to the `classTab`","lastModifiedDate":"2021-10-22"},{"lineNumber":499,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":500,"author":{"gitId":"yourally2"},"content":"2. Adding a student to a class that currently exists","lastModifiedDate":"2021-10-22"},{"lineNumber":501,"author":{"gitId":"yourally2"},"content":"    1. Test case: `add n/Johnny p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 r/70 ct/Mon 11:30-13:30 l/311, Clementi Ave 2, #02-25 t/friends t/owesMoney","lastModifiedDate":"2021-10-22"},{"lineNumber":502,"author":{"gitId":"yourally2"},"content":"       nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25 `","lastModifiedDate":"2021-10-22"},{"lineNumber":503,"author":{"gitId":"yourally2"},"content":"       Expected: The student is added to the class that exists at 11:30-13:30 on Monday. No new class is created.","lastModifiedDate":"2021-10-22"},{"lineNumber":504,"author":{"gitId":"yourally2"},"content":"       Details of the created `Student` and the `Class` he is added to is shown in the status message.","lastModifiedDate":"2021-10-22"},{"lineNumber":505,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"yourally2"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"yourally2"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"yourally2"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"yourally2"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2021-10-22"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yourally2":35,"s7u4rt99":29,"Ongzl":38,"softmagnet":39,"bernardwan":30,"-":358}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"TimesTable is a **desktop app for managing your tuition students and classes, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TimesTable can get your class management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"1. Ensure you have Java `11` or above installed in your Computer, if you do not, you can download it from [here](https://www.oracle.com/java/technologies/downloads/#jdk17-linux).","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"1. Download the latest `timestable.jar` from [here](https://github.com/AY2122S1-CS2103T-F11-1/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"* For commands that require next-ok-kin (NOK) information, all inputs regarding NOK should be after `nok/` and all","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"  inputs regarding the student should be before `nok/`. Timestable does not allow order swap!\u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"  e.g. `n/John p/97833242 … /nok n/Harry p/87738383 …` John and 97833242 are information belonging to the student","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"  and John\u0027s NOK\u0027s name is Harry whose phone number is 87738383.","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"## Deleting a student : `delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"Deletes the specified student from the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"* `list` followed by `delete 2` deletes the 2nd student in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"## Adding a student: `add`","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"Adds a student to the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"Format:","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ct/CLASS_TIMING l/LOCATION r/HOURLY_RATE [t/TAG]… nok/ n/NOK_NAME","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"    p/NOK_PHONE_NUMBER e/NOK_EMAIL","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"* This is a command that requires next-of-kin (NOK) information.","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"* This command is split into two segments (excluding command keyword). The first segment are the inputs before","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"`nok/` and the second segment are the inputs after `nok/`.","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"  * The segments are not fixed in order and inputs in the","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"  first segment are about student information whereas inputs in the second segment are about NOK\u0027s information.","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"* The order of input within its own segment is swappable.","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"A student can have any number of tags (including 0)","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 ct/Mon 2-4pm","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"    l/Hougang ave 5 Block 614 #11-419 r/$50 t/ALevels nok/ n/Mary Doe p/93334848 e/mary23@gmail.com","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"add n/Betsy Crowe ct/Mon 5-7pm l/Serangoon Nex  t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"    t/slow learner r/$70 nok/ n/Karen e/karenSUper@gmail.com p/99994444","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"## Adding a class: `addclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"Add a class to the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"addclass cn/CLASS NAME ct/CLASS_TIMING r/HOUELY_RATE l/LOCATION","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"* This command adds a new class to keep track of all classes that the user is teaching.","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"addclass cn/Sec 4 A Maths ct/mon 11:30-13:30 r/70 l/Nex Tuition Center","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"Adds a new class with name \u0027Sec 4 A Maths\u0027, with class timing MON 11.30-13:30, with hourly rate of $70, at Nex ","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"Tuition Center.","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"addclass cn/Sec 4 E Maths ct/tue 12:30-14:30 r/65 l/Block 123, Clementi Ave 6, #14-41","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"Adds a new class with name \u0027Sec 4 E Maths\u0027, with class timing Tue 12.30-14:30, with hourly rate of $65, at Block 123, Clementi Ave 6, #14-41.","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"## Adding student/students to a class: `addtoclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"Ongzl"},"content":"Add a single or multiple students to an existing class","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"addtoclass CLASS_INDEX STUDENT_INDEX...","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"* This command adds any number of existing students into an existing class.","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"* `CLASS_INDEX` is the index number of the class in the displayed class list in the `classes` tab, which will be ","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"  receiving the new students.","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"* `STUDENT_INDEX...` are the index number/s of the students shown in the displayed student list, these students are ","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"  to be added into the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"addtoclass 1 1 2 3","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"Adds the 1st, 2nd and 3rd student in the displayed student list in the `students` tab into the 1st class in the ","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"displayed class list in the `classes` tab.","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"## Delete a class: `deleteclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"Ongzl"},"content":"Deletes the specified class from the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"Ongzl"},"content":"deleteclass INDEX","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"Ongzl"},"content":"* Deletes the class at the specified `INDEX`.","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"Ongzl"},"content":"* The index refers to the index number shown in the displayed class list in the `classes` tab.","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"Ongzl"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"Ongzl"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"Ongzl"},"content":"* `listclass` followed by `delete 2` deletes the 2nd class in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":197,"author":{"gitId":"softmagnet"},"content":"## Listing all students : `list`","lastModifiedDate":"2021-10-01"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"yourally2"},"content":"Shows a list of all students in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Ongzl"},"content":"## Listing all the classes: `listclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"Ongzl"},"content":"Shows a list of all students in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"Ongzl"},"content":"Format: `listclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"softmagnet"},"content":"## Editing a student : `edit`","lastModifiedDate":"2021-10-01"},{"lineNumber":212,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"yourally2"},"content":"Edits an existing student in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"softmagnet"},"content":"Format:","lastModifiedDate":"2021-10-01"},{"lineNumber":217,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":218,"author":{"gitId":"softmagnet"},"content":"edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [ct/CLASS_TIMING] [l/LOCATION] [r/HOURLY_RATE] [t/TAG]…​","lastModifiedDate":"2021-10-01"},{"lineNumber":219,"author":{"gitId":"softmagnet"},"content":"[nok/] [p/NOK_NAME] [p/NOK_PHONE_NUMBER] [e/NOK_EMAIL]","lastModifiedDate":"2021-10-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"softmagnet"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student","lastModifiedDate":"2021-10-01"},{"lineNumber":224,"author":{"gitId":"softmagnet"},"content":"list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-01"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"softmagnet"},"content":"* An optional `nok/` field can be provided to edit the student\u0027s next-of-kin. All fields that come after `nok/`","lastModifiedDate":"2021-10-01"},{"lineNumber":227,"author":{"gitId":"softmagnet"},"content":"will be for the student\u0027s next-of-kin. (same rule from `add` command applies)","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"softmagnet"},"content":"  * if `nok/` is provided, at least one of the optional fields belonging to NOK must be provided.","lastModifiedDate":"2021-10-01"},{"lineNumber":229,"author":{"gitId":"yourally2"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"yourally2"},"content":"  * You can remove all the student\u0027s tags by typing `t/` without","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"softmagnet"},"content":"Examples (editing student information only):","lastModifiedDate":"2021-10-01"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st student to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"yourally2"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd student to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"yourally2"},"content":"* `edit 3 ct/Mon 1pm to 3pm r/$50` Edits the class timing and hourly rate of the 3rd student to be `Mon 1pm to 3pm` and `$50` respectively.","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"yourally2"},"content":"* `edit 1 n/kevin p/12345678 nok/ n/Stuart p/ 87654321` Edits the name and phone number of student 1 to become kevin and 12345678 and set his next-of-kin\u0027s name to Stuart and number of next-of-kin to be 87654321.","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"bernardwan"},"content":"* `edit 4 n/John Walker l/4 Petir Road #16-04 Singapore 657891` Edits the name and location of the 4th person to be","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"bernardwan"},"content":"   `John Walker` and `4 Petir Road #16-04 Singapore 657891` respectively.","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"softmagnet"},"content":"Examples (also editing parent information):","lastModifiedDate":"2021-10-01"},{"lineNumber":242,"author":{"gitId":"softmagnet"},"content":"* `edit 2 nok/ p/98429239 ` Edits 2nd student\u0027s NOK\u0027s number to be 98429239.","lastModifiedDate":"2021-10-01"},{"lineNumber":243,"author":{"gitId":"softmagnet"},"content":"* `edit 3 ct/Mon 3-4pm nok/ p/98429239 ` Edits 3rd student\u0027s class timing to be Monday 3-4pm while also editing","lastModifiedDate":"2021-10-01"},{"lineNumber":244,"author":{"gitId":"softmagnet"},"content":"NOK\u0027s number to be 98429239.","lastModifiedDate":"2021-10-01"},{"lineNumber":245,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"Ongzl"},"content":"## Editing a class: `editclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"Ongzl"},"content":"Edits an existing class in the class list in the `classes` tab","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"Ongzl"},"content":"editclass 1 [cn/CLASS_NAME] [ct/CLASS_TIMING] [r/RATE] [l/LOCATION]","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"Ongzl"},"content":"* Edits the class at the specified `INDEX`. The index refers to the index number shown in the displayed class","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"Ongzl"},"content":"  list in the `classes` tab. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"Ongzl"},"content":"* `editclass 1 ct/wed 15:00-17:00` Edits the 1st class in the class list class timing to be WED 15:00-17:00","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"Ongzl"},"content":"## Locating students by name: `findname`","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"yourally2"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"Ongzl"},"content":"## Locating class by class timing : `findclass`","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"Ongzl"},"content":"Finds a class whose class timing matches the given class timing.","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Ongzl"},"content":"Format: `findclass CLASS_TIMING`","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"Ongzl"},"content":"\u003c!---todo fill in inner working---\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"Ongzl"},"content":"* `findclass mon 11:00-12:00` returns the class with class timing at MON 11:00-12:00.","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"Ongzl"},"content":"## Locating class by class name: `findclassname`","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"Ongzl"},"content":"Finds a class whose class name matches the given keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"Ongzl"},"content":"Format: `findclassname KEYWORD`","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"Ongzl"},"content":"\u003c!---todo fill in inner working---\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"Ongzl"},"content":"* `findclassname math` returns all the classes with math in the class name.","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"softmagnet"},"content":"## Clearing all entries : `clear`","lastModifiedDate":"2021-10-01"},{"lineNumber":307,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"softmagnet"},"content":"## Exiting the program : `exit`","lastModifiedDate":"2021-10-01"},{"lineNumber":314,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":326,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":332,"author":{"gitId":"Ongzl"},"content":"### Showing the schedule for a specific day : `schedule`","lastModifiedDate":"2021-10-01"},{"lineNumber":333,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"Ongzl"},"content":"Shows the contacts of students who have classes on a specific day.","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"Ongzl"},"content":"Format: `schedule DAY`","lastModifiedDate":"2021-10-01"},{"lineNumber":337,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":338,"author":{"gitId":"Ongzl"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":339,"author":{"gitId":"Ongzl"},"content":"* `schedule Monday` will show all contacts with classes on monday.","lastModifiedDate":"2021-10-01"},{"lineNumber":340,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"bernardwan"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [ct/CLASS_TIMING] [r/HOURLY_RATE] [t/TAG] [l/LOCATION]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"Ongzl"},"content":"**Schedule** | `schedule DAY`","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"yourally2":12,"Ongzl":124,"softmagnet":55,"bernardwan":5,"-":169}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"bernardwan"},"content":"    content: \"TimesTable\";","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bernardwan":1,"-":294}},{"path":"docs/diagrams/plantuml/FindXYZ.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"\":Logic\" -\u003e \":FindXYZCommand\" : execute()","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"activate \":FindXYZCommand\"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"\":FindXYZCommand\" -\u003e \":Model\" : updateFilteredPersonList(predicate)","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"activate \":Model\"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"\":Model\" -\u003e \"filteredStudents:FilteredList\" : setPredicate(predicate)","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"activate \"filteredStudents:FilteredList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"softmagnet":11}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"title: TimesTable","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F11-1/tp/branch/master/graph/badge.svg?token\u003dNNN2J2NDB2)](https://codecov.io/gh/AY2122S1-CS2103T-F11-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"**TimesTable is a desktop app for managing your tuition students and classes, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"While it has a GUI, it can be controlled by typing in commands using the CLI.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"If you can type fast, TimesTable can get your class management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"* If you are interested in using TimesTable, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"* If you are interested about developing TimesTable, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"##Features","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"###Student Management","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"TimesTable supports all basic contact management commands such as adding of students, editing of contact info,","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"deleting students, finding students, sorting, etc. Furthermore, TimesTable also stores the Next-of-Kin(NOK) information of the student,","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"which is important and often used. This is displayed to the right of the student information.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"###Class Management","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"![ClassList](images/ClassList.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"TimesTable allows users to easily create and manage their classes. The Class tab shows all the information","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"about your various classes at a glance, with the student information in the sidebar on the right. Users can ","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"easily add and remove students from the various classes using the commands. The class list can also be filtered","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"to search for a  specific class.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"###View Timetable","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"![Timetable](images/Timetable.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"TimesTable automatically generates a timetable for you based on the classes that you have added.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"Simply head over to the Timetable tab by clicking on it or using the view command.","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bernardwan":27,"-":14}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Ongzl"},"content":"Simply add the following to [`seedu.address.ui.studenttab.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Ongzl":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"s7u4rt99":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_INVALID_CLASS_DISPLAYED_INDEX \u003d \"The class index provided is invalid\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CLASHING_CLASS_TIMING \u003d \"The operation aborted because it will introduce a clash\"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"            + \" in class timing.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CLASSES_LISTED_OVERVIEW \u003d \"%1$d classes listed!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"softmagnet":5,"-":14}},{"path":"src/main/java/seedu/address/logic/CommandObserver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Interface to represent the observers of command class.","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public interface CommandObserver {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the view of the observer.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexOfTabToView tab index to change the view to.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    public void updateView(Integer indexOfTabToView);","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the class selected of the observer.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexOfClassToSelect class index to change the selected to.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public void updateClass(Integer indexOfClassToSelect);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":22}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    void setCommandObserver(CommandObserver commandObserver);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yourally2":2,"s7u4rt99":2,"Ongzl":4,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    public void setCommandObserver(CommandObserver commandObserver) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        Command.setCommandObserver(commandObserver);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        return model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yourally2":3,"s7u4rt99":5,"Ongzl":4,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NOK + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_TAG + \"owesMoney \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NOK + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NAME + \"Jack Doe \"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_PHONE + \"10987654 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_EMAIL + \"jackd@example.com \"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Student added: %1$s\";","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    private final Student studentToAdd;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"     * Creates an AddCommand to add the specified {@code Person}.","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"     * We always pass in a new {@code TuitionClass}, and check if it alr exists","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        studentToAdd \u003d student;","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        if (model.hasPerson(studentToAdd)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        model.addPerson(studentToAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 studentToAdd.equals(((AddCommand) other).studentToAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":11,"s7u4rt99":1,"Ongzl":13,"softmagnet":2,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.CommandObserver;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    private static final ArrayList\u003cCommandObserver\u003e commandObservers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    public static void setCommandObserver(CommandObserver commandObserver) {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        commandObservers.add(commandObserver);","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the CommandObservers by calling the updateView method for each of them.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexOfTabToView index of tab to be viewed.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public void updateView(Integer indexOfTabToView) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        for (CommandObserver commandObserver : commandObservers) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"            commandObserver.updateView(indexOfTabToView);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the CommandObservers by calling the updateClass command.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexOfClassToSelect index of class to be selected.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    public void updateClass(Integer indexOfClassToSelect) {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        for (CommandObserver commandObserver : commandObservers) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"            commandObserver.updateClass(indexOfClassToSelect);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"s7u4rt99":32,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        model.deletePerson(studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete));","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_RATE + \"RATE] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"            + \"[\" + PREFIX_CLASSTIMING + \"CLASS TIMING] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d createEditedPerson(studentToEdit, editPersonDescriptor);","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasPerson(editedStudent)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    private static Student createEditedPerson(Student studentToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(studentToEdit.getAddress());","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        // Nok","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"        Name nokName \u003d editPersonDescriptor.getNokName().orElse(studentToEdit.getNok().getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"        Phone nokPhone \u003d editPersonDescriptor.getNokPhone().orElse(studentToEdit.getNok().getPhone());","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        Email nokEmail \u003d editPersonDescriptor.getNokEmail().orElse(studentToEdit.getNok().getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"        Address nokAddress \u003d editPersonDescriptor.getNokAddress().orElse(studentToEdit.getNok().getAddress());","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"        Nok nok \u003d new Nok(nokName, nokPhone, nokEmail, nokAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail, updatedAddress, nok, updatedTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"        private ArrayList\u003cTuitionClass\u003e tuitionClasses;","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"        private ClassName className;","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"        private ClassTiming classTiming;","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"        private Location location;","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"        private Rate rate;","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"yourally2"},"content":"        private Name nokName;","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"yourally2"},"content":"        private Phone nokPhone;","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"yourally2"},"content":"        private Email nokEmail;","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"yourally2"},"content":"        private Address nokAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"yourally2"},"content":"            setNokName(toCopy.nokName);","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"yourally2"},"content":"            setNokPhone(toCopy.nokPhone);","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"            setNokEmail(toCopy.nokEmail);","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"yourally2"},"content":"            setNokAddress(toCopy.nokAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"Ongzl"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, location, rate, className, classTiming,","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"Ongzl"},"content":"                    tuitionClasses, tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"Ongzl"},"content":"        public void setClassName(ClassName className) {","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"Ongzl"},"content":"            this.className \u003d className;","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"Ongzl"},"content":"        public Optional\u003cClassName\u003e getClassName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"Ongzl"},"content":"            return Optional.ofNullable(className);","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"Ongzl"},"content":"        public void setRate(Rate rate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"Ongzl"},"content":"            if (tuitionClasses !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"Ongzl"},"content":"                TuitionClass tuitionClass \u003d this.tuitionClasses.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"Ongzl"},"content":"                TuitionClass editedTuitionClass \u003d new TuitionClass(tuitionClass.getClassName(),","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"Ongzl"},"content":"                        tuitionClass.getClassTiming(), tuitionClass.getLocation(), rate);","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"Ongzl"},"content":"                this.tuitionClasses \u003d new ArrayList\u003c\u003e(Arrays.asList(editedTuitionClass));","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"Ongzl"},"content":"            this.rate \u003d rate;","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"Ongzl"},"content":"        public Optional\u003cRate\u003e getRate() {","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"Ongzl"},"content":"            return Optional.ofNullable(rate);","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"bernardwan"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"Ongzl"},"content":"            if (tuitionClasses !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"Ongzl"},"content":"                TuitionClass tuitionClass \u003d this.tuitionClasses.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"Ongzl"},"content":"                TuitionClass editedTuitionClass \u003d new TuitionClass(tuitionClass.getClassName(),","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"Ongzl"},"content":"                        tuitionClass.getClassTiming(), location, tuitionClass.getRate());","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"Ongzl"},"content":"                this.tuitionClasses \u003d new ArrayList\u003c\u003e(Arrays.asList(editedTuitionClass));","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"bernardwan"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"Ongzl"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"Ongzl"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"Ongzl"},"content":"        public void setClassTiming(ClassTiming classTiming) {","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"Ongzl"},"content":"            if (tuitionClasses !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"Ongzl"},"content":"                TuitionClass tuitionClass \u003d this.tuitionClasses.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"Ongzl"},"content":"                TuitionClass editedTuitionClass \u003d new TuitionClass(tuitionClass.getClassName(),","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"Ongzl"},"content":"                        classTiming, tuitionClass.getLocation(), tuitionClass.getRate());","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"Ongzl"},"content":"                this.tuitionClasses \u003d new ArrayList\u003c\u003e(Arrays.asList(editedTuitionClass));","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"Ongzl"},"content":"            this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":268,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":269,"author":{"gitId":"Ongzl"},"content":"        public Optional\u003cClassTiming\u003e getClassTiming() {","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"Ongzl"},"content":"            return Optional.ofNullable(classTiming);","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"Ongzl"},"content":"        //public Optional\u003cArrayList\u003cTuitionClass\u003e\u003e getTuitionClasses() {","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"Ongzl"},"content":"        //    return (tuitionClasses !\u003d null) ? Optional.of(tuitionClasses)","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"Ongzl"},"content":"        //            : Optional.empty();","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"Ongzl"},"content":"        //}","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"Ongzl"},"content":"        //public void setTuitionClasses(ArrayList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"Ongzl"},"content":"        //    this.tuitionClasses \u003d tuitionClasses;","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"Ongzl"},"content":"        //}","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"yourally2"},"content":"        public void setNokName(Name nokName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":286,"author":{"gitId":"yourally2"},"content":"            this.nokName \u003d nokName;","lastModifiedDate":"2021-10-06"},{"lineNumber":287,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":288,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":289,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cName\u003e getNokName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":290,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokName);","lastModifiedDate":"2021-10-06"},{"lineNumber":291,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":292,"author":{"gitId":"yourally2"},"content":"        public void setNokPhone(Phone nokPhone) {","lastModifiedDate":"2021-10-06"},{"lineNumber":293,"author":{"gitId":"yourally2"},"content":"            this.nokPhone \u003d nokPhone;","lastModifiedDate":"2021-10-06"},{"lineNumber":294,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":295,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":296,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cPhone\u003e getNokPhone() {","lastModifiedDate":"2021-10-06"},{"lineNumber":297,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokPhone);","lastModifiedDate":"2021-10-06"},{"lineNumber":298,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":299,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":300,"author":{"gitId":"yourally2"},"content":"        public void setNokEmail(Email nokEmail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":301,"author":{"gitId":"yourally2"},"content":"            this.nokEmail \u003d nokEmail;","lastModifiedDate":"2021-10-06"},{"lineNumber":302,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":303,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":304,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cEmail\u003e getNokEmail() {","lastModifiedDate":"2021-10-06"},{"lineNumber":305,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokEmail);","lastModifiedDate":"2021-10-06"},{"lineNumber":306,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":307,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":308,"author":{"gitId":"yourally2"},"content":"        public void setNokAddress(Address nokAddress) {","lastModifiedDate":"2021-10-06"},{"lineNumber":309,"author":{"gitId":"yourally2"},"content":"            this.nokAddress \u003d nokAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":310,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":311,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":312,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cAddress\u003e getNokAddress() {","lastModifiedDate":"2021-10-06"},{"lineNumber":313,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":314,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":315,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":318,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":325,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":326,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":327,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":328,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":352,"author":{"gitId":"Ongzl"},"content":"                    //\u0026\u0026 getTuitionClasses().equals(e.getTuitionClasses())","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getRate().equals(e.getRate())","lastModifiedDate":"2021-10-08"},{"lineNumber":354,"author":{"gitId":"s7u4rt99"},"content":"                    \u0026\u0026 getClassTiming().equals(e.getClassTiming())","lastModifiedDate":"2021-10-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yourally2":62,"s7u4rt99":12,"Ongzl":54,"softmagnet":8,"bernardwan":9,"-":213}},{"path":"src/main/java/seedu/address/logic/commands/FindNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findname\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public FindNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof FindNameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 predicate.equals(((FindNameCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yourally2":1,"softmagnet":6,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/FindTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":" * Finds and lists all persons in address book whose list of tags contains any of the argument keywords.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findtag\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose list of tags contains any of \"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" Maths, Physics\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    private final TagsContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public FindTagCommand(TagsContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof FindTagCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 predicate.equals(((FindTagCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yourally2":1,"softmagnet":12,"-":29}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose class timing contain any of \"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"            + \"Example: \" + COMMAND_WORD + \" wed tue\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    private final ClassTimingContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    public ScheduleCommand(ClassTimingContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"        //requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        //model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        //return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        //        String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        return null;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"                || (other instanceof ScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 predicate.equals(((ScheduleCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Ongzl":30,"softmagnet":6}},{"path":"src/main/java/seedu/address/logic/commands/SelectClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"public class SelectClassCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    public static final String COMMAND_WORD \u003d \"class\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Selects the appropriate class\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"            + \"Parameters: CLASS INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public static final String INVALID_TAB \u003d \"This class doesn\u0027t exists.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"            + \"You can only switch to indexes shown in the Classlist.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    public SelectClassCommand(Index targetIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        List\u003cTuitionClass\u003e lastShownList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        TuitionClass tuitionClass \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        updateClass(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        return new CommandResult(\"Viewing class \" + tuitionClass.toString(),","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"                false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"yourally2":34,"s7u4rt99":2,"Ongzl":5}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts students/classes by specified\"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"            + \" parameter and order\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: PARAMETER_TO_SORT_BY DIRECTION_OF_SORT\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"            + \"Example: \" + COMMAND_WORD + \" name asc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    public static final String INVALID_SORTBY \u003d \"The parameter to sort by can only be: name or timing\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public static final String INVALID_DIRECTIONOFSORT \u003d \"The direction of sort can only be asc or desc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    private final String sortBy;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    private final String directionOfSort;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a new SortCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @param sortBy sortBy keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     * @param directionOfSort directionOfSort keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public SortCommand(String sortBy, String directionOfSort) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        this.sortBy \u003d sortBy;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        this.directionOfSort \u003d directionOfSort;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        // sort the studentList;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        if (sortBy.equals(\"name\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"            ArrayList\u003cStudent\u003e toSort \u003d new ArrayList\u003cStudent\u003e(model.getFilteredStudentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"            if (directionOfSort.equals(\"asc\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"                toSort.sort((student1, student2) -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                        student1.getName().toString().compareTo(student2.getName().toString()));","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"                toSort.sort((student1, student2) -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"                        student2.getName().toString().compareTo(student1.getName().toString()));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"            model.setStudents(toSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        } else if (sortBy.equals(\"timing\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"            ArrayList\u003cTuitionClass\u003e toSort \u003d new ArrayList\u003cTuitionClass\u003e(model.getFilteredTuitionClassList());","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"            if (directionOfSort.equals(\"asc\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"                toSort.sort((class1, class2) -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"                        class1.getClassTiming().compareTo(class2.getClassTiming()));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"                toSort.sort((class1, class2) -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"                        class2.getClassTiming().compareTo(class1.getClassTiming()));","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"            model.setClasses(toSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"            return new CommandResult(\"sort by\" + sortBy","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"                    + \" has not been implemented by the developers\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        return new CommandResult(\"Sorted students based on \" + sortBy","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"                + \" in \" + directionOfSort + \" direction\");","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"        } else if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        } else if (obj instanceof SortCommand) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"            SortCommand sortCommand \u003d (SortCommand) obj;","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"            return this.directionOfSort.equals(sortCommand.directionOfSort) \u0026\u0026 this.sortBy.equals(sortCommand.sortBy);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":87}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" * Sets the UI to View the tab selected.","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Switches tab to specified tab\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: TAB NAME\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"            + \"Example: \" + COMMAND_WORD + \" timetable\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    public static final String INVALID_TAB \u003d \"This tab doesn\u0027t exists.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"            + \"You can only switch to students, timetable or classes.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    private final int indexToView;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Creates an ViewCommand to view the specified tab index.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    public ViewCommand(int indexToView) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        this.indexToView \u003d indexToView;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        String tabToView \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        if (indexToView \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"            tabToView \u003d \"students\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        } else if (indexToView \u003d\u003d 1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"            tabToView \u003d \"classes\";","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        } else if (indexToView \u003d\u003d 2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"            tabToView \u003d \"timetable\";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        updateView(indexToView);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        return new CommandResult(\"Successfully switched to \" + tabToView + \" tab\",","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        } else if (obj instanceof ViewCommand) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"            ViewCommand viewCommand \u003d (ViewCommand) obj;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"            return this.indexToView \u003d\u003d viewCommand.indexToView;","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":57}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/AddClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.exceptions.InvalidClassException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"public class AddClassCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"addclass\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New class added: %1$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"This class already exists in the address book\";","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public static final Object MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a class to the address book.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASS_NAME + \"CLASS NAME \"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASSTIMING + \"CLASS TIMING \"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_RATE + \"RATE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_LOCATION + \"LOCATION\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"            + PREFIX_CLASS_NAME + \"Sec 4 A Maths \"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASSTIMING + \"MON 11:30-13:30 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_RATE + \"70 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_LOCATION + \"Nex Tuition Center\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    private final TuitionClass tuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public AddClassCommand(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        this.tuitionClass \u003d tuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"            model.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        } catch (InvalidClassException ice) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_CLASHING_CLASS_TIMING);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tuitionClass));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"s7u4rt99":1,"Ongzl":5,"softmagnet":47}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/AddToClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.classcommands.EditClassCommand.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.exceptions.DuplicateStudentInClassException;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"public class AddToClassCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"addtoclass\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds students to a class by the index number used \"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"            + \"in the displayed class and person list.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"            + \"Parameters: CLASS_INDEX \"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"            + \"STUDENT_INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"            + \"1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"            + \"2 3 5 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"            + \"(adds students indexed 2, 3 and 5 to class indexed 1)\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"Successfully added students to class \";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"    private final Index toEditClassIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cIndex\u003e studentIndices;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     * Constructs AddToClassCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"     * @param indexArray ArrayList of index.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    public AddToClassCommand(ArrayList\u003cIndex\u003e indexArray) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(indexArray);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        //the first index is the index of class in filtered class list that students would be added to","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        toEditClassIndex \u003d indexArray.get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        //the remaining indices are those of the students in filtered student list","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        studentIndices \u003d indexArray.subList(1, indexArray.size());","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    //TODO: need consider if class alr has that name","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        //get names to be added","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e lastShownStudentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"        checkIndicesAreValid(studentIndices, lastShownStudentList);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cName\u003e namesToAdd \u003d createNameList(studentIndices, lastShownStudentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        //get class to add to","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        TuitionClass classToAddTo \u003d lastShownClassList.get(toEditClassIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        //get updated student list","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        UniqueNameList currentStudentNameList \u003d classToAddTo.getStudentList();","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        UniqueNameList updatedStudentNameList \u003d new UniqueNameList();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"            updatedStudentNameList.addAll(currentStudentNameList);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"            updatedStudentNameList.addAll(namesToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        } catch (DuplicateStudentInClassException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON + e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        //create edit class descriptor","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor editClassDescriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        editClassDescriptor.setUniqueNameList(updatedStudentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"        //swap out old tuition class with new tuition class","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d EditClassCommand.createEditedClass(classToAddTo, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        model.setClass(classToAddTo, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SUCCESS, editedClass));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"    private ArrayList\u003cName\u003e createNameList(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e lastShownStudentList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        studentIndices.stream().forEach(index -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"            Student student \u003d lastShownStudentList.get(index.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"            nameList.add(student.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"        });","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        return nameList;","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"    private void checkIndicesAreValid(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e lastShownStudentList)","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        int size \u003d lastShownStudentList.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        for (Index index : studentIndices) {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"            if (index.getZeroBased() \u003e\u003d size) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":1,"Ongzl":9,"softmagnet":99,"bernardwan":1}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/DeleteClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"public class DeleteClassCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    public static final String COMMAND_WORD \u003d \"deleteclass\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Class deleted: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_MISSING_CLASS \u003d \"This class does not exist in the address book\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"            + \": Deletes the class identified by the index in class list.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    public DeleteClassCommand(Index index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        TuitionClass tuitionClass \u003d lastShownClassList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        if (!model.hasTuitionClass(tuitionClass)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"            throw new CommandException(MESSAGE_MISSING_CLASS);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        model.deleteTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tuitionClass));","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"                || (other instanceof DeleteClassCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"                \u0026\u0026 index.equals(((DeleteClassCommand) other).index)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"bernardwan":55}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/EditClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"public class EditClassCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"editclass\";","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_EDIT_CLASS_SUCCESS \u003d \"Edited class: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to editclass must be provided.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in this class:\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the class identified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"            + \"by the index number used in the displayed person list \"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"            + \"(adding or removing students is done with separate commands!)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_CLASS_NAME + \"CLASS NAME] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_CLASSTIMING + \"CLASS TIMING] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_RATE + \"RATE] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASSTIMING + \"MON 13:30-15:30 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_RATE + \"100\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    private final Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    private final EditClassDescriptor editClassDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"     * Constructs a new EditClassCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"     * @param index of class to be edited.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"     * @param editClassDescriptor descriptor of new class.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"    public EditClassCommand(Index index, EditClassDescriptor editClassDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(index, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"        this.editClassDescriptor \u003d editClassDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"     * Creates EditedClass.","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"     * @param classToEdit to be editted.","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"     * @param editClassDescriptor to replace.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"     * @return edited TuitionClass.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"    public static TuitionClass createEditedClass(TuitionClass classToEdit, EditClassDescriptor editClassDescriptor) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"        assert classToEdit !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"        ClassName className \u003d editClassDescriptor.getClassName().orElse(classToEdit.getClassName());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        ClassTiming classTiming \u003d editClassDescriptor.getClassTiming().orElse(classToEdit.getClassTiming());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"        Location location \u003d editClassDescriptor.getLocation().orElse(classToEdit.getLocation());","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"        Rate rate \u003d editClassDescriptor.getRate().orElse(classToEdit.getRate());","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"        UniqueNameList uniqueNameList \u003d editClassDescriptor.getStudentList().orElse(classToEdit.getStudentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        return new TuitionClass(className, classTiming, location, rate, uniqueNameList);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownClassList.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        TuitionClass classToEdit \u003d lastShownClassList.get(index.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d createEditedClass(classToEdit, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"        model.setClass(classToEdit, editedClass);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(Model.PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLASS_SUCCESS, editedClass));","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"     * Stores the names of the student and the class involved in an addToClassCommand.","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"    public static class EditClassDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"        private ClassName className;","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"        private ClassTiming classTiming;","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"        private Location location;","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"        private Rate rate;","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        private UniqueNameList uniqueNameList;","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        public EditClassDescriptor() {","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"        public EditClassDescriptor(EditClassDescriptor toCopy) {","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"            setClassName(toCopy.className);","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"            setClassTiming(toCopy.classTiming);","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"            setRate(toCopy.rate);","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"            setUniqueNameList(toCopy.uniqueNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cClassName\u003e getClassName() {","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(className);","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"        public void setClassName(ClassName className) {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"            this.className \u003d className;","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cClassTiming\u003e getClassTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(classTiming);","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"        public void setClassTiming(ClassTiming classTiming) {","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"            this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cRate\u003e getRate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(rate);","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"        public void setRate(Rate rate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"            this.rate \u003d rate;","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cUniqueNameList\u003e getStudentList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(uniqueNameList);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"        public void setUniqueNameList(UniqueNameList uniqueNameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"Ongzl"},"content":"            this.uniqueNameList \u003d uniqueNameList;","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"            return CollectionUtil.isAnyNonNull(className, classTiming, rate, location, uniqueNameList);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":1,"Ongzl":47,"softmagnet":119}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/FindClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class FindClassCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findclass\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all classes whose class timing contains all of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            + \"Valid keywords are limited to:\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"            + \"    1) 3 letter abbreviation for day of the week\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"            + \"    2) time expressed in HH:MM-HH:MM format.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" Mon 11:30-12:30\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    private final ClassTimingContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    public FindClassCommand(ClassTimingContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"                String.format(Messages.MESSAGE_CLASSES_LISTED_OVERVIEW, model.getFilteredTuitionClassList().size()));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof FindClassCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 predicate.equals(((FindClassCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Ongzl":2,"softmagnet":42}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/FindClassNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class FindClassNameCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findclassname\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all classes whose class name contains all of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" sec4 physics\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    private final ClassNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    public FindClassNameCommand(ClassNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"                String.format(Messages.MESSAGE_CLASSES_LISTED_OVERVIEW, model.getFilteredTuitionClassList().size()));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Ongzl":2,"softmagnet":32}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/ListClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLASS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"public class ListClassCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"listclass\";","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all classes\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Ongzl":3,"softmagnet":19}},{"path":"src/main/java/seedu/address/logic/commands/classcommands/RemoveFromClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.logic.commands.classcommands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"public class RemoveFromClassCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public static final String COMMAND_WORD \u003d \"removefromclass\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes students from a class by the index\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"            + \" number used \"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"            + \"in the displayed class and person list.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"            + \"Parameters: CLASS_INDEX \"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"            + \"STUDENT_INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"            + \"2 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"            + \"3 4 5 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"            + \"(removes students indexed 3, 4 and 5 from class indexed 2)\";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_REMOVE_SUCCESS \u003d \"successfully removed students from class \";","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    private final Index toEditClassIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    private final List\u003cIndex\u003e studentIndices;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a remove from class command.","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexArray Array with index of class to remove from and index of students.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"    public RemoveFromClassCommand(ArrayList\u003cIndex\u003e indexArray) {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(indexArray);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        //the first index is the index of class in filtered class list that students would be removed from","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        toEditClassIndex \u003d indexArray.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        //the remaining indices are those of the students in filtered student list","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"        studentIndices \u003d indexArray.subList(1, indexArray.size());","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        //get names to be added","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        List\u003cStudent\u003e lastShownStudentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"        checkIndicesAreValid(studentIndices, lastShownStudentList);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cName\u003e namesToRemove \u003d createNameList(studentIndices, lastShownStudentList);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"        //get class to remove from","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        TuitionClass classToRemoveFrom \u003d lastShownClassList.get(toEditClassIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"        //get updated student list","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"        UniqueNameList currentStudentNameList \u003d classToRemoveFrom.getStudentList();","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"        UniqueNameList updatedStudentNameList \u003d new UniqueNameList();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"        updatedStudentNameList.addAll(currentStudentNameList);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        updatedStudentNameList.removeAll(namesToRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"        //create edit class descriptor","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"        EditClassCommand.EditClassDescriptor editClassDescriptor \u003d new EditClassCommand.EditClassDescriptor();","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        editClassDescriptor.setUniqueNameList(updatedStudentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"        //swap out old tuition class with new tuition class","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"        TuitionClass editedClass \u003d EditClassCommand.createEditedClass(classToRemoveFrom, editClassDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        model.setClass(classToRemoveFrom, editedClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_SUCCESS, editedClass));","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"    private ArrayList\u003cName\u003e createNameList(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e lastShownStudentList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"        studentIndices.stream().forEach(index -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"            Student student \u003d lastShownStudentList.get(index.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"            nameList.add(student.getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"        return nameList;","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"    private void checkIndicesAreValid(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e lastShownStudentList)","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"        int size \u003d lastShownStudentList.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"        for (Index index : studentIndices) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"            if (index.getZeroBased() \u003e\u003d size) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":7,"softmagnet":1,"bernardwan":91}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        String argsBeforeNok \u003d args;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        String argsAfterNok \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        if (args.contains(\"nok/\")) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"            String[] splitArgs \u003d args.split(\"nok/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"            argsBeforeNok \u003d splitArgs[0];","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"            argsAfterNok \u003d splitArgs[1];","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        Student student \u003d parseStudent(argsBeforeNok);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"        Nok nok \u003d parseNok(argsAfterNok);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        student.setNok(nok);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    private Student parseStudent(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        return new Student(name, phone, email, address, null , tagList);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"    private Nok parseNok(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        return new Nok(","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()),","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()),","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()),","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get())","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        );","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yourally2":23,"Ongzl":13,"softmagnet":2,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"import seedu.address.logic.commands.SelectClassCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.AddClassCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.AddToClassCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.classcommands.DeleteClassCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.EditClassCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.FindClassCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.FindClassNameCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.ListClassCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.classcommands.RemoveFromClassCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.classcommandparsers.AddClassCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.classcommandparsers.AddToClassCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.classcommandparsers.DeleteClassCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.classcommandparsers.EditClassCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.classcommandparsers.FindClassCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.classcommandparsers.FindClassNameCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.classcommandparsers.RemoveFromClassCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"import seedu.address.logic.parser.classcommandparsers.SelectClassCommandParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        //// student commands","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        case FindNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"            return new FindNameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        case FindTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"            return new FindTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        //// tuition class commands","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        case ListClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"            return new ListClassCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"        case AddClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"            return new AddClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        case AddToClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"            return new AddToClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        case RemoveFromClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"            return new RemoveFromClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        case EditClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"            return new EditClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"        case SelectClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"            return new SelectClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"        case DeleteClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"            return new DeleteClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        case FindClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"            return new FindClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"        case FindClassNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"            return new FindClassNameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        //// general application command","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":5,"s7u4rt99":7,"Ongzl":1,"softmagnet":43,"bernardwan":10,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    public static final Prefix PREFIX_CLASS_NAME \u003d new Prefix(\"cn/\");","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final Prefix PREFIX_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    public static final Prefix PREFIX_NOK \u003d new Prefix(\"nok/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public static final Prefix PREFIX_CLASSTIMING \u003d new Prefix(\"ct/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":1,"softmagnet":2,"bernardwan":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        // Tokenize twice, once for everything before nok and everything after it","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        String argsBeforeNok \u003d args;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        String argsAfterNok \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        if (args.contains(\"nok/\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"            String[] splitArgs \u003d args.split(\"nok/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"            argsBeforeNok \u003d splitArgs[0];","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"            argsAfterNok \u003d splitArgs[1];","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimapBeforeNok \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(argsBeforeNok, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"                                PREFIX_RATE, PREFIX_CLASSTIMING, PREFIX_LOCATION, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimapAfterNok \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer.tokenize(argsAfterNok, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"            index \u003d ParserUtil.parseIndex(argMultimapBeforeNok.getPreamble());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        // For before nok","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimapBeforeNok.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimapBeforeNok.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimapBeforeNok.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"                    .setAddress(ParserUtil.parseAddress(argMultimapBeforeNok.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_RATE).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"            editPersonDescriptor","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"                    .setRate(ParserUtil.parseRate(argMultimapBeforeNok.getValue(PREFIX_RATE).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_CLASSTIMING).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"            editPersonDescriptor","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"                    .setClassTiming(ParserUtil.parseClassTiming(argMultimapBeforeNok","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"                            .getValue(PREFIX_CLASSTIMING).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"            editPersonDescriptor","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"                    .setLocation(ParserUtil.parseLocation(argMultimapBeforeNok","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"                            .getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        parseTagsForEdit(argMultimapBeforeNok.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"        // For after nok","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor.setNokName(ParserUtil.parseName(argMultimapAfterNok.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor.setNokPhone(ParserUtil.parsePhone(argMultimapAfterNok.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor.setNokEmail(ParserUtil.parseEmail(argMultimapAfterNok.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"            editPersonDescriptor","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"                    .setNokAddress(ParserUtil.parseAddress(argMultimapAfterNok.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yourally2":37,"s7u4rt99":6,"softmagnet":6,"bernardwan":7,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/FindNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":" * Parses input arguments and creates a new FindNameCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommandParser implements Parser\u003cFindNameCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNameCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"     * and returns a FindNameCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public FindNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        return new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"softmagnet":10,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/FindTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":" * Parses input arguments and creates a new {@code FindTagCommand} object","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommandParser implements Parser\u003cFindTagCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"     * and returns a FindTagCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public FindTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        return new FindTagCommand(new TagsContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"softmagnet":10,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"     * Parses a {@code String classTiming} into an {@code ClassTiming}.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if the given {@code classTiming} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"    public static ClassTiming parseClassTiming(String classTiming) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(classTiming);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"        String trimmedClassTiming \u003d classTiming.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        if (!ClassTiming.isValidClassTiming(trimmedClassTiming)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(ClassTiming.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"        return new ClassTiming(trimmedClassTiming);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"bernardwan"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"        String trimmedAddress \u003d location.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"        if (!Location.isValidLocation(trimmedAddress)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"        return new Location(trimmedAddress);","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"     * Parses a {@code String nok} into an {@code Nok}.","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"     * @throws ParseException if the given {@code nok} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"yourally2"},"content":"    public static Address parseNok(String nok) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"        requireNonNull(nok);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        String trimmedAddress \u003d nok.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"yourally2"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"yourally2"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"     * Parses a {@code String rate} into a {@code Rate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"     * @throws ParseException if the given {@code rate} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"    public static Rate parseRate(String rate) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(rate);","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"        String trimmedRate \u003d rate.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"softmagnet"},"content":"        if (!Rate.isValidRate(trimmedRate)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"softmagnet"},"content":"        return new Rate(trimmedRate);","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"softmagnet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"softmagnet"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"softmagnet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"softmagnet"},"content":"     * Parses a {@code String className} into a {@code ClassName}.","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"softmagnet"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"softmagnet"},"content":"     * @throws ParseException if the given {@code className} is invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"softmagnet"},"content":"    public static ClassName parseClassName(String className) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(className);","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"softmagnet"},"content":"        String trimmedClassName \u003d className.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"softmagnet"},"content":"        if (!ClassName.isValidClassName(trimmedClassName)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(ClassName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"softmagnet"},"content":"        return new ClassName(trimmedClassName);","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yourally2":16,"s7u4rt99":15,"Ongzl":4,"softmagnet":39,"bernardwan":15,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        String[] classTimingKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        return new ScheduleCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(classTimingKeywords)));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Ongzl":28,"softmagnet":1}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private final String[] validSortByKeywords \u003d new String[]{\"name\", \"timing\"};","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final String[] validDirectionOfSortKeywords \u003d new String[]{\"asc\", \"desc\"};","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        String sortBy \u003d splitArgs[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        checkSortBy(sortBy);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        // sort by asc or desc","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        String directionOfSort \u003d splitArgs[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        checkDirectionOfSort(directionOfSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        return new SortCommand(sortBy, directionOfSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"     * Checks the string to see if it is a valid sortBy keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"     * @param sortBy String to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException If it is not a valid sortBy keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    public void checkSortBy(String sortBy) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(sortBy);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"        for (String validSortByKeyword : validSortByKeywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"            if (sortBy.equals(validSortByKeyword)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"                return;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_SORTBY));","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * Checks the string to see if its a valid direction of sort keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * @param directionOfSort String to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException If it is not a valid directionOfSort keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"    public void checkDirectionOfSort(String directionOfSort) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(directionOfSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        for (String validDirectionOfSortKeyword : validDirectionOfSortKeywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"            if (directionOfSort.equals(validDirectionOfSortKeyword)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"                return;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_DIRECTIONOFSORT));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":77}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * Parses input command and returns ViewCommand.","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * and returns an ViewCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        String tabToView \u003d splitArgs[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        int indexOfTabToView;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        switch (tabToView) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        case \"students\":","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"            indexOfTabToView \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        case \"classes\":","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"            indexOfTabToView \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        case \"timetable\":","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"            indexOfTabToView \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        return new ViewCommand(indexOfTabToView);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":53}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/AddClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.AddClassCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"public class AddClassCommandParser implements Parser\u003cAddClassCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    public AddClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(args, PREFIX_CLASS_NAME, PREFIX_RATE, PREFIX_CLASSTIMING, PREFIX_LOCATION);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLASS_NAME, PREFIX_RATE, PREFIX_CLASSTIMING, PREFIX_LOCATION)","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        ClassName className \u003d ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS_NAME).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        Rate rate \u003d ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        ClassTiming classTiming \u003d ParserUtil.parseClassTiming(argMultimap.getValue(PREFIX_CLASSTIMING).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        return new AddClassCommand(new TuitionClass(className, classTiming, location, rate, new UniqueNameList()));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":7,"softmagnet":37}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/AddToClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.AddToClassCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":" * Parses input arguments and creates a new AddToClassCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"public class AddToClassCommandParser implements Parser\u003cAddToClassCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    public AddToClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        String[] argsArray \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d mapToIndex(argsArray);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        return new AddToClassCommand(indexArray);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    private ArrayList\u003cIndex\u003e mapToIndex(String[] str) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        for (int i \u003d 0; i \u003c str.length; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"                indexArray.add(ParserUtil.parseIndex(str[i]));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"                        AddToClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        return indexArray;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Ongzl":5,"softmagnet":39}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/DeleteClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.classcommands.DeleteClassCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":" * Parses input arguments and creates a new DeleteClassCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"public class DeleteClassCommandParser implements Parser\u003cDeleteClassCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public DeleteClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"            return new DeleteClassCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"bernardwan":27}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/EditClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.EditClassCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"public class EditClassCommandParser implements Parser\u003cEditClassCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    public EditClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(args, PREFIX_CLASS_NAME, PREFIX_CLASSTIMING, PREFIX_RATE, PREFIX_LOCATION);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor editClassDescriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_CLASS_NAME).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setClassName(ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS_NAME).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_CLASSTIMING).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setClassTiming(ParserUtil","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"                    .parseClassTiming(argMultimap.getValue(PREFIX_CLASSTIMING).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_RATE).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setRate(ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        if (!editClassDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(EditClassCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        return new EditClassCommand(index, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Ongzl":7,"softmagnet":51}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/FindClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.FindClassCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class FindClassCommandParser implements Parser\u003cFindClassCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    private static final String VALIDATION_REGEX_DAY \u003d \"(?i)(MON|TUE|WED|THU|FRI|SAT|SUN){1}\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    private static final String VALIDATION_REGEX_TIME \u003d \"([01][0-9]|2[0-3]):[0-5][0-9]-([01][0-9]|2[0-3])\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"            + \":[0-5][0-9]{1}\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"     * Returns true if all keywords contained in {@code classTimingKeywords} is a three-letter abbreviation","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     * for day of the week or in a valid time format, HH:MM-HH:MM.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     * @param classTimingKeywords Array of string keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    private static boolean isAllValidKeyword(String[] classTimingKeywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        return Arrays.stream(classTimingKeywords).allMatch(keyword -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"            return keyword.matches(VALIDATION_REGEX_TIME) || keyword.matches(VALIDATION_REGEX_DAY);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    public FindClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        String[] classTimingKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        if (!isAllValidKeyword(classTimingKeywords)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        return new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(classTimingKeywords)));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Ongzl":18,"softmagnet":28}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/FindClassNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.FindClassNameCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class FindClassNameCommandParser implements Parser\u003cFindClassNameCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public FindClassNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        String[] classTimingKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        return new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(Arrays.asList(classTimingKeywords)));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Ongzl":4,"softmagnet":22}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/RemoveFromClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.commands.classcommands.RemoveFromClassCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":" * Parses input arguments and creates a new RemoveFromClassCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"public class RemoveFromClassCommandParser implements Parser\u003cRemoveFromClassCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public RemoveFromClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        String[] argsArray \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d mapToIndex(argsArray);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        return new RemoveFromClassCommand(indexArray);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    private ArrayList\u003cIndex\u003e mapToIndex(String[] str) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        for (int i \u003d 0; i \u003c str.length; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"                indexArray.add(ParserUtil.parseIndex(str[i]));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"                        RemoveFromClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        return indexArray;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"bernardwan":41}},{"path":"src/main/java/seedu/address/logic/parser/classcommandparsers/SelectClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.address.logic.parser.classcommandparsers;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import seedu.address.logic.commands.SelectClassCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"public class SelectClassCommandParser implements Parser\u003cSelectClassCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    public SelectClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        String[] splitArgs \u003d args.split(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        if (splitArgs.length \u003e 2) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        Index indexOfClassToView \u003d Index.fromOneBased(Integer.parseInt(splitArgs[1]));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        return new SelectClassCommand(indexOfClassToView);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"yourally2":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.UniqueStudentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.UniqueClassList;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    private final UniqueClassList classes;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        classes \u003d new UniqueClassList();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        this.students.setPersons(students);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"    public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"        this.classes.setClasses(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        setStudents(newData.getPersonList());","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        setClasses(newData.getTuitionClassList());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"    public boolean hasPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"     * Returns true if a tuition class with the same identity as {@code TuitionClass} exists in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"    public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        requireNonNull(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        return classes.contains(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        students.add(p);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"     * Adds a tuition class to the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"     * The tuition class must not already exist in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    public void addTuitionClass(TuitionClass t) {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        classes.add(t);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        students.setPerson(target, editedStudent);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"    public void removePerson(Student key) {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"        classes.removeStudent(key.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"    public void deleteTuitionClass(TuitionClass toDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"        classes.delete(toDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        return students.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e getPersonList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"    public ObservableList\u003cTuitionClass\u003e getTuitionClassList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"        return classes.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        return students.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"    public void addToClass(ClassName className, Name studentName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"        //TuitionClass tuitionClass \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"    public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"        classes.setClass(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":38,"Ongzl":5,"softmagnet":13,"bernardwan":5,"-":105}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    Predicate\u003cTuitionClass\u003e PREDICATE_SHOW_ALL_CLASS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"    boolean hasPerson(Student student);","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"    void deletePerson(Student target);","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"    void addPerson(Student student);","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"     * Returns true if a class with the same identity as {@code TuitionClass} exists in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"    boolean hasTuitionClass(TuitionClass tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"     * Adds the given tuition class.","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"     * {@code TuitionClass} must not already exist in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"    void addTuitionClass(TuitionClass tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"     * Deletes the given tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"     * The class must exist in the address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"    void deleteTuitionClass(TuitionClass target);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"    void setPerson(Student target, Student editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"    void updateFilteredPersonList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"    void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicateShowAllClass);","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"    /** Returns an unmodifiable view of the filtered tuition class list */","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"    ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList();","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"     * Replaces the given class {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"     * The Class identity of {@code editedClass} must not be the same as another existing class in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"    void setClass(TuitionClass target, TuitionClass editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"     * Replaces the filteredTuitionClass with the classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"    void setClasses(List\u003cTuitionClass\u003e classes);","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"     * Replaces the filtered student list with the classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"    void setStudents(List\u003cStudent\u003e students);","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"    /** Replaces the filtered student list */","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"    void replaceFilteredStudentList(List\u003cStudent\u003e studentList);","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"    /** Replaces the filtered tuition class list */","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"    void replaceFilteredTuitionClassList(List\u003cTuitionClass\u003e tuitionClasses);","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yourally2":15,"s7u4rt99":19,"Ongzl":7,"softmagnet":15,"bernardwan":5,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    private FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    private FilteredList\u003cTuitionClass\u003e filteredTuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        filteredTuitionClass \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"                new FilteredList\u003c\u003e(this.addressBook.getTuitionClassList());","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        return userPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        return addressBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"    public boolean hasPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        return addressBook.hasPerson(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"    public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"        requireNonNull(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"        return addressBook.hasTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"    public void deletePerson(Student target) {","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"    public void addPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"    public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"        addressBook.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"        updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"    public void deleteTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"        addressBook.deleteTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"yourally2"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"        addressBook.setPerson(target, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"yourally2"},"content":"        return filteredStudents;","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"yourally2"},"content":"    public void updateFilteredPersonList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"    public void replaceFilteredStudentList(List\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"        ObservableList\u003cStudent\u003e newList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"        newList.addAll(studentList);","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"        this.filteredStudents \u003d new FilteredList\u003c\u003e(newList);","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"    public void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"        filteredTuitionClass.setPredicate(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"    public void replaceFilteredTuitionClassList(List\u003cTuitionClass\u003e tuitionClassList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"        ObservableList\u003cTuitionClass\u003e newList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"        newList.addAll(tuitionClassList);","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"        this.filteredTuitionClass \u003d new FilteredList\u003c\u003e(newList);","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"    public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"        return filteredTuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"softmagnet"},"content":"    public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"        addressBook.setClass(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"Ongzl"},"content":"        updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"    public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"        addressBook.setClasses(classes);","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"    public void setStudents(List\u003cStudent\u003e studentsList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"        addressBook.setStudents(studentsList);","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":23,"s7u4rt99":23,"Ongzl":16,"softmagnet":12,"bernardwan":5,"-":138}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    ObservableList\u003cStudent\u003e getPersonList();","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"     * Returns an unmodifiable view of the class list.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"     * This list will not contain any duplicate classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"     * @return","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    ObservableList\u003cTuitionClass\u003e getTuitionClassList();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":2,"Ongzl":1,"softmagnet":6,"-":16}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bernardwan":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"softmagnet":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/Nok.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":" * Represents a students Next of Kin (ie parent etc.).","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"public class Nok extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    public Nok(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"        super(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"yourally2":14}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    // Identity (mandatory) fields","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    public Person(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress());","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        return Objects.hash(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":5,"-":96}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"public class Student extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    /* Each Student has 0..1 Nok */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private Nok nok;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"     * Student constructor","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public Student(","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"            Name name, Phone phone, Email email, Address address, Nok nok, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        super(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        this.nok \u003d nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    public void setNok(Nok nok) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        this.nok \u003d nok;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    public Nok getNok() {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        return nok;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    public ClassTiming getClassTiming() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        // TODO: Placeholder","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        // TODO: Placeholder","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"     * Returns tuition {@code Rate} of this student","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    public Rate getRate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        // Placeholder","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"     * Returns true if any {@code Tag} belonging to this student matches {@code keyword} in name ignoring case.","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    public boolean isAnyTagsMatching(String keyword) {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        return tags.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"                .anyMatch(tag -\u003e tag.isNameMatchingIgnoreCase(keyword));","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"     * We check if their tags are equal as well.","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        Student o \u003d (Student) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        return super.equals(other)","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.getTags().equals(getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        // Hashes the hashcode to produce a new hash","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        return Objects.hash(super.hashCode(), tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"        final StringBuilder builder \u003d new StringBuilder(super.toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        builder.append(\"\\nNext-of-Kin: \");","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        builder.append(nok.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"yourally2":84,"s7u4rt99":6,"Ongzl":2,"softmagnet":28,"bernardwan":3}},{"path":"src/main/java/seedu/address/model/person/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":" * updating of","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(UniqueStudentList.class);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        int listSize \u003d internalList.size();","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        /*","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"         * TODO:","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"         * As of the new implementation there is a possibility a Student has multiple classes, so this is commented out","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"         * for now","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"         *        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"         *","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"         *             if (internalList.get(i).getClassTiming().isEarlier(toAdd.getClassTiming())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"         *                 continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"         *             } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"         *                 internalList.add(i, toAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"         *                 break;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"         *             }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"         *         }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"        if (listSize \u003d\u003d 0 || internalList.size() \u003d\u003d listSize) {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"    public Student getStudent(Name name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        for (Student student : internalList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"            if (student.getName() \u003d\u003d name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"                return student;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"    public void setPersons(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"        logger.info(\"List of Students set from replace UniquePersonList.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"    public void setPersons(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"yourally2"},"content":"        if (!personsAreUnique(students)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"        logger.info(\"List of Students set from List\u003cStudent\u003e.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"yourally2"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"yourally2"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"yourally2"},"content":"    private boolean personsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"yourally2"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":47,"Ongzl":10,"softmagnet":1,"-":115}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yourally2":2,"softmagnet":3,"-":27}},{"path":"src/main/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":" * Tests if a {@code Person}\u0027s list of {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"                .anyMatch(keyword -\u003e student.isAnyTagsMatching(keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof TagsContainsKeywordsPredicate","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 keywords.equals(((TagsContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Ongzl":2,"softmagnet":28}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"     * Returns true if {@code tagName} of this {@code Tag} matches exactly with {@code keyword} ignoring case.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    public boolean isNameMatchingIgnoreCase(String keyword) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        return tagName.equalsIgnoreCase(keyword);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"softmagnet":7,"-":54}},{"path":"src/main/java/seedu/address/model/tuitionclass/ClassName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":" * Represents the name given to a tuition class by a user","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassName(String)}","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"public class ClassName {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    public final String className;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"     * Constructs a {@code ClassName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"     * @param className A valid class name.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    public ClassName(String className) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(className);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        checkArgument(isValidClassName(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public static boolean isValidClassName(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        return className;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof ClassName // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 className.equals(((ClassName) other).className)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"Ongzl":5,"softmagnet":46}},{"path":"src/main/java/seedu/address/model/tuitionclass/ClassTiming.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":" * Represents a Student\u0027s class timing in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassTiming(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"public class ClassTiming implements Comparable\u003cClassTiming\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"            \"Class Timing must be in the form DAY HH:MM-HH:MM, \"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"                    + \"\\nstart time must be earlier than end time, \\nand \"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"                    + \"start and end time has to start at the hour or half hour mark, but it can end at 23:59\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"     * The string has to be in the form DAY HH:MM-HH:MM eg MON 23:59-01:00","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"            \"^(?i)(MON |TUE |WED |THU |FRI |SAT |SUN )([01][0-9]|2[0-3]):[0-5][0-9]-([01][0-9]|2[0-3]):[0-5][0-9]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    public final String value;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    private final String day;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a {@code ClassTiming}.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming A valid class timing.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public ClassTiming(String classTiming) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(classTiming);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        checkArgument(isValidClassTiming(classTiming), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        value \u003d formatClassTiming(classTiming);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        startTime \u003d getStartTimeFromValue();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        endTime \u003d getEndTimeFromValue();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        day \u003d parseDay(value);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the endTime from value.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"     * @return The end time.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    private LocalTime getStartTimeFromValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(this.value);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        String startTime \u003d timePart[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        return LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the startTime from value.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * @return The start time.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"    private LocalTime getEndTimeFromValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(this.value);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"        String endTime \u003d timePart[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        return LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"     * Formats the classTiming day into caps.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming classTiming where day is going to be changed to caps.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"     * @return classTiming with the day in caps.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"    private String formatClassTiming(String classTiming) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"        String day \u003d classTiming.split(\" \")[0].toUpperCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        String timing \u003d classTiming.split(\" \")[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        return day + \" \" + timing;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Day from the ClassTiming object into the int representation of the day.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"     * @return int representation of the Day of the ClassTiming object","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"    public int getDayToInt() {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        // TODO: change day to enum","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"        switch (day.toUpperCase()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"        case \"MON\":","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"            return 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"        case \"TUE\":","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"            return 2;","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        case \"WED\":","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"            return 3;","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        case \"THU\":","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"            return 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        case \"FRI\":","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"            return 5;","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"        case \"SAT\":","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"            return 6;","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        case \"SUN\":","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"            return 7;","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"            return 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"     * Compares two ClassTiming objects.","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"     * @param time ClassTiming being compared to.","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if this ClassTiming is on an earlier day or has end time earlier than time\u0027s","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"     * start time, otherwise false.","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isEarlier(ClassTiming time) {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        return this.compareTo(time) \u003c 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"     * Sees if the classTiming object is after the LocalTime given.","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"     * @param time LocalTime being compared to.","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if ClassTiming is on a later day or has a start time later than time otherwise false.","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isAfter(LocalTime time) {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"        return this.getStartTime().isAfter(time);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the class timing string to retrieve the day.","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"     * @return The Day of the ClassTiming string.","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"    private String parseDay(String ct) {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"        String[] classTimingPart \u003d ct.split(\" \");","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"        return classTimingPart[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"     * Splits the class timing string to retrieve the start and end time in String form.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be split.","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"     * @return A String array consisting of the start time at index 0 and end time at index 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"s7u4rt99"},"content":"    private static String[] splitTiming(String ct) {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"        String[] ctSplit \u003d ct.split(\" \");","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"        String startEndTime \u003d ctSplit[1];","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"s7u4rt99"},"content":"        return startEndTime.split(\"-\");","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the input class timing string to retrieve the Start Time.","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"     * @return The start time of the input string.","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if ct does not start at the hour or half hour mark.","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"    private static LocalTime parseStartTime(String ct) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(ct);","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"        String startTime \u003d timePart[0];","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"        String startTimeMinutes \u003d startTime.split(\":\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"        if (!startTimeMinutes.equals(\"00\") \u0026\u0026 !startTimeMinutes.equals(\"30\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(\"Invalid start time\");","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"        return LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the input class timing string to retrieve the End Time.","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"     * @return The end time of the input string.","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if ct does not start at the hour or half hour mark.","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"    private static LocalTime parseEndTime(String ct) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(ct);","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"        String endTime \u003d timePart[1];","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"        String endTimeMinutes \u003d endTime.split(\":\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"        if (!endTimeMinutes.equals(\"00\") \u0026\u0026 !endTimeMinutes.equals(\"30\") \u0026\u0026 !endTime.equals(\"23:59\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(\"Invalid end time\");","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"Ongzl"},"content":"        return LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the start time of the class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"     * @return Start Time of ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"        return this.startTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the end time of the class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"     * @return End Time of ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"        return this.endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the day of the class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"     * @return Day of ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"    private String getDay() {","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"        return this.day;","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"Ongzl"},"content":"     * Returns boolean true if other is on the same day as this, false otherwise.","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"s7u4rt99"},"content":"     * @param other ClassTiming to compare to this.","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"Ongzl"},"content":"     * @return Boolean on whether this and other is on the same day.","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"Ongzl"},"content":"    public Boolean isSameDay(ClassTiming other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"Ongzl"},"content":"        if (this.getDayToInt() \u003d\u003d other.getDayToInt()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Ongzl"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the timing string without the day of the ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"s7u4rt99"},"content":"     * @return Timing of the ClassTiming without the Day.","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"s7u4rt99"},"content":"    public String getClassTiming() {","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"s7u4rt99"},"content":"        return this.value.split(\" \")[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":240,"author":{"gitId":"Ongzl"},"content":"     * Returns true if a given string is a valid class timing.","lastModifiedDate":"2021-10-17"},{"lineNumber":241,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isValidClassTiming(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"s7u4rt99"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"Ongzl"},"content":"            if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"s7u4rt99"},"content":"                LocalTime startTime \u003d parseStartTime(test);","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"s7u4rt99"},"content":"                LocalTime endTime \u003d parseEndTime(test);","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"Ongzl"},"content":"                return startTime.isBefore(endTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"Ongzl"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"Ongzl"},"content":"                return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":250,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":251,"author":{"gitId":"s7u4rt99"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"s7u4rt99"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"s7u4rt99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"                || (other instanceof ClassTiming // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"s7u4rt99"},"content":"                \u0026\u0026 value.equals(((ClassTiming) other).value)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"s7u4rt99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"s7u4rt99"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"s7u4rt99"},"content":"    public int compareTo(ClassTiming o) {","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"s7u4rt99"},"content":"        int thisDayInt \u003d getDayToInt();","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"s7u4rt99"},"content":"        String otherDay \u003d o.getDay();","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"s7u4rt99"},"content":"        int otherDayInt \u003d o.getDayToInt();","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime otherStartTime \u003d o.getStartTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"s7u4rt99"},"content":"        if (thisDayInt \u003c otherDayInt) {","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"s7u4rt99"},"content":"            return -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"s7u4rt99"},"content":"        } else if (otherDayInt \u003c thisDayInt) {","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"s7u4rt99"},"content":"            return 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"s7u4rt99"},"content":"        } else if (this.getStartTime().equals(otherStartTime)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"s7u4rt99"},"content":"            return 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"s7u4rt99"},"content":"            return otherStartTime.isAfter(this.getEndTime()) || this.getStartTime().isBefore(otherStartTime) ? -1 : 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"yourally2":2,"s7u4rt99":217,"Ongzl":70,"softmagnet":1,"bernardwan":1}},{"path":"src/main/java/seedu/address/model/tuitionclass/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":" * Represents a Person\u0027s class location in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"public class Location {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Class location can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    /*","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"     * @param location A valid class address.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    public Location(String location) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        value \u003d location;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"     * Returns true if a given string is a valid class location.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        return value;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"                \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"softmagnet":1,"bernardwan":55}},{"path":"src/main/java/seedu/address/model/tuitionclass/Rate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":" * Represents a Student\u0027s tuition rate in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"public class Rate {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"            \"Rate should not be negative and can \"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"                    + \"at most be up to 2 decimal places. You also cannot enter a decimal point without\"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"                    + \"following it up with at least one digit.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+(\\\\.\\\\d{1,2})?\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"     * Constructs a {@code Rate}","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"     * @param rate A valid tuition per hour rate.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public Rate(String rate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(rate);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        checkArgument(isValidRate(rate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        value \u003d rate;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"     * Returns true if a given string is a valid tuition rate.","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"     * @param test String representing rate to be tested.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"     * @return A boolean value.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public static boolean isValidRate(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof Rate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 value.equals(((Rate) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"softmagnet":56}},{"path":"src/main/java/seedu/address/model/tuitionclass/TuitionClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":" * Represents a tuition TuitionClass in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"public class TuitionClass {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    private final ClassTiming classTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    private final ClassName className;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    private final Location location;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    private final Rate rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"     * ArrayList of {@code Name}","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"     * Rationale for choosing Name as identifier:","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"     * If the {@code Student} objects are stored, any changes to a student would cause a cascade of updates in classes","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"     * the student is in.","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    private final UniqueNameList uniqueNameList;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"     * Represents a tuition class for Students to join. A {@code TuitionClass} can have multiple {@code Student}s.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"     * A class is uniquely identified by its timing; a single timing can only have _one_ class.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"     * A {@code Student} can have multiple {@code TuitionClass}es as well.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"     * @param className The name of the class to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"     * @param classTiming The timing of the class specified. This is the unique identifier (id) of the class.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"     * @param location The location of the class.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"     * @param rate How much it costs per hour to attend the class.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public TuitionClass(ClassName className, ClassTiming classTiming, Location location, Rate rate,","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"                        UniqueNameList uniqueNameList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(className, classTiming, location, rate);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        this.uniqueNameList \u003d uniqueNameList;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"     *  Represents a tuition class for Students to join. A {@code TuitionClass} can have multiple {@code Student}s.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"     * A class is uniquely identified by its timing; a single timing can only have _one_ class. Without the","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"     * UniqueNameList.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"     * A {@code Student} can have multiple {@code TuitionClass}es as well.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"     * @param className The name of the class to be created.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"     * @param classTiming The timing of the class specified. This is the unique identifier (id) of the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"     * @param location The location of the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"     * @param rate How much it costs per hour to attend the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    public TuitionClass(ClassName className, ClassTiming classTiming, Location location, Rate rate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"        requireAllNonNull(className, classTiming, location, rate);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"        this.uniqueNameList \u003d new UniqueNameList();","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"    public ClassName getClassName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        return className;","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"    public String getClassNameString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        return className.toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    public ClassTiming getClassTiming() {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        return classTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"    public LocalTime getStartTiming() {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        return classTiming.getStartTime();","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    public LocalTime getEndTiming() {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        return classTiming.getEndTime();","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"        return location;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"    public Rate getRate() {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"        return rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"     * Returns whether the tuition class contains the Student.","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"     * @return whether the tuition class contains the Student or not.","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"    public boolean containsStudent(Name name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"        return uniqueNameList.contains(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"    public UniqueNameList getStudentList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"        return uniqueNameList;","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"    public void addStudent(Name name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"        uniqueNameList.add(name);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"     * Removes student name from the name list.","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"     * @param name to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     * @return this after name has been removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"    public TuitionClass removeStudent(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"        if (uniqueNameList.contains(name)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"            uniqueNameList.remove(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"    public void addStudentList(UniqueNameList uniqueNameList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"        this.uniqueNameList.addAll(uniqueNameList);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"yourally2"},"content":"     * Checks if the TuitionClass is at this timing.","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"    public boolean isAtTiming(ClassTiming otherClassTiming) {","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"yourally2"},"content":"        return classTiming.equals(otherClassTiming);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"        if (!(other instanceof TuitionClass)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"        TuitionClass o \u003d (TuitionClass) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"        /* A class is uniquely identified by its timing; a single timing can only have _one_ class */","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"        return /*o.className.equals(getClassName()) \u0026\u0026*/ o.classTiming.equals(getClassTiming())","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.rate.equals(getRate()) \u0026\u0026 o.location.equals(getLocation());","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"bernardwan"},"content":"     * Returns true if the class timing of the class to be checked overlaps with this class.","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"    public boolean isOverlapping(TuitionClass toCheck) {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"        //return !(this.getClassTiming().isEarlier(toCheck.getClassTiming())","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"        //        || toCheck.getClassTiming().isEarlier(this.getClassTiming()));","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"        if (this.equals(toCheck)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"Ongzl"},"content":"        } else if (this.getClassTiming().isSameDay(toCheck.getClassTiming()) //on the same day","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 ((toCheck.getStartTiming().compareTo(this.getEndTiming()) \u003c 0","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 toCheck.getStartTiming().compareTo(this.getStartTiming()) \u003e\u003d 0) // \u0026\u0026 toCheck start time overlap","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"                // with this","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"                || (toCheck.getEndTiming().compareTo(this.getEndTiming()) \u003c\u003d 0","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 toCheck.getEndTiming().compareTo(this.getStartTiming()) \u003e 0) //toCheck end time overlap with this","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"                || (toCheck.getStartTiming().compareTo(this.getStartTiming()) \u003c\u003d 0 //toCheck starts earlier than this","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 toCheck.getEndTiming().compareTo(this.getEndTiming()) \u003e\u003d 0))) { //toCheck ends later than this","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"     * Checks if 2 TuitionClass are the same using ClassTiming.","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"Ongzl"},"content":"     * @param otherClass to be checked with this.","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"Ongzl"},"content":"     * @return boolean.","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"    public boolean isSameClass(TuitionClass otherClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"softmagnet"},"content":"        if (otherClass \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"softmagnet"},"content":"        return otherClass !\u003d null","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 otherClass.getClassTiming().equals(getClassTiming());","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isAfter(LocalTime time) {","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.isAfter(time);","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.getStartTime();","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.getEndTime();","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"    public int getDayToInt() {","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.getDayToInt();","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"bernardwan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"bernardwan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"bernardwan"},"content":"        builder.append(\"Class Timing: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"softmagnet"},"content":"                .append(getClassTiming())","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"softmagnet"},"content":"                .append(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"bernardwan"},"content":"        if (!getClassTiming().equals(getClassName())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"bernardwan"},"content":"            builder.append(\" Class Name: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"Ongzl"},"content":"                    .append(getClassName())","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"Ongzl"},"content":"                    .append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"Ongzl"},"content":"        builder.append(\"Location: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"Ongzl"},"content":"                .append(getLocation())","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"Ongzl"},"content":"                .append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"Ongzl"},"content":"        builder.append(\"Rate: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"Ongzl"},"content":"                .append(getRate())","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"Ongzl"},"content":"                .append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"bernardwan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yourally2":40,"s7u4rt99":21,"Ongzl":75,"softmagnet":85,"bernardwan":15}},{"path":"src/main/java/seedu/address/model/tuitionclass/UniqueClassList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.exceptions.DuplicateClassException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.exceptions.InvalidClassException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.exceptions.TuitionClassNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":" * A list of classes that makes sure there is no overlap between class timings.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"public class UniqueClassList implements Iterable\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    private final ObservableList\u003cTuitionClass\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    private final ObservableList\u003cTuitionClass\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"     * Adds a class to the list. TuitionClass must not overlap in timing with existing classes.","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"     * @param toAdd The tuition class to add.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public void add(TuitionClass toAdd) throws InvalidClassException {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        if (!isValidTiming(toAdd)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"            throw new InvalidClassException();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"     * Deletes a TuitionClass from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"     * @param toDelete TuitionClass to be deleted.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"    public void delete(TuitionClass toDelete) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"            throw new TuitionClassNotFoundException();","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"     * Removes a name from all the classes in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"     * @param name to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"    public void removeStudent(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"            TuitionClass tuitionClass \u003d internalList.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"            UniqueNameList nameList \u003d tuitionClass.getStudentList();","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"            if (nameList.contains(name)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"                TuitionClass editedTuitionClass \u003d tuitionClass.removeStudent(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"                this.setClass(tuitionClass, editedTuitionClass);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"        //todo check that classes are unique","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"        List\u003cTuitionClass\u003e editedClasses \u003d new ArrayList\u003c\u003e(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 0; i \u003c editedClasses.size(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"            for (int j \u003d i + 1; j \u003c editedClasses.size(); j++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"                if (editedClasses.get(i).equals(editedClasses.get(j))) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"                    editedClasses.remove(j);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        internalList.setAll(editedClasses);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"        //internalList.setAll(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"     * Checks if the class timing is valid (no overlaps with current classes).","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    public boolean isValidTiming(TuitionClass otherClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        requireNonNull(otherClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        for (TuitionClass tuitionClass : internalList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"            if (tuitionClass.isOverlapping(otherClass)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"     * Checks if there is a class with the timing specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    public boolean classExistAt(ClassTiming timing) {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        //TODO: probably need to modify cos need to consider overlap","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        return internalList.stream().anyMatch(c -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"            return c.getClassTiming().equals(timing);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"        });","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"     * Checks if there is an identical class in the internalMap.","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"    public boolean contains(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"        return internalList.stream().anyMatch(tuitionClass::isSameClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"     * Returns the class at the specified timing.","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"     * Throws an error if the timing is invalid or no classes exist at that timing.","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"    public TuitionClass getClassAt(ClassTiming timing) {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        requireNonNull(timing);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"        for (TuitionClass tuitionClass : internalList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"            if (tuitionClass.getClassTiming().equals(timing)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"                return tuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"        //if no class at specified timing returns null","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"        return null;","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"    public ObservableList\u003cTuitionClass\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"    public Iterator\u003cTuitionClass\u003e iterator() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"                || (other instanceof UniqueClassList // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 internalList.equals(((UniqueClassList) other).internalList));","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"bernardwan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"    public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"        /*","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"          if editedClass does not have same timing as target class and there\u0027s already another class with same timing","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"          as editedClass, then edit","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"        if (!target.isSameClass(editedClass) \u0026\u0026 contains(editedClass)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"        internalList.set(index, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"    //TODO: need a personsAreUnique method probably","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yourally2":29,"Ongzl":43,"softmagnet":51,"bernardwan":50}},{"path":"src/main/java/seedu/address/model/tuitionclass/UniqueNameList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.exceptions.DuplicateStudentInClassException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":" * Represents a unique list of names corresponding to the students","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":" * that a {@code TuitionClass} has.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"public class UniqueNameList implements Iterable\u003cName\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    private final ArrayList\u003cName\u003e internalList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    public UniqueNameList() {}","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public UniqueNameList(String[] nameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"        for (String name : nameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"            internalList.add(new Name(name));","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     * Checks to see if the name in argument is already in the NameList.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"     * @param toCheck Name to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"     * @return boolean, true if name is already in list, false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"    public boolean contains(Name toCheck) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     * Removes name from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"     * @param name to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"    public void remove(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        internalList.remove(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"     * Removes all names provided from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"     * @param names The UniqueNameList of names to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    public void removeAll(UniqueNameList names) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        for (Name name : names) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"            remove(name);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"     * Removes all names provided from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"     * @param names The list of names to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"    public void removeAll(List\u003cName\u003e names) {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"        internalList.removeAll(names);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     * Adds a name to the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     * @param toAdd name to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"     * @throws DuplicateStudentInClassException if name is already in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"    public void add(Name toAdd) throws DuplicateStudentInClassException {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"            throw new DuplicateStudentInClassException(toAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"     * Adds all the names in the argument into the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"     * @param names to be added in UniqueNameList form.","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"    public void addAll(UniqueNameList names) {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        for (Name name : names) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"            if (!this.contains(name)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"                this.add(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"     * Adds all the names in argument into the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"     * @param names list of names to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"     * @throws DuplicateStudentInClassException if there are duplicate names in list.","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"    public void addAll(List\u003cName\u003e names) throws DuplicateStudentInClassException {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        for (int i \u003d 0; i \u003c names.size(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"            this.add(names.get(i));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"    public String size() {","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"        return String.valueOf(internalList.size());","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"    public Iterator\u003cName\u003e iterator() {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":33,"softmagnet":55,"bernardwan":26}},{"path":"src/main/java/seedu/address/model/tuitionclass/exceptions/DuplicateClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":" * Exception thrown when user attempts at adding to unique class list a tuition class  that has same timing","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":" * as an already existing tuition class","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"public class DuplicateClassException extends RuntimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"    public DuplicateClassException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"        super(\"Operation would result in classes with same timing!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"softmagnet":11}},{"path":"src/main/java/seedu/address/model/tuitionclass/exceptions/DuplicateStudentInClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass.exceptions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"public class DuplicateStudentInClassException extends RuntimeException {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"    public DuplicateStudentInClassException(Name duplicatedName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"        super(duplicatedName.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"softmagnet":9}},{"path":"src/main/java/seedu/address/model/tuitionclass/exceptions/InvalidClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.model.tuitionclass.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":" * Signals that the operation will result in a invalid class (Classes are considered invalid if they have overlapping","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":" * timings with existing classes in the list).","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"public class InvalidClassException extends RuntimeException {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"    public InvalidClassException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"        super(\"Operation would result in overlapping class timings\");","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"bernardwan":11}},{"path":"src/main/java/seedu/address/model/tuitionclass/exceptions/TuitionClassNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.model.tuitionclass.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":" * Signals that the TuitionClass was not found.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"public class TuitionClassNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"    public TuitionClassNotFoundException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"        super(\"Tuition Class not found.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"bernardwan":10}},{"path":"src/main/java/seedu/address/model/tuitionclass/predicates/ClassNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"public class ClassNameContainsKeywordsPredicate implements Predicate\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public ClassNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public boolean test(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tuitionClass.getClassName().className, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof ClassNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 keywords.equals(((ClassNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Ongzl":3,"softmagnet":26}},{"path":"src/main/java/seedu/address/model/tuitionclass/predicates/ClassTimingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.tuitionclass.predicates;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"public class ClassTimingContainsKeywordsPredicate implements Predicate\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    public ClassTimingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public boolean test(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tuitionClass.getClassTiming().value, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"                || (other instanceof ClassTimingContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 keywords.equals(((ClassTimingContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Ongzl":24,"softmagnet":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    public static Student[] getSamplePersons() {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        return new Student[] {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"                            new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"                            new Phone(\"99272758\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"                            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"                            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"                            new Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"                            new Phone(\"87438807\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"                            new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"                            new Address(\"Blk 30 Geylang Street 29, #06-40\")","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"                            new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"                            new Phone(\"99272758\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"                            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"                            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"                            new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                            new Phone(\"99272758\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"                            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"                            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"                            new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"                            new Phone(\"99272758\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"                            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"                            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"                            new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"                            new Phone(\"99272758\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"                            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"                            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        for (Student sampleStudent : getSamplePersons()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yourally2":47,"softmagnet":1,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNok.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":" * Jackson-friendly version of {@link Nok}.","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"class JsonAdaptedNok {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Nok\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"     * Constructs a {@code JsonAdaptedNok} with the given person details.","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedNok(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"                          @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address) {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"     * Converts a given {@code Nok} into this class for Jackson use.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedNok(Nok source) {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Nok} object.","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public Nok toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"        return new Nok(modelName, modelPhone, modelEmail, modelAddress);","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":12,"s7u4rt99":1,"-":75}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    private final JsonAdaptedNok nok;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                              @JsonProperty(\"nok\") JsonAdaptedNok nok,","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        this.nok \u003d nok;","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        nok \u003d source.getNok() !\u003d null ? new JsonAdaptedNok(source.getNok()) : null;","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        final Nok modelNok \u003d nok \u003d\u003d null ? null : nok.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelAddress, modelNok, modelTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":12,"s7u4rt99":2,"Ongzl":2,"softmagnet":1,"-":101}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTuitionClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":" * Jackson-friendly version of {@link TuitionClass}.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"public class JsonAdaptedTuitionClass {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Class\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    private final String classTiming;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private final String className;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    private final String location;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    private final String rate;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    private final List\u003cString\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    public JsonAdaptedTuitionClass(@JsonProperty(\"classTiming\") String classTiming,","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"                              @JsonProperty(\"className\") String className,","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"                              @JsonProperty(\"rate\") String rate,","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"                              @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                              @JsonProperty(\"students\") List\u003cString\u003e students) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"            this.students.addAll(students);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"     * Converts a given {@code TuitionClass} into this class for Jackson use.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    public JsonAdaptedTuitionClass(TuitionClass source) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        classTiming \u003d source.getClassTiming().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        className \u003d source.getClassName().className;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"        rate \u003d source.getRate().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        Iterator iterator \u003d source.getStudentList().iterator();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"            students.add(iterator.next().toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code TuitionClass} object.","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted TuitionClass.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    public TuitionClass toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        if (classTiming \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"                    ClassTiming.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"        if (!ClassTiming.isValidClassTiming(classTiming)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(ClassTiming.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        final ClassTiming modelTiming \u003d new ClassTiming(classTiming);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"        if (className \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"                    ClassName.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        if (!ClassName.isValidClassName(className)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(ClassName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"        final ClassName modelName \u003d new ClassName(className);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"        if (rate \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"                    Rate.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"        if (!Rate.isValidRate(rate)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"        final Rate modelRate \u003d new Rate(rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"        final UniqueNameList tuitionClassNameList \u003d new UniqueNameList();","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"        for (String name : students) {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"            tuitionClassNameList.add(new Name(name));","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"        return new TuitionClass(modelName, modelTiming, modelLocation, modelRate, tuitionClassNameList);","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":27,"bernardwan":89}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"Class list contains duplicate class(es).\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    private final List\u003cJsonAdaptedStudent\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cJsonAdaptedTuitionClass\u003e classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedStudent\u003e persons,","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"                                       @JsonProperty(\"classes\") List\u003cJsonAdaptedTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        this.classes.addAll(classes);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        classes.addAll(source.getTuitionClassList().stream().map(JsonAdaptedTuitionClass::new)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : persons) {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"            if (addressBook.hasPerson(student)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        for (JsonAdaptedTuitionClass jsonAdaptedTuitionClass : classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"            TuitionClass tuitionClass \u003d jsonAdaptedTuitionClass.toModelType();","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"            if (addressBook.hasTuitionClass(tuitionClass)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLASS);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"            addressBook.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":6,"s7u4rt99":2,"softmagnet":16,"-":53}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-f11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bernardwan":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.CommandObserver;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.address.ui.classtab.ClassPanel;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.address.ui.studenttab.StudentListPanel;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.address.ui.timetabletab.TimetablePanel;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"public class MainWindow extends UiPart\u003cStage\u003e implements CommandObserver {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    private ClassPanel classPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    private TimetablePanel timetablePanel;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"    private StackPane classListPanelPlaceholder;","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"    private Tab studentsTab;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"    private Tab tuitionClassTab;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"    //    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"    //    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"    private StackPane timetablePanelPlaceholder;","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"    private Tab timetableTab;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"yourally2"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"yourally2"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"        classPanel \u003d new ClassPanel(logic.getFilteredStudentList(), logic.getFilteredTuitionClassList());","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"        classListPanelPlaceholder.getChildren().add(classPanel.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        timetablePanel \u003d new TimetablePanel(logic.getFilteredTuitionClassList());","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"        timetablePanelPlaceholder.getChildren().add(timetablePanel.getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"yourally2"},"content":"        studentsTab \u003d new Tab(\"Students\", studentListPanelPlaceholder);","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"        timetableTab \u003d new Tab(\"Timetable\", timetablePanelPlaceholder);","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"yourally2"},"content":"        tuitionClassTab \u003d new Tab(\"Class\", classListPanelPlaceholder);","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"        tabPane.setTabClosingPolicy(TabPane.TabClosingPolicy.UNAVAILABLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"yourally2"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"yourally2"},"content":"        return studentListPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"s7u4rt99"},"content":"    public void updateClass(Integer indexOfClassToSelect) {","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(indexOfClassToSelect);","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"yourally2"},"content":"        List\u003cTuitionClass\u003e lastShownList \u003d logic.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"yourally2"},"content":"        TuitionClass tuitionClass \u003d lastShownList.get(indexOfClassToSelect);","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"yourally2"},"content":"        ObservableList\u003cStudent\u003e newStudentList \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"yourally2"},"content":"                logic.getFilteredStudentList().filtered(student -\u003e tuitionClass.containsStudent(student.getName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"yourally2"},"content":"        classPanel.setItems(newStudentList);","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"yourally2"},"content":"        classPanel.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"s7u4rt99"},"content":"    public void updateView(Integer tabToView) {","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(tabToView);","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"s7u4rt99"},"content":"        tabPane.getSelectionModel().select(tabToView);","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yourally2":33,"s7u4rt99":30,"Ongzl":10,"-":192}},{"path":"src/main/java/seedu/address/ui/StudentListViewCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.address.ui.studenttab.StudentCard;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":" * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"public class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"        super.updateItem(student, empty);","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            setGraphic(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"            setText(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"            setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":21,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/TuitionClassListViewCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.address.ui.classtab.TuitionClassCard;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":" * Custom {@code ListCell} that displays the graphics of a {@code TuitionClass} using a {@code TuitionClassCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"public class TuitionClassListViewCell extends ListCell\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    private final ListView\u003cStudent\u003e tuitionClassListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"     * Represents the cell displaying the tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"     * @param studentList The student list associated with the tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClassListView The UI associated with the tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    public TuitionClassListViewCell(ObservableList\u003cStudent\u003e studentList, ListView\u003cStudent\u003e tuitionClassListView) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        this.tuitionClassListView \u003d tuitionClassListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    protected void updateItem(TuitionClass tuitionClass, boolean empty) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        super.updateItem(tuitionClass, empty);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        if (empty || tuitionClass \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"            setGraphic(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"            setText(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"            setGraphic(new TuitionClassCard(tuitionClass, getIndex() + 1, studentList, tuitionClassListView).getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":39,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"            logic.setCommandObserver(this.mainWindow);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"s7u4rt99":1,"-":89}},{"path":"src/main/java/seedu/address/ui/classtab/ClassPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.classtab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import javafx.util.Callback;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.TuitionClassListViewCell;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":" * A UI for the Class Panel Tab.","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"public class ClassPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/ClassPanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClassPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    private ListView\u003cTuitionClass\u003e tuitionClassListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    private ListView\u003cStudent\u003e studentListViewClassTab;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cTuitionClass\u003e tuitionClassList;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    public ClassPanel(ObservableList\u003cStudent\u003e studentList, ObservableList\u003cTuitionClass\u003e tuitionClassList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        this.tuitionClassList \u003d tuitionClassList;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setItems(tuitionClassList);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setCellFactory(listView -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"                new TuitionClassListViewCell(studentList, studentListViewClassTab));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        logger.info(\"ClassPanel tab opened\");","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"    public void setItems(ObservableList\u003cStudent\u003e studentObservableList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        studentListViewClassTab.setItems(studentObservableList);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    public void setCellFactory(Callback\u003cListView\u003cStudent\u003e, ListCell\u003cStudent\u003e\u003e studentObservableList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        studentListViewClassTab.setCellFactory(studentObservableList);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":52,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/classtab/StudentCardClassTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.classtab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"public class StudentCardClassTab extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/StudentCardClassTab.fxml\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static final String ADDRESS_FIELD \u003d \"Address: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private static final String MOBILE_FIELD \u003d \"Mobile: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private static final String EMAIL_FIELD \u003d \"Email: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    public final Student student;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    // Student","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public StudentCardClassTab(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        // Student","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        phone.setText(MOBILE_FIELD + student.getPhone().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        address.setText(ADDRESS_FIELD + student.getAddress().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        email.setText(EMAIL_FIELD + student.getEmail().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"yourally2":19,"Ongzl":1,"-":47}},{"path":"src/main/java/seedu/address/ui/classtab/TuitionClassCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.classtab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.StudentListViewCell;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"public class TuitionClassCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/TuitionClassListCard.fxml\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    private static final Character DOLLAR_SIGN \u003d \u0027$\u0027;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    private static final String PER_HOUR \u003d \"/hr\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static final String CLASS_TIMING_FIELD \u003d \"Timing: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private static final String LOCATION_FIELD \u003d \"Location: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    private static final String RATE_FIELD \u003d \"Rate: \";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private static final String CLASS_SIZE_FIELD \u003d \"Size: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    public final TuitionClass tuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    // TuitionClass","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    private Label className;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    private Label id;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    private Label classTiming;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    private Label classLocation;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    private Label rate;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    private Label classSize;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"    private final ListView\u003cStudent\u003e tuitionClassListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"     * Represents a Tuition Card to be shown in the GUI.","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClass The class to display.","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"     * @param displayedIndex The index to display.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public TuitionClassCard(TuitionClass tuitionClass, int displayedIndex,","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"                            ObservableList\u003cStudent\u003e studentList, ListView\u003cStudent\u003e tuitionClassListView) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        super(FXML);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        this.tuitionClass \u003d tuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        this.tuitionClassListView \u003d tuitionClassListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        this.selectTuitionClass();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"        // TuitionClass","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        className.setText(tuitionClass.getClassName().className);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"        classTiming.setText(CLASS_TIMING_FIELD + tuitionClass.getClassTiming().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        classLocation.setText(LOCATION_FIELD + tuitionClass.getLocation().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        rate.setText(RATE_FIELD + DOLLAR_SIGN + tuitionClass.getRate().value + PER_HOUR);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        classSize.setText(CLASS_SIZE_FIELD + tuitionClass.getStudentList().size());","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"    private void onMouseClick() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        selectTuitionClass();","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"     * Visually selects the tuition class and shows the Student List associated to it.","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"    public void selectTuitionClass() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        ObservableList\u003cStudent\u003e newStudentList \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"                studentList.filtered(student -\u003e tuitionClass.containsStudent(student.getName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setItems(newStudentList);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        if (!(other instanceof TuitionClassCard)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        TuitionClassCard card \u003d (TuitionClassCard) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 tuitionClass.equals(card.tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":40,"Ongzl":62}},{"path":"src/main/java/seedu/address/ui/studenttab/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.studenttab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    private static final Character DOLLAR_SIGN \u003d \u0027$\u0027;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    private static final String PER_HOUR \u003d \"/hr\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    private static final String CLASS_TIMING_FIELD \u003d \"Class Timing: \";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    private static final String LOCATION_FIELD \u003d \"Location: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    private static final String ADDRESS_FIELD \u003d \"Address: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    private static final String MOBILE_FIELD \u003d \"Mobile: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    private static final String EMAIL_FIELD \u003d \"Email: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    private static final String RATE_FIELD \u003d \"Rate: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"    public final Student student;","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    // Student","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"    // Nok","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    private Label nokName;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    private Label nokPhone;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"    private Label nokAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    private Label nokEmail;","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        // Student","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"        phone.setText(MOBILE_FIELD + student.getPhone().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        address.setText(ADDRESS_FIELD + student.getAddress().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        email.setText(EMAIL_FIELD + student.getEmail().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        // TODO: Class timing and location is commented out for now because they are no longer coupled with the student.","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        //        rate.setText(RATE_FIELD + DOLLAR_SIGN + student.getRate().value + PER_HOUR);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        //        classTiming.setText(CLASS_TIMING_FIELD + student.getClassTiming().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        //        classLocation.setText(LOCATION_FIELD + student.getLocation().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        // Nok","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        if (student.getNok() !\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"            nokName.setText(student.getNok().getName().fullName);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"            nokPhone.setText(student.getNok().getPhone().value);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"            nokAddress.setText(student.getNok().getAddress().value);","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"            nokEmail.setText(student.getNok().getEmail().value);","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"            nokName.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"            nokPhone.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"            nokAddress.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"            nokEmail.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yourally2":38,"s7u4rt99":9,"Ongzl":6,"softmagnet":2,"-":62}},{"path":"src/main/java/seedu/address/ui/studenttab/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.studenttab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.StudentListViewCell;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yourally2":11,"Ongzl":1,"-":20}},{"path":"src/main/java/seedu/address/ui/timetabletab/TimetableDay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.timetabletab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" * A Ui to display the Days at the left side of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableDay extends TimetableRegion {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private static final int WIDTH \u003d 50;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableDay.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    private Label day;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new Timetable Day.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * @param dayStr Day to be created.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableDay(String dayStr) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, WIDTH);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        day.setText(dayStr);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the width of the TimetableDay UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     * @return Width of the Timetable Day UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    public static int getWidth() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        return WIDTH;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":34,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/timetabletab/TimetableEmptySlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.timetabletab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the empty slot with no tuition class in the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableEmptySlot extends TimetableRegion {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableEmptySlot.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the empty slot with no tuition class.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * @param startTime Start Timing of empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @param endTime End Timing of empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableEmptySlot(LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, startTime.until(endTime, ChronoUnit.MINUTES));","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":20,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/timetabletab/TimetableHeader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.timetabletab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the header of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableHeader extends TimetableRegion {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableHeader.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    private static final int TIMETABLE_HEADER_SLOT_LENGTH \u003d 60;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    private Label headerTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new Timetable header with a start time and end time.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerStartTime Start time of the header.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerEndTime End time of the header.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableHeader(LocalTime headerStartTime, LocalTime headerEndTime) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, TIMETABLE_HEADER_SLOT_LENGTH);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        String headerTime \u003d headerStartTime.toString() + \"-\" + headerEndTime.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        this.headerTime.setText(headerTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new Timetable header with a string as its input and its width.","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerStr String to be displayed on the header.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     * @param width Width of the header.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableHeader(String headerStr, int width) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, width);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        this.headerTime.setText(headerStr);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":41,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/timetabletab/TimetablePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.timetabletab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the Timetable Panel Tab.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"public class TimetablePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetablePanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TimetablePanel.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    private final LocalTime defaultLatestHour \u003d LocalTime.parse(\"18:00\", DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    private final LocalTime defaultEarliestHour \u003d LocalTime.parse(\"09:00\", DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    private GridPane timetable;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a {@code TimetablePanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    public TimetablePanel(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        build(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        timetable.maxWidth(1539);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        if (tuitionClasses !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"            tuitionClasses.addListener(new ListChangeListener\u003cTuitionClass\u003e() {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"                @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"                public void onChanged(Change\u003c? extends TuitionClass\u003e change) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"                    while (change.next()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"                        build(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"                        logger.info(\"Change to uniqueClassList, rebuilding timetable.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"            });","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the UI of the timetable panel.","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClasses List of tuitionClass to retrieve the tuition class timings from for the timetable.","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"    public void build(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        clearAll();","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        if (tuitionClasses \u003d\u003d null || tuitionClasses.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"            logger.info(\"No class in uniqueClassList.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"            Label label \u003d new Label(\"You have no classes.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"            timetable.add(label, 0, 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"            logger.info(\"Building timetable from uniqueClassList.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"            buildHeader(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"            buildDays();","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"            buildClasses(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the header panel for the timetable panel ui.","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClasses List of tuitionClasses to retrieve the earliest tuition class start timing and","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"     *                       latest end timing.","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    public void buildHeader(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        LocalTime earliestHour \u003d getEarliestHour(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        LocalTime latestHour \u003d getLatestHour(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableHeader(\"Time Slots\", 50).getRoot(), 0, 0, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"        int columnIndex \u003d 50;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"        while (earliestHour.isBefore(latestHour) || earliestHour.isBefore(defaultLatestHour)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"            if (earliestHour.equals(LocalTime.parse(\"23:30\", DateTimeFormatter.ofPattern(\"HH:mm\")))) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"                timetable.add(new TimetableHeader(earliestHour, earliestHour.plusMinutes(29)).getRoot(),","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"                        columnIndex, 0, 15, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"                timetable.add(new TimetableHeader(earliestHour, earliestHour.plusMinutes(30)).getRoot(),","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"                        columnIndex, 0, 15, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"            columnIndex +\u003d 30;","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"            earliestHour \u003d earliestHour.plusMinutes(30);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the tuition class slot UI for the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClasses List of tuition classes to retrieve the tuition class timings.","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"    public void buildClasses(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        LocalTime earliestHour \u003d getEarliestHour(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"        //earliest time is after the date","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"        ArrayList\u003cTuitionClass\u003e sortedList \u003d new ArrayList\u003cTuitionClass\u003e(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"        sortedList.sort(Comparator.comparing(TuitionClass::getClassTiming));","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"        // build the timetable","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime previousTime \u003d earliestHour;","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c sortedList.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"            TuitionClass currentTuitionClass \u003d sortedList.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"            if (currentTuitionClass.isAfter(previousTime)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"                addEmptySlot(previousTime, currentTuitionClass.getStartTime(),","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"                        currentTuitionClass.getDayToInt(),","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"                        getColumnIndex(earliestHour, previousTime));","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"            addTuitionClassSlot(currentTuitionClass, earliestHour);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"            if (i !\u003d sortedList.size() - 1","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"                    \u0026\u0026 currentTuitionClass.getDayToInt() \u003c sortedList.get(i + 1).getDayToInt()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"                previousTime \u003d earliestHour;","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"s7u4rt99"},"content":"                previousTime \u003d currentTuitionClass.getEndTime();","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a tuition class slot to be displayed on the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClass TuitionClass to add","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"     * @param earliestTime Earliest class start time of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"s7u4rt99"},"content":"    private void addTuitionClassSlot(TuitionClass tuitionClass, LocalTime earliestTime) {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"        assert !tuitionClass.getStartTime().isBefore(earliestTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"        TimetableTuitionClassSlot timetableTuitionClassSlot \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"                new TimetableTuitionClassSlot(tuitionClass.getClassNameString(),","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"                        tuitionClass.getClassTiming());","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"        int duration \u003d getTimeDifference(tuitionClass.getStartTime(), tuitionClass.getEndTime());","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"        int columnIndex \u003d getColumnIndex(earliestTime, tuitionClass.getStartTime());","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(timetableTuitionClassSlot.getRoot(), columnIndex, tuitionClass.getDayToInt(),","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"                duration, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the column index which the tuition class timing starts from on the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"     * @param earliestTime Earliest class start time of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"     * @param timeToIndex Time which we want to find the column index of.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"     * @return Column index of the timeToIndex.","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"    private int getColumnIndex(LocalTime earliestTime, LocalTime timeToIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"        return TimetableDay.getWidth() + getTimeDifference(earliestTime, timeToIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"     * Creates an empty slot to be displayed on the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"     * @param startTime Start Time of the empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"     * @param endTime End Time of the empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"     * @param row Row to add the empty slot to.","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"     * @param column Column to add the empty slot to.","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"    private void addEmptySlot(LocalTime startTime, LocalTime endTime, int row, int column) {","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"        assert startTime.isBefore(endTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"        TimetableEmptySlot emptySlot \u003d new TimetableEmptySlot(startTime, endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"        int duration \u003d getTimeDifference(startTime, endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(emptySlot.getRoot(), column, row, duration, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the time difference from two timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"     * @param startTime Start time of the two timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"     * @param endTime End time of the two timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"     * @return Time difference between the start time and the end time.","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"    public int getTimeDifference(LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"        assert startTime.isBefore(endTime) || startTime.equals(endTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"        return (int) startTime.until(endTime, ChronoUnit.MINUTES);","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"     * Removes duplicate class timings from a list of class timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTimings List of class timings which duplicates are to be removed from.","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"     * @return ArrayList of classTimings which have duplicates removed.","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"    public ArrayList\u003cClassTiming\u003e removeDuplicateClassTimings(List\u003cClassTiming\u003e classTimings) {","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"        assert classTimings !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"        ArrayList\u003cClassTiming\u003e uniqueClassTimings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c classTimings.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"s7u4rt99"},"content":"            ClassTiming currentClassTiming \u003d classTimings.get(i);","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"s7u4rt99"},"content":"            if (uniqueClassTimings.contains(currentClassTiming)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"s7u4rt99"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"s7u4rt99"},"content":"            uniqueClassTimings.add(currentClassTiming);","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"s7u4rt99"},"content":"        return uniqueClassTimings;","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the earliest hour of the earliest class timing from the list of students.","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClasses List of tuition classes to get the earliest hour from.","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"s7u4rt99"},"content":"     * @return Earliest hour of the earliest class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"yourally2"},"content":"    public LocalTime getEarliestHour(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"yourally2"},"content":"        LocalTime earliestTime \u003d getEarliestTime(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"s7u4rt99"},"content":"        if (earliestTime.isAfter(defaultEarliestHour)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"s7u4rt99"},"content":"            return defaultEarliestHour;","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"s7u4rt99"},"content":"        String earliestTimeStr \u003d earliestTime.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"s7u4rt99"},"content":"        String earliestHourWithoutMinutes \u003d earliestTimeStr.split(\":\")[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"s7u4rt99"},"content":"        String earliestHourStr \u003d earliestHourWithoutMinutes + \":00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"s7u4rt99"},"content":"        return LocalTime.parse(earliestHourStr, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the earliest class timing of the list of students.","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClasses List of students to get the earliest class timing from.","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"s7u4rt99"},"content":"     * @return Earliest class timing from studentList.","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"yourally2"},"content":"    public LocalTime getEarliestTime(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":255,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"yourally2"},"content":"        return tuitionClasses.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"yourally2"},"content":"                .map(TuitionClass::getStartTiming)","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"s7u4rt99"},"content":"                .reduce((classTime1, classTime2) -\u003e classTime1.isBefore(classTime2) ? classTime1 : classTime2)","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"s7u4rt99"},"content":"                .get();","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the latest hour which all classes has ended.","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"softmagnet"},"content":"     * @param tuitionClasses List of students to get the latest hour from.","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"     * @return Latest hour which all the classes has ended.","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"yourally2"},"content":"    public LocalTime getLatestHour(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"yourally2"},"content":"        LocalTime latestTime \u003d getLatestTime(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"s7u4rt99"},"content":"        if (latestTime.isBefore(defaultLatestHour)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"s7u4rt99"},"content":"            return defaultLatestHour;","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"s7u4rt99"},"content":"        String latestTimeStr \u003d latestTime.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"s7u4rt99"},"content":"        String latestHourMinutes \u003d latestTimeStr.split(\":\")[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"s7u4rt99"},"content":"        if (latestHourMinutes.equals(\"00\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"s7u4rt99"},"content":"            return latestTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"s7u4rt99"},"content":"            String latestHourWithoutMinutes \u003d latestTimeStr.split(\":\")[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"s7u4rt99"},"content":"            String latestHourStr \u003d latestHourWithoutMinutes + \":00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"s7u4rt99"},"content":"            LocalTime latestHour \u003d LocalTime.parse(latestHourStr, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"s7u4rt99"},"content":"            return latestHour.equals(LocalTime.parse(\"23:00\", DateTimeFormatter.ofPattern(\"HH:mm\")))","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"s7u4rt99"},"content":"                    ? latestHour.plusMinutes(59)","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"s7u4rt99"},"content":"                    : latestHour.plusHours(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the latest class end time from the list of students.","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"softmagnet"},"content":"     * @param tuitionClasses List of students to get the latest class end time from.","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"s7u4rt99"},"content":"     * @return Latest class end time.","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"yourally2"},"content":"    public LocalTime getLatestTime(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"yourally2"},"content":"        return tuitionClasses.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"yourally2"},"content":"                .map(TuitionClass::getEndTiming)","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"s7u4rt99"},"content":"                .reduce((classTime1, classTime2) -\u003e classTime1.isAfter(classTime2) ? classTime1 : classTime2)","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"s7u4rt99"},"content":"                .get();","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the days side panel of the timetable panel ui.","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"s7u4rt99"},"content":"    public void buildDays() {","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Mon\").getRoot(), 0, 1, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Tue\").getRoot(), 0, 2, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Wed\").getRoot(), 0, 3, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Thu\").getRoot(), 0, 4, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Fri\").getRoot(), 0, 5, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Sat\").getRoot(), 0, 6, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Sun\").getRoot(), 0, 7, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":319,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":320,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":321,"author":{"gitId":"s7u4rt99"},"content":"     * Clears the previously constructed timetable.","lastModifiedDate":"2021-10-18"},{"lineNumber":322,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"s7u4rt99"},"content":"    private void clearAll() {","lastModifiedDate":"2021-10-18"},{"lineNumber":324,"author":{"gitId":"s7u4rt99"},"content":"        timetable.getChildren().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":325,"author":{"gitId":"s7u4rt99"},"content":"        timetable.getRowConstraints().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":326,"author":{"gitId":"s7u4rt99"},"content":"        timetable.getColumnConstraints().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":327,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":328,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yourally2":38,"s7u4rt99":287,"Ongzl":1,"softmagnet":2}},{"path":"src/main/java/seedu/address/ui/timetabletab/TimetableRegion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.timetabletab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the timetable region.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableRegion extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    private HBox slot;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * Creates the timetable region UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     * @param fxml Specified file path of the fxml to construct the timetable region.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     * @param scale Amount to scale the Ui by.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableRegion(String fxml, long scale) {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        super(fxml);","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        int scaleFactor \u003d 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        slot.setPrefWidth(scale * scaleFactor);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        slot.setMinWidth(scale * scaleFactor);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":28,"Ongzl":1}},{"path":"src/main/java/seedu/address/ui/timetabletab/TimetableTuitionClassSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.ui.timetabletab;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" * Ui for the timetable tuition class slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableTuitionClassSlot extends TimetableRegion {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableTuitionClassSlot.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    private Label time;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    private Label className;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a timetable tuition class slot on the timetable ui.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClassName Tuition class name to be displayed on the slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming ClassTiming to be displayed on the slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableTuitionClassSlot(String tuitionClassName, ClassTiming classTiming) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, classTiming.getStartTime().until(classTiming.getEndTime(), ChronoUnit.MINUTES));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        className.setText(tuitionClassName);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        time.setText(classTiming.getClassTiming());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":2,"s7u4rt99":30,"Ongzl":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"s7u4rt99"},"content":"#filterField, #personListPanel, #personWebpage #timetablePanel {","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":342,"author":{"gitId":"s7u4rt99"},"content":".tab-header-background{","lastModifiedDate":"2021-10-17"},{"lineNumber":343,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-17"},{"lineNumber":344,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":345,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":346,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":347,"author":{"gitId":"s7u4rt99"},"content":".tab-label {","lastModifiedDate":"2021-10-17"},{"lineNumber":348,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-17"},{"lineNumber":349,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":350,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":351,"author":{"gitId":"s7u4rt99"},"content":".tab {","lastModifiedDate":"2021-10-17"},{"lineNumber":352,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-17"},{"lineNumber":353,"author":{"gitId":"s7u4rt99"},"content":"    -fx-pref-height: 35;","lastModifiedDate":"2021-10-17"},{"lineNumber":354,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":355,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":356,"author":{"gitId":"s7u4rt99"},"content":".tab:hover {","lastModifiedDate":"2021-10-17"},{"lineNumber":357,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-17"},{"lineNumber":358,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":359,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":360,"author":{"gitId":"s7u4rt99"},"content":".tab:selected {","lastModifiedDate":"2021-10-17"},{"lineNumber":361,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-17"},{"lineNumber":362,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":363,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"s7u4rt99":25,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        \u003cURL value\u003d\"@timetableTab/Timetable.css\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        \u003cTabPane fx:id\u003d\"tabPane\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"          \u003cTab fx:id\u003d\"studentsTab\" text\u003d\"Students\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"            \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"                  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"              \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"          \u003cTab fx:id\u003d\"tuitionClassTab\" text\u003d\"Classes\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"            \u003cVBox fx:id\u003d\"tuitionClassList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"                  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"              \u003cStackPane fx:id\u003d\"classListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"          \u003cTab fx:id\u003d\"timetableTab\" text\u003d\"Timetable\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"            \u003cVBox fx:id\u003d\"timetableList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"                  VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: #383838\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"              \u003cStackPane fx:id\u003d\"timetablePanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: #383838\"/\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yourally2":3,"s7u4rt99":20,"Ongzl":8,"-":59}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        \u003cInsets top\u003d\"21.5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"nokName\" text\u003d\"\\$nok_first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"      \u003cFlowPane /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_phone\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_address\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_email\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":10,"s7u4rt99":2,"-":36}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":1,"-":7}},{"path":"src/main/resources/view/classTab/ClassPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"\u003c!--  @author Zhu-Ruicong-reused--\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"\u003c!--  From the Pet Store Helper tp project from last batch--\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"  \u003cListView fx:id\u003d\"tuitionClassListView\" styleClass\u003d\"pane-transparent\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"  \u003cListView fx:id\u003d\"studentListViewClassTab\" styleClass\u003d\"pane-transparent\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"  \u003cVBox fx:id\u003d\"displayInformationViewContainer\" styleClass\u003d\"pane-transparent\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    \u003cListView fx:id\u003d\"displayInformationView\" minWidth\u003d\"0\" prefWidth\u003d\"0\" HBox.hgrow\u003d\"NEVER\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":18}},{"path":"src/main/resources/view/classTab/StudentCardClassTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        \u003cInsets top\u003d\"21.5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"nokName\" text\u003d\"\\$nok_first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"      \u003cFlowPane /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_phone\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_address\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_email\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"yourally2":48}},{"path":"src/main/resources/view/classTab/TuitionClassListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" onMouseClicked\u003d\"#onMouseClick\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"                \u003cLabel fx:id\u003d\"className\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"classTiming\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classTiming\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"classLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"rate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rate\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"classSize\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classSize\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":2,"Ongzl":34}},{"path":"src/main/resources/view/classTab/TuitionClassListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"    \u003cListView fx:id\u003d\"tuitionClassListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Ongzl":8}},{"path":"src/main/resources/view/timetableTab/Timetable.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":".timetable-day {","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 25;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"    -fx-label-padding: 0 10 0 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":".timetable-day-box {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":".timetable-scroll {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    -fx-fit-to-height: true;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    -fx-max-width: 3750;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":".timetable-class-slot-box {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 15;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":".timetable-time-panel {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: hotpink;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-insets: 5 0 5 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 10;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    -fx-max-height: 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-alignment: right;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":".timetable-label {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":".timetable-empty-slot-box {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-insets: 5 0 5 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"s7u4rt99":45}},{"path":"src/main/resources/view/timetableTab/TimetableDay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" alignment\u003d\"BOTTOM_RIGHT\" styleClass\u003d\"timetable-day-box\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox alignment\u003d\"CENTER\" \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"day\" styleClass\u003d\"timetable-day\" text\u003d\"\\$day\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":11}},{"path":"src/main/resources/view/timetableTab/TimetableEmptySlot.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"      styleClass\u003d\"timetable-empty-slot-box\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox prefHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":8}},{"path":"src/main/resources/view/timetableTab/TimetableHeader.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" styleClass\u003d\"timetable-time-panel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"headerTime\" styleClass\u003d\"timetable-label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":10}},{"path":"src/main/resources/view/timetableTab/TimetablePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"timetable-scroll\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"1000\" style\u003d\"-fx-background-color: #383838\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"        \u003cGridPane fx:id\u003d\"timetable\" styleClass\u003d\"timetable-grid\" VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"2750\" style\u003d\"-fx-background-color: #383838\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":11}},{"path":"src/main/resources/view/timetableTab/TimetableTuitionClassSlot.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" styleClass\u003d\"timetable-class-slot-box\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox prefHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"className\" styleClass\u003d\"timetable-label\" text\u003d\"\\$className\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"timetable-label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"    \"rate\": \"70\",","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"    \"classTiming\": \"23:59\",","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    \"location\": \"5th street\"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    \"rate\": \"70\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    \"classTiming\": \"23:59\",","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"    \"location\": \"5th street\"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"softmagnet":4,"bernardwan":4,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"    \"rate\": \"70\",","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"    \"classTiming\": \"23:59\",","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"softmagnet":2,"bernardwan":2,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"    \"rate\": \"70\",","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    \"location\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    \"rate\": \"70\",","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    \"location\": \"4th street\"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ongzl":2,"softmagnet":3,"bernardwan":2,"-":13}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    \"rate\": \"70\",","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    \"classTiming\": \"Mon 02:00-03:00\"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"s7u4rt99":2,"softmagnet":1,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Long Chai Boon\",","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"67785914\",","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"longchatbooon@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"325, Clementi State 3, #40-32\"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    \"tagged\" : [ \"Maths\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Short Chai Boon\",","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"87759868\",","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"hahiihi@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"325, West State 3, #60-12\"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    \"tagged\" : [ \"Physics\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Mr Batman\",","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"62212222\",","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"dontcallmeillcome@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"325, Bat Cave 3, #10-23\"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Bad Chai Boon\",","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"88888888\",","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"happyorsadyouchoose@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"1, Happy Sad 3, #10-12\"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    \"tagged\" : [ \"Maths\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Bernard Wan\",","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"67785314\",","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"bernard@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"222, Berkeys State 4, #11-32\"","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Ong Lin Zhen\",","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"67382344\",","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"zhenngggii@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"323, Lin Estate 3, #44-31\"","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"    \"tuitionClasses\" : [ {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"      \"classTiming\" : \"Mon 11:30-13:30\",","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"      \"className\" : \"Class 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"      \"rate\": \"69\",","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"      \"location\" : \"132, Jurong East Ave 4, #03-10\"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"    }],","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"    \"nok\" : {","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"      \"name\" : \"Hehe Chai Red\",","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"      \"phone\" : \"67111111\",","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"      \"email\" : \"salmon@gmail.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"      \"address\" : \"999, Estate State 4, #10-32\"","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"    },","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ongzl":42,"softmagnet":3,"bernardwan":42,"-":43}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"                + ADDRESS_DESC_AMY + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"                + ADDRESS_DESC_NOK;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        Student expectedStudent \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        expectedModel.addPerson(expectedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        //expectedModel.addTuitionClass(expectedStudent.getClassList().get(0));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yourally2":5,"Ongzl":11,"softmagnet":2,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        expectedModel.addPerson(validStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        Student studentInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        assertCommandFailure(new AddCommand(studentInList), model,","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yourally2":6,"Ongzl":2,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.personsAdded);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        Student alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        Student bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"        public void addPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"yourally2"},"content":"        public boolean hasPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"yourally2"},"content":"        public void deletePerson(Student target) {","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"        public void deleteTuitionClass(TuitionClass target) {","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"yourally2"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"        public void updateFilteredPersonList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"        public void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"        public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"        public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"        public void replaceFilteredStudentList(List\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"        public void replaceFilteredTuitionClassList(List\u003cTuitionClass\u003e tuitionClassList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"        public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"        public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"yourally2"},"content":"        private final Student student;","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"yourally2"},"content":"        ModelStubWithPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"yourally2"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"yourally2"},"content":"        public boolean hasPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"yourally2"},"content":"            return this.student.isSamePerson(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"yourally2"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"Ongzl"},"content":"        final ArrayList\u003cTuitionClass\u003e tuitionClassesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"yourally2"},"content":"        public boolean hasPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"yourally2"},"content":"            return personsAdded.stream().anyMatch(student::isSamePerson);","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"yourally2"},"content":"        public void addPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"yourally2"},"content":"            personsAdded.add(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"Ongzl"},"content":"            requireNonNull(tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"Ongzl"},"content":"            tuitionClassesAdded.add(tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yourally2":29,"s7u4rt99":19,"Ongzl":28,"-":178}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"import seedu.address.testutil.EditClassDescriptorBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    //// SAMPLE STUDENT INFO","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_NAME_NOK \u003d \"Papa\";","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_PHONE_NOK \u003d \"33333333\";","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_EMAIL_NOK \u003d \"papa@example.com\";","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_ADDRESS_NOK \u003d \"Block 456, Squid Street 69\";","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_PREFIX_NOK \u003d \" \" + PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    public static final String NAME_DESC_NOK \u003d \" \" + PREFIX_NAME + VALID_NAME_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"    public static final String PHONE_DESC_NOK \u003d \" \" + PREFIX_PHONE + VALID_PHONE_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    public static final String EMAIL_DESC_NOK \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"    public static final String ADDRESS_DESC_NOK \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    //// SAMPLE CLASS INFO","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSNAME_PHYSICS \u003d \"Sec 4 Physics\";","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSNAME_MATHS \u003d \"Sec 4 Maths\";","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSTIMING_PHYSICS \u003d \"tue 13:00-14:00\";","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSTIMING_MATHS \u003d \"mon 10:00-11:00\";","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_RATE_PHYSICS \u003d \"70\";","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_RATE_MATHS \u003d \"80\";","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_LOCATION_PHYSICS \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_LOCATION_MATHS \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    public static final String RATE_DESC_PHYSICS \u003d \" \" + PREFIX_RATE + VALID_RATE_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"    public static final String RATE_DESC_MATHS \u003d \" \" + PREFIX_RATE + VALID_RATE_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"    public static final String CLASSTIMING_DESC_PHYSICS \u003d \" \" + PREFIX_CLASSTIMING + VALID_CLASSTIMING_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    public static final String CLASSTIMING_DESC_MATHS \u003d \" \" + PREFIX_CLASSTIMING + VALID_CLASSTIMING_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"    public static final String LOCATION_DESC_PHYSICS \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"    public static final String LOCATION_DESC_MATHS \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"    public static final String INVALID_RATE_DESC \u003d \" \" + PREFIX_RATE + \"-32\"; // negative rate not allowed for rate","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"    // empty string not allowed for classTiming","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"    public static final String INVALID_CLASSTIMING_DESC \u003d \" \" + PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for locations","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"    public static final EditClassDescriptor DESC_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"    public static final EditClassDescriptor DESC_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"                .withTags(VALID_TAG_FRIEND).withNokName(VALID_NAME_NOK).withNokPhone(VALID_PHONE_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"                .withNokAddress(VALID_ADDRESS_NOK).withNokEmail(VALID_EMAIL_NOK).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withNokName(VALID_NAME_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"                .withNokPhone(VALID_PHONE_NOK).withNokAddress(VALID_ADDRESS_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"                .withNokEmail(VALID_EMAIL_NOK).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"        DESC_PHYSICS \u003d new EditClassDescriptorBuilder().withClassName(VALID_CLASSNAME_PHYSICS)","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"                .withClassTiming(VALID_CLASSTIMING_PHYSICS).withRate(VALID_RATE_PHYSICS)","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"                .withLocation(VALID_LOCATION_PHYSICS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"        DESC_MATHS \u003d new EditClassDescriptorBuilder().withClassName(VALID_CLASSNAME_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"                .withClassTiming(VALID_CLASSTIMING_MATHS).withRate(VALID_RATE_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"                .withLocation(VALID_LOCATION_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"yourally2"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":176,"author":{"gitId":"yourally2"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"yourally2"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yourally2":7,"s7u4rt99":2,"Ongzl":17,"softmagnet":38,"bernardwan":2,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        expectedModel.deletePerson(studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        expectedModel.deletePerson(studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yourally2":9,"-":100}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        expectedModel.setPerson(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        expectedModel.setPerson(lastStudent, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d new PersonBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        expectedModel.setPerson(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"        Student studentInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"                new EditPersonDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yourally2":22,"-":151}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -  \u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yourally2":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand findFirstCommand \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand findSecondCommand \u003d new FindNameCommand(secondPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand findFirstCommandCopy \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        // different predicate with different list of keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"    //todo ZW fix ur tests","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"    //public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    //    FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"    //    assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    //    assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    //public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"    //    FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    //    assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"    //    assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ongzl":25,"softmagnet":6,"-":53}},{"path":"src/test/java/seedu/address/logic/commands/FindTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"                new TagsContainsKeywordsPredicate(Collections.singletonList(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"                new TagsContainsKeywordsPredicate(Collections.singletonList(\"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand findMathsCommand \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand findPhysicsCommand \u003d new FindTagCommand(secondPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertTrue(findMathsCommand.equals(findMathsCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand findMathsCommandCopy \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertTrue(findMathsCommand.equals(findMathsCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        assertFalse(findMathsCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        assertFalse(findMathsCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        // different predicate with different list of keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        assertFalse(findMathsCommand.equals(findPhysicsCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"    public void execute_singleKeyword_multiplePersonsFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d preparePredicate(\"Maths\");","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d preparePredicate(\"maths physics\");","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"     * Parses {@code userInput} into a {@code TagsContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    private TagsContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        return new TagsContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"yourally2":3,"softmagnet":87}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"//","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"//import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"//","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"//","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"//import seedu.address.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"///**","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"// * Contains integration tests (interaction with the Model) for {@code ScheduleCommand}.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"// */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"//public class ScheduleCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    //private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    //private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    //public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        //ClassTimingContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        //        new ClassTimingContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        //ClassTimingContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        //        new ClassTimingContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        //ScheduleCommand scheduleFirstCommand \u003d new ScheduleCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        //ScheduleCommand scheduleSecondCommand \u003d new ScheduleCommand(secondPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"        //assertTrue(scheduleFirstCommand.equals(scheduleFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        //ScheduleCommand scheduleFirstCommandCopy \u003d new ScheduleCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        //assertTrue(scheduleFirstCommand.equals(scheduleFirstCommandCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        //assertFalse(scheduleFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        //assertFalse(scheduleFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        //assertFalse(scheduleFirstCommand.equals(scheduleSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"    //public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    //    ClassTimingContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"    //    ScheduleCommand command \u003d new ScheduleCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    //    assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"    //    assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    //public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    //    ClassTimingContainsKeywordsPredicate predicate \u003d preparePredicate(\"mon tue\");","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"    //    ScheduleCommand command \u003d new ScheduleCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    //    assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    //    assertEquals(Arrays.asList(ALICE, BENSON, CARL), model.getFilteredStudentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"    ///**","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"    // * Parses {@code userInput} into a {@code ClassTimingContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"    // */","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"    //private ClassTimingContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"    //    return new ClassTimingContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"//}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Ongzl":83}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"class SortCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    void execute() {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"        //Todo discuss how to implement this since it doesnt touch the model.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortNameAsc \u003d new SortCommand(\"name\", \"asc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortNameDesc \u003d new SortCommand(\"name\", \"desc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortTimingAsc \u003d new SortCommand(\"timing\", \"asc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortTimingDesc \u003d new SortCommand(\"timing\", \"desc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        //same object","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortNameAsc.equals(sortNameAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortNameDesc.equals(sortNameDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortTimingAsc.equals(sortTimingAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortTimingDesc.equals(sortTimingDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        //same values","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"name\", \"asc\").equals(sortNameAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"name\", \"desc\").equals(sortNameDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"timing\", \"asc\").equals(sortTimingAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"timing\", \"desc\").equals(sortTimingDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        //different types","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameAsc.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        //null","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameDesc.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        //different values","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameAsc.equals(sortNameDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameDesc.equals(sortTimingAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortTimingAsc.equals(sortTimingDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortTimingDesc.equals(sortNameAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":46}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    private int studentsIndex \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private int timetableIndex \u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private int classesIndex \u003d 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    void execute() {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"       //Todo discuss how to implement this since it doesnt touch the model.","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        ViewCommand viewTimetable \u003d new ViewCommand(timetableIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        ViewCommand viewStudents \u003d new ViewCommand(studentsIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        ViewCommand viewClasses \u003d new ViewCommand(classesIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        //same object","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(viewClasses.equals(viewClasses));","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(viewTimetable.equals(viewTimetable));","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(viewStudents.equals(viewStudents));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        //same values","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ViewCommand(timetableIndex).equals(viewTimetable));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ViewCommand(studentsIndex).equals(viewStudents));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ViewCommand(classesIndex).equals(viewClasses));","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        //different types","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(viewClasses.equals(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        //null","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(viewClasses.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        //different values","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(viewClasses.equals(viewStudents));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"s7u4rt99":45}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        Student expectedStudent \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        Student expectedStudentMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        Student expectedStudent \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_AMY + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"                        + VALID_ADDRESS_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"                        + VALID_ADDRESS_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"                + INVALID_ADDRESS_DESC + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"                + ADDRESS_DESC_NOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yourally2":7,"s7u4rt99":7,"Ongzl":17,"softmagnet":29,"-":108}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(student));","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(student).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand command \u003d (FindNameCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"                FindNameCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        assertEquals(new FindNameCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yourally2":6,"Ongzl":1,"softmagnet":4,"-":90}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLASSTIMING_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + INVALID_CLASSTIMING_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"                         + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"softmagnet"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"softmagnet"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"bernardwan"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yourally2":3,"s7u4rt99":2,"softmagnet":7,"bernardwan":1,"-":205}},{"path":"src/test/java/seedu/address/logic/parser/FindNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    private FindNameCommandParser parser \u003d new FindNameCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public void parse_validArgs_returnsFindNameCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand expectedFindNameCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"                new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindNameCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindNameCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"softmagnet":11,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/FindTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.FindTagCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    private FindTagCommandParser parser \u003d new FindTagCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public void parse_validArgs_returnsFindTagCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand expectedFindTagCommand \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"                new FindTagCommand(new TagsContainsKeywordsPredicate(Arrays.asList(\"Maths\", \"Physics\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \"Maths Physics\", expectedFindTagCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \" \\n Maths \\n \\t Physics  \\t\", expectedFindTagCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"softmagnet":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    private static final String INVALID_CLASSTIMIMG \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    private static final String INVALID_RATE \u003d \"-32\";","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_TAG \u003d \"friend*\";","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"    private static final String VALID_LOCATION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    private static final String VALID_CLASSTIMING \u003d \"Mon 13:00-14:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    private static final String VALID_RATE \u003d \"70\";","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"bernardwan"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"bernardwan"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"bernardwan"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"bernardwan"},"content":"        Location expectedAddress \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"bernardwan"},"content":"        assertEquals(expectedAddress, ParserUtil.parseLocation(addressWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseClassTiming((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClassTiming(INVALID_CLASSTIMIMG));","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_validValueWithoutWhitespace_returnsClassTiming() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"        ClassTiming expectedClassTiming \u003d new ClassTiming(VALID_CLASSTIMING);","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(expectedClassTiming, ParserUtil.parseClassTiming(VALID_CLASSTIMING));","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_validValueWithWhitespace_returnsTrimmedClassTiming() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"        String classTimingWithWhitespace \u003d WHITESPACE + VALID_CLASSTIMING + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"        ClassTiming expectedAddress \u003d new ClassTiming(VALID_CLASSTIMING);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(expectedAddress, ParserUtil.parseClassTiming(classTimingWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRate((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"softmagnet"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRate(INVALID_RATE));","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_validValueWithoutWhitespace_returnsRate() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"softmagnet"},"content":"        Rate expectedRate \u003d new Rate(VALID_RATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"softmagnet"},"content":"        assertEquals(expectedRate, ParserUtil.parseRate(VALID_RATE));","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_validValueWithWhitespace_returnsTrimmedRate() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"softmagnet"},"content":"        String rateWithWhitespace \u003d WHITESPACE + VALID_RATE + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"softmagnet"},"content":"        Rate expectedRate \u003d new Rate(VALID_RATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"softmagnet"},"content":"        assertEquals(expectedRate, ParserUtil.parseRate(rateWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"yourally2":3,"s7u4rt99":25,"softmagnet":25,"bernardwan":26,"-":195}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"                ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    public void parse_validArgs_returnsScheduleCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        ScheduleCommand expectedScheduleCommand \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"                new ScheduleCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"wednesday\", \"thursday\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \"wednesday thursday\", expectedScheduleCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \" \\n wednesday \\n \\t thursday  \\t\", expectedScheduleCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Ongzl":34,"softmagnet":1}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"class SortCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_emptyArg_throwParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_tooManyArgs_throwParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"name asc desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timing desc asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"name timing desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timing name asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"name ascending\",","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_DIRECTIONOFSORT));","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timing descending\",","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_DIRECTIONOFSORT));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"classes desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_SORTBY));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"students asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_SORTBY));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"name asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"name\", \"asc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"name desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"name\", \"desc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"timing asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"timing\", \"asc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"timing desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"timing\", \"desc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    void checkSortBy_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.checkSortBy(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkSortBy(\"null\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkSortBy(\"names\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkSortBy(\"timings\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"    void checkDirectionOfSort_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.checkDirectionOfSort(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkDirectionOfSort(\"null\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkDirectionOfSort(\"ascending\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkDirectionOfSort(\"descending\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":86}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    private int studentsIndex \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    private int classesIndex \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    private int timetableIndex \u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_emptyArg_throwParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_tooManyArgs_throwParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timetable two\",","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"classes cat\",","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"students seat\",","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"students timetable classes\",","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timetables\",","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"class\",","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"student\",","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"timetable\",","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"                new ViewCommand(timetableIndex));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"classes\",","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"               new ViewCommand(classesIndex));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"students\",","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"                new ViewCommand(studentsIndex));","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"s7u4rt99":63}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        public ObservableList\u003cStudent\u003e getPersonList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"            return students;","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"        public ObservableList\u003cTuitionClass\u003e getTuitionClassList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"yourally2":10,"Ongzl":1,"softmagnet":9,"-":90}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"yourally2":2,"softmagnet":1,"-":129}},{"path":"src/test/java/seedu/address/model/person/ClassTimingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"public class ClassTimingTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ClassTiming(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    public void constructor_invalidClassTiming_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        //Todo","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        String invalidClassTiming \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ClassTiming(invalidClassTiming));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    public void isValidClassTiming() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        // null classTiming","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassTiming.isValidClassTiming(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        // invalid classTiming","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"mon 9:00-10:00\")); // incorrect timing format","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"mon 0900-1000\")); // incorrect timing format","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"mon 10:00\")); // missing end time","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"09:00-10:00\")); // missing day time","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"monday 10:00\")); // incorrect day format","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THUR 0900-1000\")); // incorrect day format","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THU 09:10-10:00\")); // does not start on the hour or 30 min mark","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THU 09:00-10:15\")); // does not end on the hour or 30 min mark","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THU 09:00-23:58\")); // does not end at 23:59","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"        // valid classTiming","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(ClassTiming.isValidClassTiming(\"Mon 01:00-02:00\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(ClassTiming.isValidClassTiming(\"mON 01:00-23:30\")); // DAY in weird caps","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(ClassTiming.isValidClassTiming(\"mON 01:00-23:59\")); // DAY in weird caps","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"    public void formatClassTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"        // todo private method","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"    public void getDayToInt() {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"Mon 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(2, new ClassTiming(\"Tue 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(3, new ClassTiming(\"Wed 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(4, new ClassTiming(\"Thu 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(5, new ClassTiming(\"Fri 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(6, new ClassTiming(\"Sat 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(7, new ClassTiming(\"Sun 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"    public void isEarlier() {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        // same day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"wed 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"thu 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"fri 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"        // same day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"wed 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        // later day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"mon 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"        // later day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"tue 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"        // same day same time slot","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"wed 12:00-13:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"    public void isAfter() {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"10:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"11:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"12:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"15:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"    public void getStartTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"11:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getStartTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"11:01\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getStartTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"10:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getStartTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"00:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 00:00-23:30\").getStartTime());","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"    public void getEndTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"12:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getEndTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"12:01\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getEndTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"15:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getEndTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"23:30\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 00:00-23:30\").getEndTime());","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"    public void getClassTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:59\", new ClassTiming(\"moN 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:59\", new ClassTiming(\"Tue 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:59\", new ClassTiming(\"wEd 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"THU 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"fri 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"sAT 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"SuN 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(\"00:01-23:30\", new ClassTiming(\"MON 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"s7u4rt99"},"content":"        // same day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(-1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"wed 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(-1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"thu 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(-1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"fri 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"        // same day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"wed 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"        // later day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"mon 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"        // later day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"tue 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"        // same day same time slot","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(0, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"wed 12:00-13:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":162,"softmagnet":1}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        // different predicate which has different keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"        //todo ZW fix ur tests","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        //predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        //assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        //todo ZW fix ur tests","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        //assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ongzl":5,"softmagnet":2,"-":71}},{"path":"src/test/java/seedu/address/model/person/RateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class RateTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rate(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    public void constructor_negativeRate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        String negativeRate \u003d \"-32\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(negativeRate));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public void constructor_emptyRate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        String emptyRate1 \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        String emptyRate2 \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(emptyRate1));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(emptyRate2));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    public void isValidRate() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        //null rate","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rate.isValidRate(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        //invalid rate","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"-42\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"32.3232\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\".32\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\".3232\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        //valid rate","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"50\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"50.3\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"40.40\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"32131893721\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yourally2":1,"softmagnet":52}},{"path":"src/test/java/seedu/address/model/person/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"public class StudentTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        Student editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        Student aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"    public void isAnyTagsMatching() {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"        // matches keyword -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ALICE.isAnyTagsMatching(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        // no match -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ALICE.isAnyTagsMatching(\"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yourally2":7,"softmagnet":9,"-":84}},{"path":"src/test/java/seedu/address/model/person/TagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"public class TagsContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Maths\");","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Maths\", \"Physics\");","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d new TagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate firstPredicateCopy \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        // different predicate which has different keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    public void test_tagsMatchesKeywords_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        // One tag matches with one keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d new TagsContainsKeywordsPredicate(Collections.singletonList(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Maths\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        // Multiple tags match with multiple keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"Maths\", \"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Maths\", \"Physics\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        // Only one tag matches with one keyword among many keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"Maths\", \"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Maths\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        // Mixed-case tag matches with Mixed-case keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"pHySics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"PhYsICS\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"softmagnet":61}},{"path":"src/test/java/seedu/address/model/person/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    private final UniqueStudentList uniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniqueStudentList) null));","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"        uniquePersonList.setPersons(expectedUniqueStudentList);","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"        uniquePersonList.setPersons(studentList);","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"yourally2"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicateStudents));","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yourally2":28,"-":142}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"        String invalidTagName1 \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"        String invalidTagName2 \u003d \"hi*\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName1));","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName2));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    public void isNameMatchingIgnoreCase() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        Tag mathsTag \u003d new Tag(\"Maths\");","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        //same name, same letter case -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        assertTrue(mathsTag.isNameMatchingIgnoreCase(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        //same name, different letter case -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        assertTrue(mathsTag.isNameMatchingIgnoreCase(\"mAtHS\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        //different name -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        assertFalse(mathsTag.isNameMatchingIgnoreCase(\"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"softmagnet":16,"bernardwan":4,"-":24}},{"path":"src/test/java/seedu/address/model/tuitionclass/TuitionClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package seedu.address.model.tuitionclass;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"public class TuitionClassTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"    private ClassName className \u003d new ClassName(\"test\");","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"    private Location location \u003d new Location(\"test\");","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    private Rate rate \u003d new Rate(\"50\");","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_overlappingTiming_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 16:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"        assertTrue(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"        assertTrue(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_differentDay_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 16:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"TUE 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_sameDayNoOverlap_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 15:00-16:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_sameDayBackToBack_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 15:00-17:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":3,"bernardwan":41}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedNokTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.storage.JsonAdaptedNok.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"public class JsonAdaptedNokTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    private static final Nok VALID_NOK \u003d BENSON.getNok();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NOK);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        assertEquals(VALID_NOK, nok.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, VALID_EMAIL, null);","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bernardwan":23,"-":69}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    private static final JsonAdaptedNok VALID_NOK \u003d new JsonAdaptedNok(BENSON.getNok());","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    public void toModelType_nullNok_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        assertDoesNotThrow(() -\u003e new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"                null, VALID_TAGS));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"                         VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, invalidTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"//    DON\u0027T DELETE YET!! WILL MIGRATE TO JsonAdaptedClassTest","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"    //public void toModelType_invalidClassTiming_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"    //    JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"    //            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"    //                    VALID_RATE, INVALID_CLASSTIMING, VALID_LOCATION, VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d ClassTiming.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"    //public void toModelType_nullClassTiming_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"    //    JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"    //            VALID_RATE, null, VALID_LOCATION, VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassTiming.class.getSimpleName());","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"    //public void toModelType_invalidRate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"    //    JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"    //            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"    //                    INVALID_RATE, VALID_CLASSTIMING, VALID_LOCATION, VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d Rate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"    //public void toModelType_nullRate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"    //    JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"Ongzl"},"content":"    //            null, VALID_CLASSTIMING, VALID_LOCATION, VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Rate.class.getSimpleName());","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"Ongzl"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"    //public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"    //    JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"Ongzl"},"content":"    //            new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"    //                    VALID_RATE, VALID_CLASSTIMING, INVALID_LOCATION, VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"    //@Test","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"    //public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"    //    JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"    //            VALID_RATE, VALID_CLASSTIMING, null, VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"    //    String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"    //    assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"    //}","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":34,"Ongzl":50,"softmagnet":13,"bernardwan":1,"-":82}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"softmagnet":2,"-":108}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    public AddressBookBuilder withPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":2,"softmagnet":1,"-":31}},{"path":"src/test/java/seedu/address/testutil/EditClassDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import seedu.address.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class EditClassDescriptorBuilder {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    private EditClassDescriptor descriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder() {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder(EditClassDescriptor descriptor) {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        this.descriptor \u003d new EditClassDescriptor(descriptor);","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassName(tuitionClass.getClassName());","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassTiming(tuitionClass.getClassTiming());","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        descriptor.setRate(tuitionClass.getRate());","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        descriptor.setLocation(tuitionClass.getLocation());","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        descriptor.setUniqueNameList(tuitionClass.getStudentList());","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withClassName(String className) {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassName(new ClassName(className));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withClassTiming(String classTiming) {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassTiming(new ClassTiming(classTiming));","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withRate(String rate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        descriptor.setRate(new Rate(rate));","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withStudentList(String... studentList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        descriptor.setUniqueNameList(new UniqueNameList(studentList));","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptor build() {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        return descriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"softmagnet":56}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    public EditPersonDescriptorBuilder(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        descriptor.setAddress(student.getAddress());","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokName(student.getNok().getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokPhone(student.getNok().getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokEmail(student.getNok().getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokAddress(student.getNok().getAddress());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokName(new Name(name));","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokPhone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokPhone(new Phone(phone));","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokEmail} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokEmail(new Email(email));","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokAddress(String address) {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokAddress(new Address(address));","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yourally2":10,"Ongzl":37,"softmagnet":2,"-":80}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_NAME \u003d \"Zhenglin Ong\";","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_PHONE \u003d \"97762839\";","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_EMAIL \u003d \"zhenglin@gmail.com\";","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_ADDRESS \u003d \"345, Clementi Ave 6, #02-141\";","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    public static final String DEFAULT_CLASS_NAME \u003d \"Math wed class\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    private Name nokName;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"    private Phone nokPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"    private Email nokEmail;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    private Address nokAddress;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        nokName \u003d new Name(DEFAULT_NOK_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        nokPhone \u003d new Phone(DEFAULT_NOK_PHONE);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"        nokEmail \u003d new Email(DEFAULT_NOK_EMAIL);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        nokAddress \u003d new Address(DEFAULT_NOK_ADDRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"    public PersonBuilder(Student studentToCopy) {","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        address \u003d studentToCopy.getAddress();","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"        nokName \u003d studentToCopy.getNok().getName();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"        nokPhone \u003d studentToCopy.getNok().getPhone();","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        nokEmail \u003d studentToCopy.getNok().getEmail();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"        nokAddress \u003d studentToCopy.getNok().getAddress();","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"        this.nokName \u003d new Name(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokPhone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"        this.nokPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokEmail} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"        this.nokEmail \u003d new Email(email);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokAddress(String address) {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"        this.nokAddress \u003d new Address(address);","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"     * Builds student with all details included in the builder.","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"     * @return Student with all the deatils included in the builder.","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"yourally2"},"content":"    public Student build() {","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"        Nok nok \u003d new Nok(nokName, nokPhone, nokEmail, nokAddress);","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"        return new Student(name, phone, email, address, nok, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yourally2":16,"Ongzl":57,"softmagnet":1,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    public static String getPersonDetails(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        TuitionClass firstTuitionClass \u003d student.getClassList().get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_ADDRESS + student.getAddress().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_CLASSTIMING + firstTuitionClass.getClassTiming().value + \" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_RATE + firstTuitionClass.getRate().value + \" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_LOCATION + firstTuitionClass.getLocation().value + \" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        student.getTags().stream().forEach(s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_NOK + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_NAME + student.getNok().getName().fullName + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_PHONE + student.getNok().getPhone().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_EMAIL + student.getNok().getEmail().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_ADDRESS + student.getNok().getAddress().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        descriptor.getRate().ifPresent(rate -\u003e sb.append(PREFIX_RATE).append(rate.value).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"        descriptor.getClassTiming().ifPresent(classTiming -\u003e sb.append(PREFIX_CLASSTIMING)","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"                .append(classTiming.value).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.value).append(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"        descriptor.getClassName().ifPresent(name -\u003e sb.append(PREFIX_CLASS_NAME).append(name.className).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"        //if (descriptor.getTuitionClasses().isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"        //    List\u003cTuitionClass\u003e tuitionClasses \u003d descriptor.getTuitionClasses().get();","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"        //    if(tuitionClasses.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"        //       sb.append()","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"        //    }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        //}","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"        if (descriptor.getNokName().isPresent() || descriptor.getNokAddress().isPresent()","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"                || descriptor.getNokEmail().isPresent() || descriptor.getNokPhone().isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"            sb.append(PREFIX_NOK).append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yourally2":8,"s7u4rt99":3,"Ongzl":29,"softmagnet":2,"bernardwan":2,"-":51}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":5,"-":50}},{"path":"src/test/java/seedu/address/testutil/TuitionClassBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import seedu.address.model.tuitionclass.UniqueNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"public class TuitionClassBuilder {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_CLASS_NAME \u003d \"Sec 4 Physics\";","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_RATE \u003d \"60\";","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Serangoon NEX #03-33\";","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_CLASS_TIMING \u003d \"Wed 16:00-17:00\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String[] DEFAULT_NAME_LIST \u003d {\"Alice\", \"Benson\", \"Carl\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    private ClassName className;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    private ClassTiming classTiming;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    private Rate rate;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    private Location location;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    private UniqueNameList uniqueNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder() {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        className \u003d new ClassName(DEFAULT_CLASS_NAME);","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        classTiming \u003d new ClassTiming(DEFAULT_CLASS_TIMING);","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        rate \u003d new Rate(DEFAULT_RATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        uniqueNameList \u003d new UniqueNameList(DEFAULT_NAME_LIST);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder(TuitionClass classToCopy) {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        className \u003d classToCopy.getClassName();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        classTiming \u003d classToCopy.getClassTiming();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        rate \u003d classToCopy.getRate();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        location \u003d classToCopy.getLocation();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        uniqueNameList \u003d classToCopy.getStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withClassName(ClassName className) {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withClassTiming(ClassTiming classTiming) {","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"         return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withRate(Rate rate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withLocation(Location location) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withStudentList(UniqueNameList uniqueNameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        this.uniqueNameList \u003d uniqueNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"    public TuitionClass build() {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        return new TuitionClass(className, classTiming, location, rate, uniqueNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"softmagnet":67}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.ClassName;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.Location;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.Rate;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.address.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    public static final Student ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Long Chai Boon\")","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"325, Clementi State 3, #40-32\")","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"            .withNokEmail(\"longchatbooon@gmail.com\").withNokPhone(\"67785914\")","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"            .withTags(\"Maths\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"    public static final Student BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Short Chai Boon\")","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"325, West State 3, #60-12\")","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(\"hahiihi@gmail.com\").withNokPhone(\"87759868\")","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"            .withTags(\"Physics\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    public static final Student NO_NOK_BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"    public static final Student CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"Campbell Road Ave 2, #11\")","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"            .withNokName(\"Jamie Kurz\")","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"325, Bat Cave 3, #10-23\")","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(\"dontcallmeillcome@gmail.com\").withNokPhone(\"62212222\")","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    public static final Student DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Bad Chai Boon\")","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"1, Happy Sad 3, #10-12\")","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(\"happyorsadyouchoose@gmail.com\").withNokPhone(\"88888888\")","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"            .withTags(\"Maths\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"    public static final Student ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Bernard Wan\")","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"222, Berkeys State 4, #11-32\")","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"            .withNokEmail(\"bernard@gmail.com\").withNokPhone(\"67785314\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"    public static final Student FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Ong Lin Zhen\")","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"323, Lin Estate 3, #44-31\")","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"            .withNokEmail(\"zhenngggii@gmail.com\").withNokPhone(\"67382344\")","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"    public static final Student GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Hehe Chai Red\")","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"999, Estate State 4, #10-32\")","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"            .withNokEmail(\"salmon@gmail.com\").withNokPhone(\"67111111\")","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"    public static final Student HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    public static final Student IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"    public static final Student AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"            .withNokName(VALID_NAME_NOK).withNokPhone(VALID_PHONE_NOK).withNokAddress(VALID_ADDRESS_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(VALID_EMAIL_NOK).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"    public static final Student BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"            .withNokName(VALID_NAME_NOK).withNokPhone(VALID_PHONE_NOK).withNokAddress(VALID_ADDRESS_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(VALID_EMAIL_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"    private TypicalPersons() {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        for (Student student : getTypicalPersons()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"    public static List\u003cStudent\u003e getTypicalPersons() {","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"yourally2":37,"Ongzl":19,"softmagnet":14,"-":51}}]
