[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"# TimesTable","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"This is a contact application aimed at helping freelance tutors to","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"1. keep track of their tutee information such as contact information, address, etc.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"2. keep track of teaching schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"# More about this project","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"* This is a software engineering project by team F11-1 for NUS module CS2103T of AY2021-22 Sem 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"* The starting codebase is written in OOP fashion. It provides a reasonably well-written code base bigger (around 6 KLoC) than","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"softmagnet":14,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"mainClassName \u003d \u0027seedu.times.Main\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    archiveName \u003d \u0027timestable.jar\u0027","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"run {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yourally2":1,"Ongzl":3,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"# Project team","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"### Bernard Wan De Yuan","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"\u003cimg src\u003d\"images/bernardwan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"[[github](https://github.com/bernardwan)]","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"[[portfolio](team/bernardwan.md)]","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"Personal email: bernardwan99@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"School email: bernardwan@u.nus.edu","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"* Role: Deliverables and Deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"### Lin Zhiwei","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"\u003cimg src\u003d\"images/softmagnet.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"[[github](https://github.com/softmagnet)]","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"[[portfolio](team/softmagnet.md)]","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"Personal email: zhiwei3141@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"School email: zhiwei_lin@u.nus.edu","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"* Role: Code quality and testing","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"### Ong Zheng Lin","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"\u003cimg src\u003d\"images/ongzl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"[[github](https://github.com/Ongzl)]","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"[[portfolio](team/ongzl.md)]","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"Personal email: ongzhenglin1999@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"School email: ong.zhenglin@u.nus.edu","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"### Kevin Chua Kian Chun","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"\u003cimg src\u003d\"images/yourally2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"[[github](https://github.com/yourally2)]","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"[[portfolio](team/yourally2.md)]","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"Personal email: kevinchua6@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"School email: kevinchua@u.nus.edu","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"* Role: Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"* Subrole: Intellij and Git expert","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"### Stuart Long Chay Boon","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"\u003cimg src\u003d\"images/s7u4rt99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"[[github](https://github.com/s7u4rt99)]","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"[[portfolio](team/s7u4rt99.md)]","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"Personal email: stuartlongchayboon@gmail.com\u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"School email: stuartlong@u.nus.edu","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"Year 2 CS Student","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"* Subrole: Scheduling and Tracking","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"yourally2":8,"s7u4rt99":12,"Ongzl":7,"softmagnet":13,"bernardwan":13,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"* Table of Contents ","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"- The [`Timetable`](#timetable-ui) feature was inspired by a similar feature in the past project of [Pet Store Helper](https://github.com/AY1920S2-CS2103-W15-4/main) ([DG](https://ay1920s2-cs2103-w15-4.github.io/main/DeveloperGuide.html#calendar-feature)).","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"  The implementation of the components of the [`Timetable`](#timetable-ui) feature (`TimetableTuitionClassSlot`, `TimetableDay`, `TimetableRegion` and `TimetableEmptySlot`) has been adapted from them with maximum changes to fit our app.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"  The implementation of how we [built and designed](#timetable-feature) ([TimetablePanel.java](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/ui/timetabletab/TimetablePanel.java)) the entire Timetable Tab (layout, classes etc) is entirely new.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-F11-1/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/MainApp.java). It is responsible for,","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/ui/Ui.java)","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StatusBarFooter` etc, and a TabPane consisting of `StudentsUi`, `ClassesUi` and `TimetableUi`. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"- observes the `Command` abstract class in the `Logic` component, because it needs to update when certain commands are run.","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"- depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"#### Students UI","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"![StudentsUi Class Diagram](images/StudentsDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"The `StudentListPanel` is made up of `StudentCard`s, which displays information about the `Student`s. The `StudentListPanel` takes in an `ObservableList\u003cStudent\u003e`, which builds a `StudentCard` for each student.","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"#### Timetable UI","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"Adapted from [here](https://github.com/AY1920S2-CS2103-W15-4/main/tree/master/src/main/java/clzzz/helper/ui/calendar). You can find more details in the [acknowledgements](#acknowledgements) section.","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"![TimetableUi Class Diagram](images/TimetableDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"The TimetablePanel is made up of `TimetableDay`, `TimetableHeader`, `TimetableTuitionClassSlot` and `TimetableEmptySlot`.","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"They represent the day panel on the left, the header at the top with the label and timings, the slots representing the `TuitionClass`es and the empty slots between `TuitionClass`es respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"The TimetablePanel takes in an `ObservableList\u003cTuitionClass\u003e` to build the Timetable.","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"#### Classes UI","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"![Structure of ClassPanel](images/ClassPanelDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"The ClassPanel is made up of a `TuitionClassPanel` and a `StudentClassPanel`.  ","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"They represent the left and right panels of the GUI respectively.","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"`TuitionClassPanel` takes in both an `ObservableList\u003cTuitionClass\u003e` and an `ObservableList\u003cStudent\u003e`, while","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"`StudentClassPanel` takes in only an `ObservableList\u003cStudent\u003e`.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"`TuitionClassPanel` requires an `ObservableList\u003cStudent\u003e` for the purpose of filtering the Student List based on the selected `TuitionClass`.","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"![img.png](images/ClassPanelImage.png)  ","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"`TuitionClassPanel` and `StudentClassPanel` both contain their respective `Card`s for each element in their respective `ObservableList`.  ","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"Note that `StudentClassTabCard` is different from the `StudentCard` in the `studenttab` package so we have less coupling and for future extensibility.","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/logic/Logic.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"![Logic class diagram](images/LogicClassDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"[comment]: \u003c\u003e (\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e)","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"1. When `Logic` is called upon to execute a command, it uses the `TimesTableParser` class to parse the user command.","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"yourally2"},"content":"- When called upon to parse a user command, the `TimesTableParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"  parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `TimesTableParser` returns","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"  back as a `Command` object.","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"yourally2"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/model/Model.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"![Structure of the UI Component](images/ModelClassDiagram.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"- stores the TimesTable data.","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"yourally2"},"content":"  - All `Student` objects which are contained in `UniqueStudentList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"yourally2"},"content":"  - All `TuitionClass` objects which are contained in `UniqueClassList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"yourally2"},"content":"- stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"  list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"  e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"yourally2"},"content":"- Similarly, the currently \u0027selected\u0027 `TuitionClass` objects are stored in a separated _filtered_ list which is exposed","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"  to outsiders as an unmodifiable `ObservableList\u003cTuitionClass\u003e`.","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"yourally2"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"yourally2"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components).","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"The `Student` and `NOK` class (next-of-kin) extends the `Person` class. The `Student` class\u0027s structure is as follows:","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"![Structure of the UI Component](images/StudentModelClassDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"softmagnet"},"content":"The structure of the `TuitionClass` class is as follows:","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"softmagnet"},"content":"![Structure of the UI Component](images/TuitionClassModelClassDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"**Note about the model design:**\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"yourally2"},"content":"- Note that `StudentNameList` contains a `List\u003cName\u003e`.","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"yourally2"},"content":"- Note that the diagram omits the relationship that `Student` and `NOK` are subclasses of the abstract class `Person`.","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/storage/Storage.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"Ongzl"},"content":"\u003cimg src\u003d\"images/StorageClassDiagramWTuitionClass.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"yourally2"},"content":"- can save both TimesTable data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"yourally2"},"content":"- inherits from both `TimesTableStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"Ongzl"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"yourally2"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`).","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"yourally2"},"content":"- `JsonAdaptedStudent` are saved in a `List\u003cJsonAdaptedStudent\u003e` and `JsonAdaptedTuitionClass` are saved in a","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"  `List\u003cJsonAdaptedTuitionClass\u003e`.","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"yourally2"},"content":"- `JsonAdaptedTag`s are stored in `JsonAdaptedStudent` as a `List\u003cJsonAdaptedTag\u003e`.","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"Ongzl"},"content":"Classes used by multiple components are in the `seedu.times.commons` package.","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"yourally2"},"content":"### Class Ui feature","lastModifiedDate":"2021-11-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"yourally2"},"content":"The class Ui feature allows one to see the user\u0027s classes and each class\u0027 corresponding students.","lastModifiedDate":"2021-11-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":224,"author":{"gitId":"yourally2"},"content":"#### Implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"s7u4rt99"},"content":"![Structure of Class Ui](images/ClassPanelDiagram.png)  ","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"s7u4rt99"},"content":"The class diagram for the Class Ui feature as shown in the [Classes Ui component](#classes-ui) is replicated here for convenience.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"yourally2"},"content":"`TuitionClassPanel` and `StudentClassPanel` are both contained in their respective `StackPane` located below their respective `Label`s.","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"yourally2"},"content":"![Classes Ui Sequence Diagram.png](images/ClassesUiSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"s7u4rt99"},"content":"1. `MainWindow#fillInnerParts()` creates a new `ClassPanel` using the `ObservableList\u003cStudent\u003e` and the `ObservableList\u003cTuitionClass\u003e` from `Logic`.","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"s7u4rt99"},"content":"2. A `StudentClassPanel` and a `TuitionClassPanel` is created using the `ObservableList\u003cStudent\u003e` and `ObservableList\u003cTuitionClass\u003e` passed into `ClassPanel` by `MainWindow` respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"3. `StudentClassPanel` and `TuitionClassPanel` create their respective cells for each Student/Tuition class present.","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"s7u4rt99"},"content":"4. `TuitionClassPanel#setStudentClassList()` is run by taking in the `ListView\u003cStudent\u003e` from the `StudentClassPanel`. This is to render the students in the `StudentClassPanel` in the `TuitionClassPanel` as well.","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"s7u4rt99"},"content":"5. Afterwards, when a `TuitionClassCard` is double clicked, `TuitionClassCard#onMouseClick()` bound to the fxml file is called, calling `TuitionClassCard#selectTuitionClass()`.","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"yourally2"},"content":"6. The `filtered` method is then run on the `studentList` to return a `newStudentList` which is filtered by all the students belonging to the `tuitionClass`.","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"yourally2"},"content":"7. The `tuitionClassListView` is set to the `newStudentList` created and thus rendered.","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"s7u4rt99"},"content":"### Timetable feature","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"s7u4rt99"},"content":"The timetable feature is a feature which displays the user\u0027s classes in a visual timetable format.","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"s7u4rt99"},"content":"#### Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"s7u4rt99"},"content":"The class diagram for Timetable as shown in the [TimetableUI component](#timetable-ui) is replicated here for convenience.","lastModifiedDate":"2021-11-07"},{"lineNumber":247,"author":{"gitId":"s7u4rt99"},"content":"![Timetable Class Diagram](images/TimetableDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"s7u4rt99"},"content":"The image below shows the respective parts of the `TimetablePanel`:","lastModifiedDate":"2021-11-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"yourally2"},"content":"- The green box represents the `TimetableDay`, and there are 7 `TimetableDay` parts to represent the 7 days of the week.","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"yourally2"},"content":"- The yellow box represents the `TimetableHeader`, with the box all the way at the left with the label \"Time Slots\" representing the `TimetableHeaderLabel`, and the others representing the `TimetableHeaderTiming`. There is always 1 `TimetableHeaderLabel` but can have many `TimetableHeaderTiming` parts depending on the earliest start time of the week and latest end time.","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"s7u4rt99"},"content":"- The dark blue box represents the `TimetableEmptySlot`.","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"yourally2"},"content":"- The light blue box represents the `TimetableTuitionClassSlot`.","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"yourally2"},"content":"  ![Timetable annotation](images/TimetableAnnotation.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"s7u4rt99"},"content":"[comment]: \u003c\u003e (Due to the limited size of the application\u0027s window, the Timetable UI would adjust itself and starts the days of the Timetable UI with the)","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"s7u4rt99"},"content":"[comment]: \u003c\u003e (earliest start timing and ends with the latest end timing so that the timetable is not cluttered. There is a time panel at the top to indicate what)","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"s7u4rt99"},"content":"The sequence diagrams below illustrate how the Timetable UI is built.","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"![Timetable Overall Sequence Diagram](images/TimetableUiSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"![Timetable Header Sequence Diagram](images/TimetableUiHeaderSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"s7u4rt99"},"content":"![Timetable Day Sequence Diagram](images/TimetableUiDaySequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"![Timetable Slot Sequence Diagram](images/TimetableUiSlotSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"s7u4rt99"},"content":"1. `MainWindow#fillInnerParts()` creates a new `TimetablePanel` using the `ObservableList\u003cTuitionClass\u003e` from `Logic`.","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"s7u4rt99"},"content":"2. `TimetablePanel#build()` is called in the constructor of `TimetablePanel` to build the Timetable Ui.","lastModifiedDate":"2021-11-08"},{"lineNumber":272,"author":{"gitId":"s7u4rt99"},"content":"3. `TimetablePanel#build()` starts building the Timetable Ui by first calling `TimetablePanel#buildHeader()` which takes in the `ObservableList\u003cTuitionClass\u003e`.","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"4. Based on the `Timetable#buildHeader()` reference frame above, it builds the `TimetableHeaderLabel` first, followed by the `TimetableHeaderTiming`s, starting from the earliest start time of the `ObservableList\u003cTuitionClass\u003e` until the latest end time of the `ObservableList\u003cTuitionClass\u003e` in 30 minutes interval.","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"s7u4rt99"},"content":"5. After `TimetablePanel#buildHeader()` is called, it would call `TimetablePanel#buildDays()`, which builds 7 `TimetableDay` objects to represent the 7 days of the week.","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"s7u4rt99"},"content":"6. Finally, the `TimetablePanel#buildClasses()` is called, which takes in the same `ObservableList\u003cTuitionClass\u003e` as step 3. It iterates through the _sorted_ `ObservableList\u003cTuitionClass\u003e`, building a `TimetableTuitionClassSlot` for each of the `TuitionClass`, and placing `TimetableEmptySlot`s in between the `TimetableTuitionClassSlot`s.","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"s7u4rt99"},"content":"7. A listener is attached to the `ObservableList\u003cTuitionClass\u003e` which updates the Timetable UI whenever there are changes to the `ObservableList\u003cTuitionClass\u003e`,","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"s7u4rt99"},"content":"   such as when a new `TuitionClass` is added, or an existing `TuitionClass` is edited from the `ObservableList\u003cTuitionClass\u003e`.","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"s7u4rt99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** This is just a high level explanation of how the Timetable UI is built, with the low level details being abstracted away.","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"s7u4rt99"},"content":"[comment]: \u003c\u003e (![Timetable Overall Activity Diagram]\u0026#40;images/BuildTimetableOverallDiagram.png\u0026#41;)","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"yourally2"},"content":"[comment]: \u003c\u003e (![TimetableHeader Activity Diagram]\u0026#40;images/BuildTimetableHeaderActivityDiagram-Activity\\_\\_Build_TimetableHeader.png\u0026#41;)","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"yourally2"},"content":"[comment]: \u003c\u003e (![TimetableDay Activity Diagram]\u0026#40;images/BuildTimetableDayActivityDiagram-Activity\\_\\_Build_TimetableDay.png\u0026#41;)","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":288,"author":{"gitId":"yourally2"},"content":"[comment]: \u003c\u003e (![TimetableTuitionClassSlot Activity Diagram]\u0026#40;images/BuildTimetableTuitionClassSlotsActivityDiagram-Activity\\_\\_Build_TimetableTuitionClassSlots.png\u0026#41;)","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":290,"author":{"gitId":"yourally2"},"content":"[comment]: \u003c\u003e (![Find earliest start hour and latest end hour Activity Diagram]\u0026#40;images/FindEarliestAndLatestHourActivityDiagram-Activity\\_\\_Find_earliest_start_hour_and_latest_end_hour.png\u0026#41;)","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":292,"author":{"gitId":"s7u4rt99"},"content":"### Observer Pattern","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"s7u4rt99"},"content":"The Observer Pattern is facilitated by the `CommandObserver` who represents the `Observer`. It observes the abstract `Command` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":296,"author":{"gitId":"s7u4rt99"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"s7u4rt99"},"content":"The class diagram below shows how we implemented the structure of the Observer Pattern.","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"s7u4rt99"},"content":"![Command Observer Pattern](images/CommandObserverPattern.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"s7u4rt99"},"content":"The `MainWindow` from `UI` component implements both the `Ui` and `CommandObserver` interface as it plays the role of the `Ui` as well as a `CommandObserver`. The `MainWindow` observes the `Command` class, who calls `CommandObserver#updateView()`, `CommandObserver#updateClass()` and `CommandObserver#hideTuitionClassList()` depending on what Command `XYZCommand` is.","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"s7u4rt99"},"content":"For eg, the `ViewComand` calls `CommandObserver#updateView()` to set the displayed tab of the `CommandObserver` to the tab specified. Additionally, the `AddToClassCommand` calls both `CommandObserver#updateClass()` and `CommandObserver#updateView()` to update the class details and updates the view to the `Classes` tab when we execute the `AddToClassCommand`.","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"s7u4rt99"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":308,"author":{"gitId":"s7u4rt99"},"content":"1. (Bad) After each command call, set a variable in the `CommandResult` to be the value of the Tab to change to, or a boolean value to see if we need to update the class. The `MainWindow` would then check the variables in `CommandResult` in `MainWindow#executeCommand()`, and updates the tab or class accordingly.","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"s7u4rt99"},"content":"   - This is a very bad and inefficient method as the `MainWindow` would have to constantly check the `CommandResult` after every `Command`.","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"s7u4rt99"},"content":"   - With the addition of new variables in `CommandResult`, it has the potential to introduce more bugs and make the code more unreadable. Additionally, other classes may also be able to access these variables accidentally, as they have to be `public` in order for `MainWindow` to access them, leading to unwanted consequences.","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"s7u4rt99"},"content":"2. (Good) Follow the Observer Pattern taught in CS2103T, where we register the `MainWindow` as a `CommandObserver` to observe the abstract `Command` class, and will only get updated when necessary.","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"yourally2"},"content":"   - This is a more efficient method as the `MainWindow` does not have to always check the `CommandResult` after each execution.","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"yourally2"},"content":"   - No new variables are needed to be introduced into the `CommandResult`, keeping our code neater and less bug prone.","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"yourally2"},"content":"### `add` and `edit` commands to include next-of-kin `nok`","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"yourally2"},"content":"This was challenging because the current `Parser` is only able to parse contents _between_ tags, but not encompass other tags within recursively.  ","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"yourally2"},"content":"For example, `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25` requires us to parse the tags before and after `nok/` _separately_, which is a challenging problem to think about at first.","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"yourally2"},"content":"We initially thought of a recursive implementation of the `Parser`, calling `parse` methods again on the two halves whenever we find an `/nok` tag, but","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"yourally2"},"content":"it proved to be too lofty and unneccesarily complicated. Moreover, using recursion in applications is not recommended due to the high potential","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"yourally2"},"content":"of unseen bugs.","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"yourally2"},"content":"Next, we thought of modifying the parser such that it always checks for the `/nok` tag (or any of the tags specified in the parameter) _first_, before parsing the other tags","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"yourally2"},"content":"in the normal way. However, this was again too large scale for a single command with the same parameter.","lastModifiedDate":"2021-11-06"},{"lineNumber":326,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"yourally2"},"content":"Unexpectedly, the solution that we came up with in the end was very simple. we just had to split the string by `/nok` and put both of the split","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"yourally2"},"content":"portions into the parser. Modifying the existing `parser` was not needed at all. we learnt that oftentimes for a small feature, we don\u0027t have","lastModifiedDate":"2021-11-06"},{"lineNumber":329,"author":{"gitId":"yourally2"},"content":"to go for the most extensible or \"smart\" solution, but the simplest to understand.","lastModifiedDate":"2021-11-06"},{"lineNumber":330,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"softmagnet"},"content":"### Find commands","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"softmagnet"},"content":"The find commands are a common group of commands that allows users to quickly find `Student` or `TuitionClass`. They are:","lastModifiedDate":"2021-11-08"},{"lineNumber":334,"author":{"gitId":"softmagnet"},"content":"* `findname`","lastModifiedDate":"2021-11-08"},{"lineNumber":335,"author":{"gitId":"softmagnet"},"content":"* `findtag`","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"softmagnet"},"content":"* `findclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"softmagnet"},"content":"* `findclassname`","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"softmagnet"},"content":"#### Implementation of the command","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"softmagnet"},"content":"The implementation of all search-related commands such as `findtag`, `findname`, `findclass` and `findclassname` uses a","lastModifiedDate":"2021-11-05"},{"lineNumber":342,"author":{"gitId":"softmagnet"},"content":"common approach of setting a predicate inside the corresponding `FilteredList` class. As mentioned above in `Model`","lastModifiedDate":"2021-11-05"},{"lineNumber":343,"author":{"gitId":"softmagnet"},"content":"section, the filtered list either contains an `ObservableList\u003cStudent\u003e` or `ObservableList\u003cTuitionClass\u003e` that is bound to the","lastModifiedDate":"2021-11-05"},{"lineNumber":344,"author":{"gitId":"softmagnet"},"content":"UI such that UI is responsive to any changes in the list and these changes can be brought forward by setting a new","lastModifiedDate":"2021-11-05"},{"lineNumber":345,"author":{"gitId":"softmagnet"},"content":"predicate. One should also note that the default predicate always returns a boolean `true` which means no `Person`","lastModifiedDate":"2021-11-05"},{"lineNumber":346,"author":{"gitId":"softmagnet"},"content":"or `TuitionClass`is filtered out at the start.","lastModifiedDate":"2021-11-05"},{"lineNumber":347,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":348,"author":{"gitId":"softmagnet"},"content":"The sequence diagram when a `findtag` command is executed is as follows:","lastModifiedDate":"2021-11-05"},{"lineNumber":349,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"softmagnet"},"content":"![Sequence of execution when a findtag command is executed](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-11-05"},{"lineNumber":351,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"softmagnet"},"content":"The rest of the find command works the same way but note that for `findclass` and `findclassname`, they are calling the","lastModifiedDate":"2021-11-05"},{"lineNumber":353,"author":{"gitId":"softmagnet"},"content":"`setPredicate` method of `filteredTuitionClass` instead.","lastModifiedDate":"2021-11-05"},{"lineNumber":354,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"softmagnet"},"content":"#### Implementation of find predicates","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"softmagnet"},"content":"Furthermore, to fully understand the find command, we also have to understand how predicate works. The predicates used","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"softmagnet"},"content":"that filters out students or classes are typical java `Predicate`. For each searchable attribute, a new class must be","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"softmagnet"},"content":"created that implements `Predicate` with the right generic type (i.e. predicate class for filtering `Student` must","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"s7u4rt99"},"content":"implement `Predicate\u003cStudent\u003e`, and predicate class for filtering `TuitionClass` must implement `Predicate\u003cTuitionClass\u003e`).","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"softmagnet"},"content":"Each custom predicate class contains a `List` of search strings that would be used to match against the tested items","lastModifiedDate":"2021-11-06"},{"lineNumber":362,"author":{"gitId":"softmagnet"},"content":"in the search.","lastModifiedDate":"2021-11-06"},{"lineNumber":363,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":364,"author":{"gitId":"s7u4rt99"},"content":"### View feature","lastModifiedDate":"2021-11-07"},{"lineNumber":365,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"s7u4rt99"},"content":"The `Students` tab, `Classses` tab and `Timetable` tab, are parts of the [`UI Component`](#ui-component).","lastModifiedDate":"2021-11-07"},{"lineNumber":367,"author":{"gitId":"s7u4rt99"},"content":"Navigation between these tabs without the mouse is crucial for our application as the target audience are people who prefer keyboard to mouse or voice commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":368,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":369,"author":{"gitId":"s7u4rt99"},"content":"The `view` feature is facilitated by the `ViewCommand`, which extends the abstract `Command` class. The `ViewCommand` sets the displayed tab to be the tab specified by the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"s7u4rt99"},"content":"#### Implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"s7u4rt99"},"content":"The sequence diagram for the `view` command is shown below.","lastModifiedDate":"2021-11-07"},{"lineNumber":374,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"s7u4rt99"},"content":"![Sequence Diagram for view command](images/ViewSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":377,"author":{"gitId":"s7u4rt99"},"content":"`TabName` is an enumeration which represents the three tabs (`Students`, `Classes`, and `Timetable`), and their respective tab index (0 for `Students`, 1 for `Classes` and 2 for `Timetable`).","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"s7u4rt99"},"content":"The `ViewCommand` calls the `CommandObserver#updateView(TabName)`, which updates the view of the `CommandObserver`s watching the `Command` abstract class to the `TabName` specified.","lastModifiedDate":"2021-11-07"},{"lineNumber":380,"author":{"gitId":"s7u4rt99"},"content":"In this case, the only `CommandObserver` is the `MainWindow`, thus it updates the view of the `MainWindow` to display the `TIMETABLE` Tab at index 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":382,"author":{"gitId":"s7u4rt99"},"content":"### Sort feature","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"s7u4rt99"},"content":"The `sort` feature allows sorting of the `Student`s and `TuitionClass`es. It is able to sort it by `Student` name or `ClassTiming`, in ascending or descending order.","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":386,"author":{"gitId":"s7u4rt99"},"content":"The `sort` feature is facilitated by the `SortCommand`, which extends the abstract `Command` class.","lastModifiedDate":"2021-11-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":388,"author":{"gitId":"s7u4rt99"},"content":"#### Implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":390,"author":{"gitId":"s7u4rt99"},"content":"The sequence diagram for the `sort` command is shown below.","lastModifiedDate":"2021-11-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":392,"author":{"gitId":"s7u4rt99"},"content":"![Sequence Diagram for sort command](images/SortSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":394,"author":{"gitId":"s7u4rt99"},"content":"The sort command sorts the `ObservableList\u003cStudent\u003e` or the `ObservableList\u003cTuitionClass\u003e` in the `Model` component, whose results gets immediately reflected in their respective `Students` tab or `Classes` Tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":395,"author":{"gitId":"s7u4rt99"},"content":"After sorting, the Command sets the view to switch to their respective tabs, so that the user would be able to see the changes.","lastModifiedDate":"2021-11-07"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":397,"author":{"gitId":"Ongzl"},"content":"### Adding a Student to a class","lastModifiedDate":"2021-11-04"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"softmagnet"},"content":"`AddToClass` command adds an existing student into an existing tuition class.","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":401,"author":{"gitId":"softmagnet"},"content":"#### Implementation of the the parser","lastModifiedDate":"2021-11-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"Ongzl"},"content":"`AddToClassCommand` command\u0027s parser `AddToClassCommandParser` works by parsing indexes in the user input and","lastModifiedDate":"2021-11-07"},{"lineNumber":404,"author":{"gitId":"Ongzl"},"content":"generating a `List\u003cIndex\u003e` whereby the first index will be for the `TuitionClass` receving the students and the rest","lastModifiedDate":"2021-11-07"},{"lineNumber":405,"author":{"gitId":"Ongzl"},"content":"of the index being the `Student`s to be added into the `TuitionClass`. The only thing to note is that the parser","lastModifiedDate":"2021-11-07"},{"lineNumber":406,"author":{"gitId":"Ongzl"},"content":"will only see zero and negative indices as invalid and not","lastModifiedDate":"2021-11-07"},{"lineNumber":407,"author":{"gitId":"softmagnet"},"content":"out-of-range indices. This is because at the time of parsing, the model is not accessed to check if the indices are","lastModifiedDate":"2021-11-07"},{"lineNumber":408,"author":{"gitId":"softmagnet"},"content":"out-of-range. The reason for this design is to reduce dependency and keep to the single responsibility principle. The","lastModifiedDate":"2021-11-07"},{"lineNumber":409,"author":{"gitId":"softmagnet"},"content":"job of the parser should be separated from checking in with the model.","lastModifiedDate":"2021-11-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":411,"author":{"gitId":"softmagnet"},"content":"#### Implementation of the command","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"softmagnet"},"content":"The `AddToClassCommand` command follows an index based format and the class contains the `Index` of the class to add","lastModifiedDate":"2021-11-07"},{"lineNumber":414,"author":{"gitId":"softmagnet"},"content":"the new students to and a `List` of `Index` of students to be added. The command\u0027s execution is composed of various","lastModifiedDate":"2021-11-07"},{"lineNumber":415,"author":{"gitId":"softmagnet"},"content":"smaller steps. The steps are listed below:","lastModifiedDate":"2021-11-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"softmagnet"},"content":"1. Check indices are not out-of-range","lastModifiedDate":"2021-11-07"},{"lineNumber":418,"author":{"gitId":"softmagnet"},"content":"2. Generate a list of `Name` to be added to the class","lastModifiedDate":"2021-11-07"},{"lineNumber":419,"author":{"gitId":"softmagnet"},"content":"3. Produce the new student `StudentNameList` based on the class\u0027s existing `StudentNameList` and the list of `Name` to","lastModifiedDate":"2021-11-07"},{"lineNumber":420,"author":{"gitId":"softmagnet"},"content":"   be added","lastModifiedDate":"2021-11-07"},{"lineNumber":421,"author":{"gitId":"softmagnet"},"content":"4. Creating the right `EditClassDescriptor`","lastModifiedDate":"2021-11-07"},{"lineNumber":422,"author":{"gitId":"softmagnet"},"content":"5. Updating the `Model` with updated `TuitionClass`","lastModifiedDate":"2021-11-07"},{"lineNumber":423,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":424,"author":{"gitId":"softmagnet"},"content":"(Note that updating view action is omitted)","lastModifiedDate":"2021-11-07"},{"lineNumber":425,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":426,"author":{"gitId":"softmagnet"},"content":"The following sequence diagram gives an overview of the execution:","lastModifiedDate":"2021-11-07"},{"lineNumber":427,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":428,"author":{"gitId":"softmagnet"},"content":"![AddToClass Sequence](images/AddToClassSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":429,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":430,"author":{"gitId":"softmagnet"},"content":"The sequence diagram for the first reference frame from above:","lastModifiedDate":"2021-11-07"},{"lineNumber":431,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":432,"author":{"gitId":"softmagnet"},"content":" ![AddToClass Sequence](images/AddToClassRef1.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":433,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":434,"author":{"gitId":"softmagnet"},"content":"The sequence diagram for the second reference frame from above:","lastModifiedDate":"2021-11-07"},{"lineNumber":435,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":436,"author":{"gitId":"softmagnet"},"content":"![AddToClass Sequence](images/AddToClassRef2.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":437,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":438,"author":{"gitId":"bernardwan"},"content":"### Removing Student(s) from a Tuition Class","lastModifiedDate":"2021-11-07"},{"lineNumber":439,"author":{"gitId":"bernardwan"},"content":"Allows the user to remove one or more students from a selected tuition class.","lastModifiedDate":"2021-11-08"},{"lineNumber":440,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":441,"author":{"gitId":"bernardwan"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":442,"author":{"gitId":"bernardwan"},"content":"The `removefromclass` command follows a similar execution path as other commands. The user input is passed to","lastModifiedDate":"2021-11-07"},{"lineNumber":443,"author":{"gitId":"bernardwan"},"content":"the `LogicManager`, which parses the input using the `TimesTableParser` and `RemoveFromClassCommandParser`.","lastModifiedDate":"2021-11-07"},{"lineNumber":444,"author":{"gitId":"bernardwan"},"content":"A `RemoveFromClassCommand` is then created with the class and student indices involved in the command.","lastModifiedDate":"2021-11-07"},{"lineNumber":445,"author":{"gitId":"bernardwan"},"content":"The command is then executed, interacting with the `Model`.","lastModifiedDate":"2021-11-07"},{"lineNumber":446,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":447,"author":{"gitId":"bernardwan"},"content":"An overview of how the `RemoveFromClassCommand` is created is shown by this sequence diagram:","lastModifiedDate":"2021-11-07"},{"lineNumber":448,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":449,"author":{"gitId":"bernardwan"},"content":"![RemoveFromClass Overview Sequence Diagram](images/RemoveFromClassOverviewDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":450,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":451,"author":{"gitId":"bernardwan"},"content":"#### Challenges faced","lastModifiedDate":"2021-11-07"},{"lineNumber":452,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":453,"author":{"gitId":"bernardwan"},"content":"The challenging aspect in removing students from a tuition class is in figuring out which students to remove.","lastModifiedDate":"2021-11-07"},{"lineNumber":454,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":455,"author":{"gitId":"bernardwan"},"content":"The `RemoveFromClassCommandParser` parses the user input to obtain a list of indexes to be passed to the `RemoveFromClassCommand`","lastModifiedDate":"2021-11-07"},{"lineNumber":456,"author":{"gitId":"bernardwan"},"content":"As such, the `RemoveFromClassCommand` only has access to a list of indices. We can easily obtain the `TuitionClass` object by","lastModifiedDate":"2021-11-07"},{"lineNumber":457,"author":{"gitId":"bernardwan"},"content":"simply using the class index with `Model#getFilteredTuitionClassList()`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":459,"author":{"gitId":"bernardwan"},"content":"On the other hand, the `TuitionClass` object only stores","lastModifiedDate":"2021-11-08"},{"lineNumber":460,"author":{"gitId":"bernardwan"},"content":"the `Name` of each `Student` in the `TuitionClass`. This was done as we use immutable objects throughout TimesTable. As such, if the user","lastModifiedDate":"2021-11-07"},{"lineNumber":461,"author":{"gitId":"bernardwan"},"content":"modifies any of the fields of a `Student` using the `edit` command, then we would have to reflect the change throughout all the tuition classes","lastModifiedDate":"2021-11-07"},{"lineNumber":462,"author":{"gitId":"bernardwan"},"content":"of the student. By only storing the `Name` of the `Student` in the `TuitionClass` object, then we only have to update all the `TuitionClass`","lastModifiedDate":"2021-11-07"},{"lineNumber":463,"author":{"gitId":"bernardwan"},"content":"objects if the user modifies the `Name` field of the `Student`.","lastModifiedDate":"2021-11-07"},{"lineNumber":464,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":465,"author":{"gitId":"bernardwan"},"content":"However, this decision results in added complexity when removing students from tuition classes. This is due to the fact that the `Names`","lastModifiedDate":"2021-11-07"},{"lineNumber":466,"author":{"gitId":"bernardwan"},"content":"stored in the `TuitionClass` object are in the order in which the students were added, but the order of the students as displayed in the","lastModifiedDate":"2021-11-07"},{"lineNumber":467,"author":{"gitId":"bernardwan"},"content":"GUI is dependent on the `sort` and `find` commands used by the user. As such, the indices entered by the user do not correspond with the","lastModifiedDate":"2021-11-07"},{"lineNumber":468,"author":{"gitId":"bernardwan"},"content":"actual `Names` stored in the `TuitionClass` object.","lastModifiedDate":"2021-11-07"},{"lineNumber":469,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":470,"author":{"gitId":"bernardwan"},"content":"To solve this problem, we have to obtain the list of students in the order displayed by the GUI. To obtain this list,","lastModifiedDate":"2021-11-07"},{"lineNumber":471,"author":{"gitId":"bernardwan"},"content":"we use the same method that the GUI uses to display the list in the first place. We use `Model#getFilteredStudentList()`,","lastModifiedDate":"2021-11-08"},{"lineNumber":472,"author":{"gitId":"bernardwan"},"content":"then filter it to the students whose names are in the `TuitionClass` that we are concerned with. From here, we can now use the","lastModifiedDate":"2021-11-07"},{"lineNumber":473,"author":{"gitId":"bernardwan"},"content":"student indices entered by the user to obtain the `Names` of the corresponding `Students` in the filtered list. Then we can create","lastModifiedDate":"2021-11-07"},{"lineNumber":474,"author":{"gitId":"bernardwan"},"content":"a new `TuitionClass` object with an updated list of `Names` and replace the old `TuitionClass` with this new one.","lastModifiedDate":"2021-11-07"},{"lineNumber":475,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":476,"author":{"gitId":"bernardwan"},"content":"An overview of the process is shown below:","lastModifiedDate":"2021-11-07"},{"lineNumber":477,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":478,"author":{"gitId":"bernardwan"},"content":"![RemoveFromClass Internal Diagram](images/RemoveFromClassCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":479,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":480,"author":{"gitId":"Ongzl"},"content":"### Deleting Tuition Class","lastModifiedDate":"2021-11-04"},{"lineNumber":481,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"Ongzl"},"content":"Deletes a tuition class from the `classes` list in the `Classes` tab, to delete a tuition class, the `deleteclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":483,"author":{"gitId":"Ongzl"},"content":"command is used.","lastModifiedDate":"2021-11-08"},{"lineNumber":484,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"Ongzl"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":486,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":487,"author":{"gitId":"Ongzl"},"content":"1. The DeleteCommandParser parses the user input to obtain the index of the class to be deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":488,"author":{"gitId":"Ongzl"},"content":"2. A DeleteCommand is created with the index of the tuition class to be deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":489,"author":{"gitId":"Ongzl"},"content":"3. The DeleteCommand#execute() is run, the TimesTable is searched to find the tuition class to be deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":490,"author":{"gitId":"Ongzl"},"content":"4. That tuition class is then deleted from the `Model` and the `UniqueClassList` by extension.","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":492,"author":{"gitId":"bernardwan"},"content":"A diagram of the procedure is shown below:","lastModifiedDate":"2021-10-21"},{"lineNumber":493,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":494,"author":{"gitId":"Ongzl"},"content":"![DeleteClass Sequence Diagram](images/DeleteClassSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":496,"author":{"gitId":"Ongzl"},"content":"![DeleteClass Ref Sequence Diagram](images/DeleteClassRef1.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":497,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"Ongzl"},"content":"### Adding Tuition Class","lastModifiedDate":"2021-11-06"},{"lineNumber":499,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":500,"author":{"gitId":"Ongzl"},"content":"Adds a new tuition class into the `classes` list in the `Classes` tab with all the relevant detail, to add a tuition","lastModifiedDate":"2021-11-08"},{"lineNumber":501,"author":{"gitId":"Ongzl"},"content":"class, the `addclass` command is used.","lastModifiedDate":"2021-11-08"},{"lineNumber":502,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":503,"author":{"gitId":"Ongzl"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":504,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":505,"author":{"gitId":"Ongzl"},"content":"1. The `AddClassCommandParser` parses the user input to obtain 4 parameters: `ClassName`, `ClassTiming`, `Rate` and","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"Ongzl"},"content":"   `Location`.","lastModifiedDate":"2021-11-08"},{"lineNumber":507,"author":{"gitId":"Ongzl"},"content":"2. The parser checks if the user has inputted valid value for these 4 parameter.","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"Ongzl"},"content":"3. These 4 parameters and a new empty`StudentNameList` are then used to create a new `TuitionClass` to be passed into a new `AddClassCommand(TuitionClass)`","lastModifiedDate":"2021-11-08"},{"lineNumber":509,"author":{"gitId":"Ongzl"},"content":"   as an argument.","lastModifiedDate":"2021-11-08"},{"lineNumber":510,"author":{"gitId":"Ongzl"},"content":"   4.This command is then executed and the new `TuitionClass` is added into the `Model` and into the","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"Ongzl"},"content":"   `UniqueClassList`, where further checks are done to ensure that there is no overlapping timing between the new","lastModifiedDate":"2021-11-06"},{"lineNumber":512,"author":{"gitId":"Ongzl"},"content":"   `TuitionClass` that is to be added and other already existing `TuitionClass`es in the list, as TimesTable is made for a","lastModifiedDate":"2021-11-06"},{"lineNumber":513,"author":{"gitId":"Ongzl"},"content":"   single user and thus designed to not allow overlapping `TuitionClass`es","lastModifiedDate":"2021-11-06"},{"lineNumber":514,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":515,"author":{"gitId":"Ongzl"},"content":"The sequence diagram when a `AddClass` command is executed by the LogicManager is as follows:","lastModifiedDate":"2021-11-06"},{"lineNumber":516,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":517,"author":{"gitId":"Ongzl"},"content":"![Sequence diagram when AddClass command is executed in LogicManger](images/AddClassSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":518,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":519,"author":{"gitId":"Ongzl"},"content":"![Reference frame of AddClass command](images/AddClassRef1.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":520,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"Ongzl"},"content":"The sequence diagram when a new `TuitionClass` is added to the `Model` is as follows","lastModifiedDate":"2021-11-06"},{"lineNumber":522,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":523,"author":{"gitId":"Ongzl"},"content":"![Sequnce diagram in model when class is added](images/AddClassModelSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":524,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":525,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"yourally2"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":530,"author":{"gitId":"yourally2"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":531,"author":{"gitId":"yourally2"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":532,"author":{"gitId":"yourally2"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"yourally2"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"yourally2"},"content":"- Name: Kevin Bernard Long Zheng Wei","lastModifiedDate":"2021-11-08"},{"lineNumber":544,"author":{"gitId":"yourally2"},"content":"- Age: 28","lastModifiedDate":"2021-11-08"},{"lineNumber":545,"author":{"gitId":"yourally2"},"content":"- Gender: Male","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"yourally2"},"content":"- Marital status: Single","lastModifiedDate":"2021-11-08"},{"lineNumber":547,"author":{"gitId":"yourally2"},"content":"- Country: Singapore","lastModifiedDate":"2021-11-08"},{"lineNumber":548,"author":{"gitId":"yourally2"},"content":"- Habits: Sleeping, Netflix, Gym, Gaming","lastModifiedDate":"2021-11-08"},{"lineNumber":549,"author":{"gitId":"yourally2"},"content":"- Lifestyle: Code, eat, sleep, gives freelance tuition.","lastModifiedDate":"2021-11-08"},{"lineNumber":550,"author":{"gitId":"yourally2"},"content":"  - prefer desktop apps over other types","lastModifiedDate":"2021-11-08"},{"lineNumber":551,"author":{"gitId":"yourally2"},"content":"  - can type fast","lastModifiedDate":"2021-11-08"},{"lineNumber":552,"author":{"gitId":"yourally2"},"content":"  - prefers typing to mouse interactions","lastModifiedDate":"2021-11-08"},{"lineNumber":553,"author":{"gitId":"yourally2"},"content":"  - is reasonably comfortable using CLI apps","lastModifiedDate":"2021-11-08"},{"lineNumber":554,"author":{"gitId":"yourally2"},"content":"- Interest: Loves coding and building apps during his free time with friends. Loves teaching people.","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"yourally2"},"content":"- Values: Work hard play hard.","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"yourally2"},"content":"- Salary: $12000/mth","lastModifiedDate":"2021-11-08"},{"lineNumber":557,"author":{"gitId":"yourally2"},"content":"- Job: Full time freelance A-levels Mathematics tuition teacher (Size of class: group and one-to-one)","lastModifiedDate":"2021-11-08"},{"lineNumber":558,"author":{"gitId":"yourally2"},"content":"  - Has a need to manage a significant number of contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":559,"author":{"gitId":"yourally2"},"content":"- Car: Owns 2 Teslas.","lastModifiedDate":"2021-11-08"},{"lineNumber":560,"author":{"gitId":"yourally2"},"content":"- Home Environment: Lives with parents, older brother and dog.","lastModifiedDate":"2021-11-08"},{"lineNumber":561,"author":{"gitId":"yourally2"},"content":"- Education: NIE graduate.","lastModifiedDate":"2021-11-08"},{"lineNumber":562,"author":{"gitId":"yourally2"},"content":"- Household Description: Sentosa Cove landed property with rich parents.","lastModifiedDate":"2021-11-08"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"s7u4rt99"},"content":"**Value proposition**: \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":565,"author":{"gitId":"softmagnet"},"content":"A busy tutor who has a large number of students can find it extremely difficult to","lastModifiedDate":"2021-09-29"},{"lineNumber":566,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":567,"author":{"gitId":"yourally2"},"content":"- manage and organize student information","lastModifiedDate":"2021-11-08"},{"lineNumber":568,"author":{"gitId":"yourally2"},"content":"- schedule according to student class timing","lastModifiedDate":"2021-11-08"},{"lineNumber":569,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":570,"author":{"gitId":"softmagnet"},"content":"This is where Timestable comes in. It improves two main areas:","lastModifiedDate":"2021-09-29"},{"lineNumber":571,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":572,"author":{"gitId":"yourally2"},"content":"- querying","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"yourally2"},"content":"  - student information","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"yourally2"},"content":"  - parent information","lastModifiedDate":"2021-11-08"},{"lineNumber":575,"author":{"gitId":"yourally2"},"content":"  - class timing","lastModifiedDate":"2021-11-08"},{"lineNumber":576,"author":{"gitId":"yourally2"},"content":"- data manipulation","lastModifiedDate":"2021-11-08"},{"lineNumber":577,"author":{"gitId":"yourally2"},"content":"  - add","lastModifiedDate":"2021-11-08"},{"lineNumber":578,"author":{"gitId":"yourally2"},"content":"  - delete","lastModifiedDate":"2021-11-08"},{"lineNumber":579,"author":{"gitId":"yourally2"},"content":"  - update","lastModifiedDate":"2021-11-08"},{"lineNumber":580,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":581,"author":{"gitId":"s7u4rt99"},"content":"By improving the data manipulation process, the tutor can organize student information more easily. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":582,"author":{"gitId":"softmagnet"},"content":"By improving the querying process, the tutor can make scheduling less painstaking and time-consuming.","lastModifiedDate":"2021-09-29"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"| Priority | As a …​        | I want to …​                                                | So that I can…​                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"yourally2"},"content":"| -------- | -------------- | ----------------------------------------------------------- | --------------------------------------------------- |","lastModifiedDate":"2021-11-08"},{"lineNumber":590,"author":{"gitId":"s7u4rt99"},"content":"| `* `     | Careless User  | Be notified if there was a clash in timing                  | I can have peace of mind                            |","lastModifiedDate":"2021-11-08"},{"lineNumber":591,"author":{"gitId":"s7u4rt99"},"content":"| `* `     | User           | View schedule for a specific day                            | Can prepare for lesson and won\u0027t be absent          |","lastModifiedDate":"2021-11-08"},{"lineNumber":592,"author":{"gitId":"yourally2"},"content":"| `* *`    | User           | Check if student has paid                                   | Keep track of who I need to remind                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":593,"author":{"gitId":"yourally2"},"content":"| `* *`    | User           | Save class rates                                            | Keep track of how much to charge each class         |","lastModifiedDate":"2021-09-29"},{"lineNumber":594,"author":{"gitId":"yourally2"},"content":"| `* *`    | User           | Edit my student details                                     | Keep track of changes of my students                |","lastModifiedDate":"2021-09-29"},{"lineNumber":595,"author":{"gitId":"s7u4rt99"},"content":"| `* *`    | Organised user | Sort my students and classes                                | Arrange them the way I want to organise them        |","lastModifiedDate":"2021-11-08"},{"lineNumber":596,"author":{"gitId":"yourally2"},"content":"| `* * *`  | Forgetful user | Save their contacts                                         | I can remember them                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":597,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User           | View my class timings for a specific contact (day and time) | Know which day will I be teaching this contact      |","lastModifiedDate":"2021-09-29"},{"lineNumber":598,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User           | Record parent contact of my students                        | Contact the student\u0027s parent in case of emergencies |","lastModifiedDate":"2021-09-29"},{"lineNumber":599,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User           | Delete/archive my student\u0027s contacts and information        | I can declutter my contacts.                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":600,"author":{"gitId":"yourally2"},"content":"| `* * *`  | User           | Record locations of classes of each student                 | Knows where to go                                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"Ongzl"},"content":"(For all use cases below, the **System** is the `TimesTable` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"Ongzl"},"content":"**Use case: Delete a student**","lastModifiedDate":"2021-11-04"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"s7u4rt99"},"content":"1.  User requests to list students.","lastModifiedDate":"2021-11-07"},{"lineNumber":611,"author":{"gitId":"s7u4rt99"},"content":"2.  TimesTable shows a list of students.","lastModifiedDate":"2021-11-07"},{"lineNumber":612,"author":{"gitId":"s7u4rt99"},"content":"3.  User requests to delete a specific student in the list.","lastModifiedDate":"2021-11-07"},{"lineNumber":613,"author":{"gitId":"s7u4rt99"},"content":"4.  TimesTable deletes the student.","lastModifiedDate":"2021-11-07"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"yourally2"},"content":"- 1a. The list is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"yourally2"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"yourally2"},"content":"  - 3a1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2021-11-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"yourally2"},"content":"- 3b. The given delete command has a typo.","lastModifiedDate":"2021-11-08"},{"lineNumber":630,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":631,"author":{"gitId":"yourally2"},"content":"  - 3b1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":632,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":633,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2021-11-04"},{"lineNumber":634,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":635,"author":{"gitId":"Ongzl"},"content":"**Use case: Add a student**","lastModifiedDate":"2021-11-04"},{"lineNumber":636,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":637,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":638,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":639,"author":{"gitId":"Ongzl"},"content":"1. User input details of new person to be added to TimesTable.","lastModifiedDate":"2021-11-04"},{"lineNumber":640,"author":{"gitId":"Ongzl"},"content":"2. TimesTable adds new person with relevant details.","lastModifiedDate":"2021-09-28"},{"lineNumber":641,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":642,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":643,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":644,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-09-28"},{"lineNumber":645,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":646,"author":{"gitId":"yourally2"},"content":"- 1a. User keys in add command with invalid format(missing compulsory fields).","lastModifiedDate":"2021-11-08"},{"lineNumber":647,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":648,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":649,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":650,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":651,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":652,"author":{"gitId":"yourally2"},"content":"- 1b. User keys in add command with valid format but invalid String format for certain fields.","lastModifiedDate":"2021-11-08"},{"lineNumber":653,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":654,"author":{"gitId":"yourally2"},"content":"  - 1b1. TimesTable shows an error message saying which field contains the invalid format.","lastModifiedDate":"2021-11-08"},{"lineNumber":655,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":656,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":657,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":658,"author":{"gitId":"Ongzl"},"content":"**Use case: Edit student details**","lastModifiedDate":"2021-11-04"},{"lineNumber":659,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":660,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":662,"author":{"gitId":"Ongzl"},"content":"1. User edits details of existing student.","lastModifiedDate":"2021-11-04"},{"lineNumber":663,"author":{"gitId":"Ongzl"},"content":"2. TimesTable updates the student with the added details.","lastModifiedDate":"2021-11-04"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":665,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":667,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":668,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":669,"author":{"gitId":"yourally2"},"content":"- 1a. User keys in field with invalid format.","lastModifiedDate":"2021-11-08"},{"lineNumber":670,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":671,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":673,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":674,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":675,"author":{"gitId":"Ongzl"},"content":"**Use case: Find student by name**","lastModifiedDate":"2021-11-04"},{"lineNumber":676,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":677,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":678,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":679,"author":{"gitId":"Ongzl"},"content":"1. User input name of student that user wants to find.","lastModifiedDate":"2021-11-04"},{"lineNumber":680,"author":{"gitId":"Ongzl"},"content":"2. TimesTable shows the student that has the same name.","lastModifiedDate":"2021-11-04"},{"lineNumber":681,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":682,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":683,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":684,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":685,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":686,"author":{"gitId":"yourally2"},"content":"- 1a. No student name matches the name keyword inputted.","lastModifiedDate":"2021-11-08"},{"lineNumber":687,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":688,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows no student listed.","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":690,"author":{"gitId":"Ongzl"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":691,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":692,"author":{"gitId":"Ongzl"},"content":"**Use case: Find student by tag**","lastModifiedDate":"2021-11-04"},{"lineNumber":693,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":694,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":695,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"Ongzl"},"content":"1. User input tag of student that user wants to find.","lastModifiedDate":"2021-11-04"},{"lineNumber":697,"author":{"gitId":"Ongzl"},"content":"2. TimesTable shows the student that has the same tag.","lastModifiedDate":"2021-11-04"},{"lineNumber":698,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":699,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":700,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":701,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":702,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":703,"author":{"gitId":"yourally2"},"content":"- 1a. No student tag matches the tag keyword inputted.","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows no student listed.","lastModifiedDate":"2021-11-08"},{"lineNumber":706,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":707,"author":{"gitId":"Ongzl"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":708,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":709,"author":{"gitId":"Ongzl"},"content":"**Use case: Add a tuition class**","lastModifiedDate":"2021-11-04"},{"lineNumber":710,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":711,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":712,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":713,"author":{"gitId":"Ongzl"},"content":"1. User input details of new tuition class to be added to TimesTable.","lastModifiedDate":"2021-11-04"},{"lineNumber":714,"author":{"gitId":"Ongzl"},"content":"2. TimesTable adds new tuition class with relevant details.","lastModifiedDate":"2021-11-04"},{"lineNumber":715,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":716,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":717,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":718,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-09-28"},{"lineNumber":719,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":720,"author":{"gitId":"yourally2"},"content":"- 1a. User keys in addclass command with invalid format(missing compulsory fields).","lastModifiedDate":"2021-11-08"},{"lineNumber":721,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":723,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":724,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"yourally2"},"content":"- 1b. User keys in addclass command with valid format but invalid String format for certain field.","lastModifiedDate":"2021-11-08"},{"lineNumber":727,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":728,"author":{"gitId":"yourally2"},"content":"  - 1b1. TimesTable shows an error message saying which field contains the invalid format.","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":730,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":731,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":732,"author":{"gitId":"yourally2"},"content":"- 1c. User keys in addclass command with valid format, valid String format for all fields, but class timing overlaps","lastModifiedDate":"2021-11-08"},{"lineNumber":733,"author":{"gitId":"Ongzl"},"content":"  with other classes already in TimesTable.","lastModifiedDate":"2021-11-04"},{"lineNumber":734,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":735,"author":{"gitId":"yourally2"},"content":"  - 1c1. TimesTable shows an error message saying that this operation would cause a clash in class timing.","lastModifiedDate":"2021-11-08"},{"lineNumber":736,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":737,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":738,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":739,"author":{"gitId":"Ongzl"},"content":"**Use case: Delete a tuition class**","lastModifiedDate":"2021-11-04"},{"lineNumber":740,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":741,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":742,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":743,"author":{"gitId":"Ongzl"},"content":"1.  User requests to list classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":744,"author":{"gitId":"Ongzl"},"content":"2.  TimesTable shows a list of classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":745,"author":{"gitId":"Ongzl"},"content":"3.  User requests to delete a specific class in the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":746,"author":{"gitId":"Ongzl"},"content":"4.  TimesTable deletes the class.","lastModifiedDate":"2021-11-04"},{"lineNumber":747,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":748,"author":{"gitId":"Ongzl"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":749,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":750,"author":{"gitId":"Ongzl"},"content":"**Extensions**","lastModifiedDate":"2021-11-04"},{"lineNumber":751,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":752,"author":{"gitId":"yourally2"},"content":"- 1a. The list is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":753,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":754,"author":{"gitId":"Ongzl"},"content":"  Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":755,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":756,"author":{"gitId":"yourally2"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":757,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":758,"author":{"gitId":"yourally2"},"content":"  - 3a1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":759,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":760,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2021-11-04"},{"lineNumber":761,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":762,"author":{"gitId":"yourally2"},"content":"- 3b. The given deleteclass command has a typo.","lastModifiedDate":"2021-11-08"},{"lineNumber":763,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":764,"author":{"gitId":"yourally2"},"content":"  - 3b1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":765,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":766,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2021-11-04"},{"lineNumber":767,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":768,"author":{"gitId":"Ongzl"},"content":"**Use case: Add students to a tuition class**","lastModifiedDate":"2021-11-04"},{"lineNumber":769,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":770,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":771,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":772,"author":{"gitId":"Ongzl"},"content":"1. User input index of class(in `classes` tab) to be added to and index of students(in `students` tab) to be added.","lastModifiedDate":"2021-11-04"},{"lineNumber":773,"author":{"gitId":"Ongzl"},"content":"2. TimesTable adds students selected into class selected.","lastModifiedDate":"2021-11-04"},{"lineNumber":774,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":775,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":776,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":777,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":778,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":779,"author":{"gitId":"yourally2"},"content":"- 1a. User keys in addtoclass command with invalid index(student or class or both).","lastModifiedDate":"2021-11-08"},{"lineNumber":780,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":781,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows an error message citing which index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":782,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":783,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":784,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":785,"author":{"gitId":"yourally2"},"content":"- 1b. User attempts to add student to a class where the student is already in.","lastModifiedDate":"2021-11-08"},{"lineNumber":786,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":787,"author":{"gitId":"yourally2"},"content":"  - 1b1. TimesTable shows an error message saying that student is already in the class.","lastModifiedDate":"2021-11-08"},{"lineNumber":788,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":789,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":790,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":791,"author":{"gitId":"Ongzl"},"content":"**Use case: Remove students from a tuition class**","lastModifiedDate":"2021-11-04"},{"lineNumber":792,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":793,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":794,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"Ongzl"},"content":"1. User input index of class(in `classes` tab) to be added to and index of students(in `classes` tab) to be removed.","lastModifiedDate":"2021-11-04"},{"lineNumber":796,"author":{"gitId":"Ongzl"},"content":"2. TimesTable removes students from the class selected.","lastModifiedDate":"2021-11-04"},{"lineNumber":797,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":798,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":799,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":800,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":801,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":802,"author":{"gitId":"yourally2"},"content":"- 1a. User keys in removefromclass command with invalid index(student or class or both).","lastModifiedDate":"2021-11-08"},{"lineNumber":803,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":804,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows an error message citing which index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":805,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":806,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":807,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":808,"author":{"gitId":"Ongzl"},"content":"**Use case: Edit tuition class details**","lastModifiedDate":"2021-11-04"},{"lineNumber":809,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":810,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":811,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":812,"author":{"gitId":"Ongzl"},"content":"1. User edits details of existing tuition class.","lastModifiedDate":"2021-11-04"},{"lineNumber":813,"author":{"gitId":"Ongzl"},"content":"2. TimesTable updates the tuition class with the added details.","lastModifiedDate":"2021-11-04"},{"lineNumber":814,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":815,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":816,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":817,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":818,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":819,"author":{"gitId":"yourally2"},"content":"- 1a. User keys in field with invalid format(wrong field name).","lastModifiedDate":"2021-11-08"},{"lineNumber":820,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":821,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":822,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":823,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":824,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":825,"author":{"gitId":"yourally2"},"content":"- 1b. User keys in invalid index.","lastModifiedDate":"2021-11-08"},{"lineNumber":826,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":827,"author":{"gitId":"yourally2"},"content":"  - 1b1. TimesTable shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":828,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":829,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":830,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":831,"author":{"gitId":"yourally2"},"content":"- 1c. User keys in class timing that overlaps with other class\u0027s class timing.","lastModifiedDate":"2021-11-08"},{"lineNumber":832,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":833,"author":{"gitId":"yourally2"},"content":"  - 1c1. TimesTable shows an error message saying that this operation would cause a clash in class timing.","lastModifiedDate":"2021-11-08"},{"lineNumber":834,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":835,"author":{"gitId":"Ongzl"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":836,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":837,"author":{"gitId":"Ongzl"},"content":"**Use case: Find tuition class by class timing**","lastModifiedDate":"2021-11-04"},{"lineNumber":838,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":839,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":840,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":841,"author":{"gitId":"Ongzl"},"content":"1. User input class timing of tuition class that user wants to find.","lastModifiedDate":"2021-11-04"},{"lineNumber":842,"author":{"gitId":"Ongzl"},"content":"2. TimesTable shows the tuition classes that has similar class timing.","lastModifiedDate":"2021-11-04"},{"lineNumber":843,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":844,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":845,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":846,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":847,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":848,"author":{"gitId":"yourally2"},"content":"- 1a. No tuition class timing matches the class timing keyword inputted.","lastModifiedDate":"2021-11-08"},{"lineNumber":849,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":850,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows no tuition classes listed.","lastModifiedDate":"2021-11-08"},{"lineNumber":851,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":852,"author":{"gitId":"Ongzl"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":853,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":854,"author":{"gitId":"Ongzl"},"content":"**Use case: Find tuition class by name**","lastModifiedDate":"2021-11-04"},{"lineNumber":855,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":856,"author":{"gitId":"Ongzl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":857,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":858,"author":{"gitId":"Ongzl"},"content":"1. User input name of tuition class that user wants to find.","lastModifiedDate":"2021-11-04"},{"lineNumber":859,"author":{"gitId":"Ongzl"},"content":"2. TimesTable shows the tuition class that has similar name.","lastModifiedDate":"2021-11-04"},{"lineNumber":860,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":861,"author":{"gitId":"Ongzl"},"content":"   Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":862,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":863,"author":{"gitId":"Ongzl"},"content":"**Extension**","lastModifiedDate":"2021-11-04"},{"lineNumber":864,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":865,"author":{"gitId":"yourally2"},"content":"- 1a. No tuition class name matches the name keyword inputted.","lastModifiedDate":"2021-11-08"},{"lineNumber":866,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":867,"author":{"gitId":"yourally2"},"content":"  - 1a1. TimesTable shows no tuition class listed.","lastModifiedDate":"2021-11-08"},{"lineNumber":868,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":869,"author":{"gitId":"Ongzl"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":871,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"bernardwan"},"content":"4.  The data should be stored locally in a human editable text file","lastModifiedDate":"2021-09-27"},{"lineNumber":877,"author":{"gitId":"bernardwan"},"content":"5.  Should not use a database management system to store data","lastModifiedDate":"2021-09-27"},{"lineNumber":878,"author":{"gitId":"bernardwan"},"content":"6.  Should follow OOP paradigm primarily","lastModifiedDate":"2021-09-27"},{"lineNumber":879,"author":{"gitId":"bernardwan"},"content":"7.  Should work without requiring an installer","lastModifiedDate":"2021-09-27"},{"lineNumber":880,"author":{"gitId":"bernardwan"},"content":"8.  Should not depend on a remote server","lastModifiedDate":"2021-09-27"},{"lineNumber":881,"author":{"gitId":"bernardwan"},"content":"9.  Project should simulate a brownfield project by evolving the code base with each iteration incrementally (breadth-first)","lastModifiedDate":"2021-09-27"},{"lineNumber":882,"author":{"gitId":"bernardwan"},"content":"10. Should be for a single user","lastModifiedDate":"2021-09-27"},{"lineNumber":883,"author":{"gitId":"bernardwan"},"content":"11. Third-party frameworks, libraries and services should be free, open-source, do not require any installation by the user, and do not violate other requirements.","lastModifiedDate":"2021-09-27"},{"lineNumber":884,"author":{"gitId":"bernardwan"},"content":"12. GUI should work well for","lastModifiedDate":"2021-09-27"},{"lineNumber":885,"author":{"gitId":"yourally2"},"content":"    - Standard screen resolutions of 1920x1080 and higher","lastModifiedDate":"2021-11-08"},{"lineNumber":886,"author":{"gitId":"yourally2"},"content":"    - Screen scales 100% and 125%","lastModifiedDate":"2021-11-08"},{"lineNumber":887,"author":{"gitId":"bernardwan"},"content":"13. GUI should be usable for","lastModifiedDate":"2021-09-27"},{"lineNumber":888,"author":{"gitId":"yourally2"},"content":"    - Resolutions 1280x720 and higher","lastModifiedDate":"2021-11-08"},{"lineNumber":889,"author":{"gitId":"yourally2"},"content":"    - Screen scales 150%","lastModifiedDate":"2021-11-08"},{"lineNumber":890,"author":{"gitId":"bernardwan"},"content":"14. Should package everything into a single JAR file","lastModifiedDate":"2021-09-27"},{"lineNumber":891,"author":{"gitId":"bernardwan"},"content":"15. Product should not exceed 100 MB and documents should not exceed 15 MB/file","lastModifiedDate":"2021-09-27"},{"lineNumber":892,"author":{"gitId":"bernardwan"},"content":"16. Developer Guide and User Guide should be PDF-friendly","lastModifiedDate":"2021-09-27"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"yourally2"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-11-08"},{"lineNumber":897,"author":{"gitId":"yourally2"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2021-11-08"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"bernardwan"},"content":"### Adding a Student: `add`","lastModifiedDate":"2021-11-08"},{"lineNumber":928,"author":{"gitId":"bernardwan"},"content":"1. Test case 1: Add a `Student` successfully","lastModifiedDate":"2021-11-08"},{"lineNumber":929,"author":{"gitId":"bernardwan"},"content":"    1. Add a `Student` to TimesTable: `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3","lastModifiedDate":"2021-11-08"},{"lineNumber":930,"author":{"gitId":"bernardwan"},"content":"       nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":931,"author":{"gitId":"bernardwan"},"content":"     2. Expected message: `New Student added: John Doe; Phone: 98765432; Email: johnd@example.com; Address: 311, Clementi Ave 2, #02-25; Tags: [Chemistry][Sec 3]","lastModifiedDate":"2021-11-08"},{"lineNumber":932,"author":{"gitId":"bernardwan"},"content":"       Next-of-Kin: Jack Doe; Phone: 10987654; Email: jackd@example.com; Address: 311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":933,"author":{"gitId":"bernardwan"},"content":"2. Test case 2: Cannot add duplicate `Student`","lastModifiedDate":"2021-11-08"},{"lineNumber":934,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisite: TimesTable contains the sample `Student`s. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":935,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":936,"author":{"gitId":"bernardwan"},"content":"    2. Add a `Student` with a clash in `NAME` with an existing `Student`: `add n/Alex Yeoh p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3","lastModifiedDate":"2021-11-08"},{"lineNumber":937,"author":{"gitId":"bernardwan"},"content":"       nok/ n/Elise Yeoh p/10987654 e/eliseyeoh@gmail.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":938,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `This person already exists in the address book` message shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":939,"author":{"gitId":"bernardwan"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":940,"author":{"gitId":"yourally2"},"content":"### Adding a Student to a Class: `addtoclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":941,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":942,"author":{"gitId":"s7u4rt99"},"content":"1. Test case 1: Add a `Student` to a `TuitionClass` successfully","lastModifiedDate":"2021-11-08"},{"lineNumber":943,"author":{"gitId":"s7u4rt99"},"content":"   1. Prerequisites: You don\u0027t have any `Student`s or `TuitionClass`es. If you have at least _one_ `Student` or `TuitionClass`, you can skip adding a `Student` / `TuitionClass` respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":944,"author":{"gitId":"s7u4rt99"},"content":"   2. Add a `Student` to TimesTable: `add n/Student p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":945,"author":{"gitId":"s7u4rt99"},"content":"   3. Add a `TuitionClass` to TimesTable: `addclass cn/Sec 4 A Maths ct/MON 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":946,"author":{"gitId":"s7u4rt99"},"content":"   4. Add the `Student` to the `TuitionClass`: `addtoclass 1 1`  ","lastModifiedDate":"2021-11-08"},{"lineNumber":947,"author":{"gitId":"yourally2"},"content":"      Expected: `Successfully added students to class` message shown","lastModifiedDate":"2021-11-08"},{"lineNumber":948,"author":{"gitId":"yourally2"},"content":"2. Test case 2: Cannot add to a class that does not exist","lastModifiedDate":"2021-11-08"},{"lineNumber":949,"author":{"gitId":"s7u4rt99"},"content":"   1. Prerequisites: You don\u0027t have any classes. If you have any, you can remove them using the `deleteclass INDEX` command or run `clear`.","lastModifiedDate":"2021-11-08"},{"lineNumber":950,"author":{"gitId":"yourally2"},"content":"   2. If you already have a student, you can skip this step.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":951,"author":{"gitId":"yourally2"},"content":"      Add a student to TimesTable: `add n/Student p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":952,"author":{"gitId":"yourally2"},"content":"   3. Add the student to non-existing class: `addtoclass 1 1`  ","lastModifiedDate":"2021-11-08"},{"lineNumber":953,"author":{"gitId":"yourally2"},"content":"      Expected: `The class index provided is invalid` message shown","lastModifiedDate":"2021-11-08"},{"lineNumber":954,"author":{"gitId":"yourally2"},"content":"3. Test case 2: Cannot add to a student that does not exist to a class","lastModifiedDate":"2021-11-08"},{"lineNumber":955,"author":{"gitId":"s7u4rt99"},"content":"   1. Prerequisites: You don\u0027t have any students. If you have any, you can remove them using the `delete INDEX` command or run `clear`.","lastModifiedDate":"2021-11-08"},{"lineNumber":956,"author":{"gitId":"yourally2"},"content":"   2. If you already have a class, you can skip this step.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":957,"author":{"gitId":"yourally2"},"content":"      Add a class to TimesTable: `addclass cn/Sec 4 A Maths ct/MON 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":958,"author":{"gitId":"yourally2"},"content":"   3. Add non-existing student to the class: `addtoclass 1 1`  ","lastModifiedDate":"2021-11-08"},{"lineNumber":959,"author":{"gitId":"yourally2"},"content":"      Expected: `The student index provided is invalid` message shown","lastModifiedDate":"2021-11-08"},{"lineNumber":960,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":961,"author":{"gitId":"yourally2"},"content":"### Listing all classes: `listclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":962,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":963,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: All `TuitionClass`es are listed and focus is moved to `Classes` tab. All previous filtering is reset.","lastModifiedDate":"2021-11-08"},{"lineNumber":964,"author":{"gitId":"s7u4rt99"},"content":"   1. Prerequisites: `TuitionClass` to filter must be present. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":965,"author":{"gitId":"s7u4rt99"},"content":"      1. Add `TuitionClass`: `addclass cn/Sec 4 A Maths ct/FRI 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":966,"author":{"gitId":"s7u4rt99"},"content":"      2. Note the `TuitionClass`es in the class list.","lastModifiedDate":"2021-11-08"},{"lineNumber":967,"author":{"gitId":"s7u4rt99"},"content":"   2. Filter classes: `findclassname hello`. No `TuitionClass`es should be listed.","lastModifiedDate":"2021-11-08"},{"lineNumber":968,"author":{"gitId":"s7u4rt99"},"content":"   3. Go to `Students` tab: `view students`","lastModifiedDate":"2021-11-08"},{"lineNumber":969,"author":{"gitId":"s7u4rt99"},"content":"   4. List `TuitionClass`es: `listclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":970,"author":{"gitId":"s7u4rt99"},"content":"   5. Expected: `Listed all classes` message shown and tab is moved to `Classes` tab. Class list noted in (ib) is shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":971,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":972,"author":{"gitId":"yourally2"},"content":"### Deleting a student: `delete`","lastModifiedDate":"2021-11-08"},{"lineNumber":973,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":974,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":975,"author":{"gitId":"Ongzl"},"content":"1. Test case: Delete a student successfully","lastModifiedDate":"2021-11-08"},{"lineNumber":976,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: Student to delete must be present. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":977,"author":{"gitId":"Ongzl"},"content":"        1. Add student: `add n/Student p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":978,"author":{"gitId":"Ongzl"},"content":"        2. Note the students in the student list.","lastModifiedDate":"2021-11-08"},{"lineNumber":979,"author":{"gitId":"Ongzl"},"content":"    2. Delete the student: `delete INDEX`. `INDEX` is the index of the student shown in the student list. If there were no other student present before, this would be 1. Otherwise, it would be the number shown at the top left corner of the student card.","lastModifiedDate":"2021-11-08"},{"lineNumber":980,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `Deleted Person: Student; Phone: 98765432; Email: johnd@example.com; Address: 311, Clementi Ave 2, #02-25; Tags: [Chemistry][Sec 3] Next-of-Kin: Jack Doe; Phone: 10987654; Email: jackd@example.com; Address: 311, Clementi Ave 2, #02-25` message shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":981,"author":{"gitId":"Ongzl"},"content":"       Class no longer belongs in the class list noted in (ia).","lastModifiedDate":"2021-11-08"},{"lineNumber":982,"author":{"gitId":"Ongzl"},"content":"1. Test case: Cannot delete a student that doesn\u0027t exist","lastModifiedDate":"2021-11-08"},{"lineNumber":983,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: Student at the student index to be deleted must not exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":984,"author":{"gitId":"Ongzl"},"content":"        1. Easiest way to ensure that this happens: run `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":985,"author":{"gitId":"Ongzl"},"content":"        2. Note that the student list is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":986,"author":{"gitId":"Ongzl"},"content":"    2. Delete the student at index 1: `deleteclass 1`.","lastModifiedDate":"2021-11-08"},{"lineNumber":987,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `The student index provided is invalid` message shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"Ongzl"},"content":"### Deleting a tuition class: `deleteclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":990,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":991,"author":{"gitId":"Ongzl"},"content":"1. Test case: Deleting a class successfully","lastModifiedDate":"2021-11-08"},{"lineNumber":992,"author":{"gitId":"Ongzl"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":993,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: Class to delete must be present. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":994,"author":{"gitId":"Ongzl"},"content":"       1. Add class: addclass cn/Sec 4 A Maths ct/FRI 11:30-13:30 r/70 l/Nex Tuition Center","lastModifiedDate":"2021-11-08"},{"lineNumber":995,"author":{"gitId":"Ongzl"},"content":"       2. Note the classes in the class list.","lastModifiedDate":"2021-11-08"},{"lineNumber":996,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":997,"author":{"gitId":"Ongzl"},"content":"    2. Delete the class: `deleteclass INDEX`. `INDEX` is the index of the class shown in the class list. If there ","lastModifiedDate":"2021-11-08"},{"lineNumber":998,"author":{"gitId":"Ongzl"},"content":"       were no other classes present before, this would be 1. Otherwise, it would be the number shown at the top left corner of the class card.","lastModifiedDate":"2021-11-08"},{"lineNumber":999,"author":{"gitId":"Ongzl"},"content":"       (eg. `deleteclass 1`).","lastModifiedDate":"2021-11-08"},{"lineNumber":1000,"author":{"gitId":"Ongzl"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1001,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `Class deleted: Class Timing: FRI 11:30-13:30 Class Name: Sec 4 A Maths Location: Nex Tuition ","lastModifiedDate":"2021-11-08"},{"lineNumber":1002,"author":{"gitId":"Ongzl"},"content":"       Center Rate: 70`  message shown. Class no longer belongs in the class list noted in (ib).","lastModifiedDate":"2021-11-08"},{"lineNumber":1003,"author":{"gitId":"Ongzl"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1004,"author":{"gitId":"Ongzl"},"content":"2. Test case: Cannot delete a class that does not exist","lastModifiedDate":"2021-11-08"},{"lineNumber":1005,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1006,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: Class at the class index to be deleted must not exist. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1007,"author":{"gitId":"Ongzl"},"content":"        1. Easiest way to ensure that this happens: run clear","lastModifiedDate":"2021-11-08"},{"lineNumber":1008,"author":{"gitId":"Ongzl"},"content":"        2. Note that the class list is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":1009,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1010,"author":{"gitId":"Ongzl"},"content":"    2. Delete the class at index 1: `deleteclass 1`. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1011,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `The class index provided is invalid` message shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":1012,"author":{"gitId":"Ongzl"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1013,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1014,"author":{"gitId":"yourally2"},"content":"### Sorting classes and students: `sort`","lastModifiedDate":"2021-11-08"},{"lineNumber":1015,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1016,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: Sort classes in ascending order.","lastModifiedDate":"2021-11-08"},{"lineNumber":1017,"author":{"gitId":"yourally2"},"content":"   1. Prerequisites: Add more than 1 class in non-sorted order by timing. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1018,"author":{"gitId":"yourally2"},"content":"      1. Add later class first: `addclass cn/Sec 4 A Maths ct/FRI 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1019,"author":{"gitId":"yourally2"},"content":"      2. Add earlier class second: `addclass cn/Sec 5 A Maths ct/FRI 10:30-11:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1020,"author":{"gitId":"yourally2"},"content":"      3. Note that \u0027Sec 4 A Maths\u0027 comes _before_ \u0027Sec 5 A Maths\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":1021,"author":{"gitId":"yourally2"},"content":"   2. Sort classes: `sort timing asc`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1022,"author":{"gitId":"yourally2"},"content":"   3. Expected: `Sorted classes based on timing in asc direction` message shown, \u0027Sec 5 A Maths\u0027 now comes _before_ \u0027Sec 4 A Maths\u0027 in the class list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1023,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: Sort students in descending order.","lastModifiedDate":"2021-11-08"},{"lineNumber":1024,"author":{"gitId":"yourally2"},"content":"   1. Prerequisites: Add more than 1 student in non-sorted order by name. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1025,"author":{"gitId":"yourally2"},"content":"      1. Add earlier student first: `add n/Amber p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25 `","lastModifiedDate":"2021-11-08"},{"lineNumber":1026,"author":{"gitId":"yourally2"},"content":"      2. Add later student second: `add n/Zebra p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25 `","lastModifiedDate":"2021-11-08"},{"lineNumber":1027,"author":{"gitId":"yourally2"},"content":"      3. Note that \u0027Amber\u0027 comes _before_ \u0027Zebra\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":1028,"author":{"gitId":"yourally2"},"content":"   2. Sort students: `sort name desc`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1029,"author":{"gitId":"yourally2"},"content":"   3. Expected: `Sorted students based on name in desc direction` message shown, \u0027Zebra\u0027 now comes _before_ \u0027Amber\u0027 in the Student list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1030,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1031,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1032,"author":{"gitId":"Ongzl"},"content":"### Removing Student(s) from a class : `removefromclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":1033,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1034,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: Removing a student from a class that doesn\u0027t currently exist","lastModifiedDate":"2021-11-08"},{"lineNumber":1035,"author":{"gitId":"Ongzl"},"content":"   1. Prerequisites: Class at the class index must not exist. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1036,"author":{"gitId":"Ongzl"},"content":"       1. Run command `listclass` and note the index of the last class.","lastModifiedDate":"2021-11-08"},{"lineNumber":1037,"author":{"gitId":"Ongzl"},"content":"   2. Remove students from non-existing class at index (max index + 1): `removefromclass 5 1 2 3 `. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1038,"author":{"gitId":"Ongzl"},"content":"      Where last class is at index 4  from (ib).","lastModifiedDate":"2021-11-08"},{"lineNumber":1039,"author":{"gitId":"Ongzl"},"content":"   3. Expected: `The class index provided is invalid` message shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":1040,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1041,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: Removing a student from a class that has no student","lastModifiedDate":"2021-11-08"},{"lineNumber":1042,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: There must be a class with 0 students in it. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1043,"author":{"gitId":"Ongzl"},"content":"        1. Clear TimesTable usiing: `clear`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1044,"author":{"gitId":"Ongzl"},"content":"        2. Add a new class: `addclass cn/Sec 4 A Maths ct/FRI 11:30-13:30 r/70 l/Nex Tuition Center`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1045,"author":{"gitId":"Ongzl"},"content":"    2. Remove student(s) from empty class: `removefromclass 1 1 2 3`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1046,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `The student index provided is invalid` message shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":1047,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1048,"author":{"gitId":"Ongzl"},"content":"### Finding Student(s) by tag : `findtag`","lastModifiedDate":"2021-11-08"},{"lineNumber":1049,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1050,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: No students have tags that matches the search term used","lastModifiedDate":"2021-11-08"},{"lineNumber":1051,"author":{"gitId":"Ongzl"},"content":"   1. Prerequisites: TimesTable contain multiple students with differing tags. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1052,"author":{"gitId":"Ongzl"},"content":"       1. Delete `timestable.json` in the data file to start off with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1053,"author":{"gitId":"Ongzl"},"content":"   2. Find students using tag that currently do not exist: `findtag social studies`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1054,"author":{"gitId":"Ongzl"},"content":"   3. Expected: `0 persons listed!` message shown and no students shown in `Students` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1055,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1056,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: Students have tags that matches search term(single)","lastModifiedDate":"2021-11-08"},{"lineNumber":1057,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: TimesTable contain multiple students with differing tags. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1058,"author":{"gitId":"Ongzl"},"content":"        1. Delete `timestable.json` in the data file to start off with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1059,"author":{"gitId":"Ongzl"},"content":"    2. Find students using a single tag that currently exists: `findtag a math`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1060,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `2 persons listed!` message shown and 2 students shown in `Students` tab, namely `Alex Yeoh` and ","lastModifiedDate":"2021-11-08"},{"lineNumber":1061,"author":{"gitId":"Ongzl"},"content":"       `David Li`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1062,"author":{"gitId":"s7u4rt99"},"content":"3. Test case: Students have tags that matches search terms(multiple)","lastModifiedDate":"2021-11-08"},{"lineNumber":1063,"author":{"gitId":"Ongzl"},"content":"    1. Prerequisites: TimesTable contain multiple students with differing tags. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1064,"author":{"gitId":"Ongzl"},"content":"        1. Delete `timestable.json` in the data file to start off with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1065,"author":{"gitId":"Ongzl"},"content":"    2. Find students using multiple tag that currently exists: `findtag a math, physic, sec 4`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1066,"author":{"gitId":"Ongzl"},"content":"    3. Expected: `4 persons listed!` message shown and 2 students shown in `Students` tab, namely `Alex Yeoh`, ","lastModifiedDate":"2021-11-08"},{"lineNumber":1067,"author":{"gitId":"Ongzl"},"content":"       `Charlotte Oliveiro`, `David Li` and `Illana Page`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1068,"author":{"gitId":"Ongzl"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1069,"author":{"gitId":"Ongzl"},"content":"### Changing tabs: `view`","lastModifiedDate":"2021-11-08"},{"lineNumber":1070,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1071,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: View `Classes` tab, but command has a typo error","lastModifiedDate":"2021-11-08"},{"lineNumber":1072,"author":{"gitId":"Ongzl"},"content":"    1. View `Classes` tab with typo: `view clases`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1073,"author":{"gitId":"Ongzl"},"content":"    2. Expected: `Invalid command format!This tab doesn\u0027t exists. You can only switch to students, timetable or ","lastModifiedDate":"2021-11-08"},{"lineNumber":1074,"author":{"gitId":"Ongzl"},"content":"       classes.` message show.","lastModifiedDate":"2021-11-08"},{"lineNumber":1075,"author":{"gitId":"Ongzl"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1076,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: View `Classes` tab, but user is already on `Classes` tab","lastModifiedDate":"2021-11-08"},{"lineNumber":1077,"author":{"gitId":"Ongzl"},"content":"    1. View `Classes` tab: `view classes`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1078,"author":{"gitId":"Ongzl"},"content":"    2. Expected: `Successfully switched to CLASSES tab` and remains on `Classes` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1079,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1080,"author":{"gitId":"s7u4rt99"},"content":"3. Test case: View `Timetable` tab, user is on `Classes` tab","lastModifiedDate":"2021-11-08"},{"lineNumber":1081,"author":{"gitId":"Ongzl"},"content":"    1. View `Timetable` tab: `view timetable`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1082,"author":{"gitId":"Ongzl"},"content":"    2. Expected: `Successfully switched to TIMETABLE tab` and switched to `TimeTable` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1083,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1084,"author":{"gitId":"softmagnet"},"content":"### Editing a person","lastModifiedDate":"2021-11-08"},{"lineNumber":1085,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1086,"author":{"gitId":"softmagnet"},"content":"1. Test case 1: Editing an existing student\u0027s own detail ","lastModifiedDate":"2021-11-08"},{"lineNumber":1087,"author":{"gitId":"softmagnet"},"content":"   1. Prerequisites","lastModifiedDate":"2021-11-08"},{"lineNumber":1088,"author":{"gitId":"softmagnet"},"content":"      1. Add student: `add n/John p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":1089,"author":{"gitId":"softmagnet"},"content":"      2. Note the student and his or her index in the displayed list in the `Student` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1090,"author":{"gitId":"softmagnet"},"content":"   2. Edit the student (assuming the student\u0027s index is 1): `edit 1 n/updated student p/99993293 e/edited@gmail.com a/edited address t/`","lastModifiedDate":"2021-11-08"},{"lineNumber":1091,"author":{"gitId":"softmagnet"},"content":"   3. Expected: All fields are changed according to `edit` command inputs and all tags are removed.","lastModifiedDate":"2021-11-08"},{"lineNumber":1092,"author":{"gitId":"softmagnet"},"content":"2. Test case 2: Edit an existing student\u0027s NOK detail","lastModifiedDate":"2021-11-08"},{"lineNumber":1093,"author":{"gitId":"softmagnet"},"content":"   1. Prerequisites: Same as above","lastModifiedDate":"2021-11-08"},{"lineNumber":1094,"author":{"gitId":"softmagnet"},"content":"   2. Edit the student\u0027s NOK (assuming the student\u0027s index is 1): `edit 1 nok/ n/edited NOK name e/editedNOK@gmail.com a/edited address p/92393932`","lastModifiedDate":"2021-11-08"},{"lineNumber":1095,"author":{"gitId":"softmagnet"},"content":"   3. Expected: All NOK fields are changed according to `edit` command inputs","lastModifiedDate":"2021-11-08"},{"lineNumber":1096,"author":{"gitId":"softmagnet"},"content":"3. Negative test cases","lastModifiedDate":"2021-11-08"},{"lineNumber":1097,"author":{"gitId":"softmagnet"},"content":"    1. Out of range","lastModifiedDate":"2021-11-08"},{"lineNumber":1098,"author":{"gitId":"softmagnet"},"content":"        1. (assuming the student list does not have 100 students) enter `edit 100 n/edited name`","lastModifiedDate":"2021-11-08"},{"lineNumber":1099,"author":{"gitId":"softmagnet"},"content":"        2. Expected: \"The student index provided is invalid\" is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1100,"author":{"gitId":"softmagnet"},"content":"    2. No fields provided","lastModifiedDate":"2021-11-08"},{"lineNumber":1101,"author":{"gitId":"softmagnet"},"content":"        1. enter `edit 1`","lastModifiedDate":"2021-11-08"},{"lineNumber":1102,"author":{"gitId":"softmagnet"},"content":"        2. Expected: \"At least one field to edit must be provided.\" is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1103,"author":{"gitId":"softmagnet"},"content":"    3. invalid prefix provided","lastModifiedDate":"2021-11-08"},{"lineNumber":1104,"author":{"gitId":"softmagnet"},"content":"        1. enter `edit 1 prefix/`","lastModifiedDate":"2021-11-08"},{"lineNumber":1105,"author":{"gitId":"softmagnet"},"content":"        2. Expected: Invalid command format message is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1106,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1107,"author":{"gitId":"softmagnet"},"content":"### Editing a class","lastModifiedDate":"2021-11-08"},{"lineNumber":1108,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1109,"author":{"gitId":"softmagnet"},"content":"1. Test case 1: Editing an existing class","lastModifiedDate":"2021-11-08"},{"lineNumber":1110,"author":{"gitId":"softmagnet"},"content":"    1. Prerequisites","lastModifiedDate":"2021-11-08"},{"lineNumber":1111,"author":{"gitId":"softmagnet"},"content":"       1. Add a class: `addclass cn/Sec 4 A Maths ct/MON 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1112,"author":{"gitId":"softmagnet"},"content":"       2. Note the class and its index in the displayed list in the `Class` tab","lastModifiedDate":"2021-11-08"},{"lineNumber":1113,"author":{"gitId":"softmagnet"},"content":"    2. Edit the class (assuming the class\u0027s index is 1): `editclass 1 cn/edited classname ct/MON 09:00-11:00 r/90 l/edited location`","lastModifiedDate":"2021-11-08"},{"lineNumber":1114,"author":{"gitId":"softmagnet"},"content":"    3. Expected: All fields are changed according to `editclass` command\u0027s inputs","lastModifiedDate":"2021-11-08"},{"lineNumber":1115,"author":{"gitId":"softmagnet"},"content":"2. Negative test cases: ","lastModifiedDate":"2021-11-08"},{"lineNumber":1116,"author":{"gitId":"softmagnet"},"content":"   1. Out of range","lastModifiedDate":"2021-11-08"},{"lineNumber":1117,"author":{"gitId":"softmagnet"},"content":"      1. (assuming the class list does not have 100 classes) enter `editclass 100 cn/edited class name`","lastModifiedDate":"2021-11-08"},{"lineNumber":1118,"author":{"gitId":"softmagnet"},"content":"      2. Expected: \"The class index provided is invalid\" is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1119,"author":{"gitId":"softmagnet"},"content":"   2. No fields provided","lastModifiedDate":"2021-11-08"},{"lineNumber":1120,"author":{"gitId":"softmagnet"},"content":"      1. enter `editclass 1`","lastModifiedDate":"2021-11-08"},{"lineNumber":1121,"author":{"gitId":"softmagnet"},"content":"      2. Expected: \"At least one field to editclass must be provided.\" is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1122,"author":{"gitId":"softmagnet"},"content":"   3. invalid prefix provided","lastModifiedDate":"2021-11-08"},{"lineNumber":1123,"author":{"gitId":"softmagnet"},"content":"      1. enter `editclass 1 prefix/`","lastModifiedDate":"2021-11-08"},{"lineNumber":1124,"author":{"gitId":"softmagnet"},"content":"      2. Expected: Invalid command format message is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1125,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1126,"author":{"gitId":"softmagnet"},"content":"### Selecting a class","lastModifiedDate":"2021-11-08"},{"lineNumber":1127,"author":{"gitId":"softmagnet"},"content":"1. Test case 1: viewing an existing class","lastModifiedDate":"2021-11-08"},{"lineNumber":1128,"author":{"gitId":"softmagnet"},"content":"   1. Prerequisites","lastModifiedDate":"2021-11-08"},{"lineNumber":1129,"author":{"gitId":"softmagnet"},"content":"      1. Add a class: `addclass cn/Sec 4 A Maths ct/MON 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1130,"author":{"gitId":"softmagnet"},"content":"      2. Note the class and its index in the displayed list in the `Class` tab","lastModifiedDate":"2021-11-08"},{"lineNumber":1131,"author":{"gitId":"softmagnet"},"content":"      3. Adding students to the class (assuming the class\u0027s index is 1 and there are at least 2 students in Timestable): `addtoclass 1 1 2 `","lastModifiedDate":"2021-11-08"},{"lineNumber":1132,"author":{"gitId":"softmagnet"},"content":"   2. view the class (assuming the class\u0027s index is 1): `class 1`","lastModifiedDate":"2021-11-08"},{"lineNumber":1133,"author":{"gitId":"softmagnet"},"content":"   3. Expected: the students list in `Classes` tab is showing students belonging to that class","lastModifiedDate":"2021-11-08"},{"lineNumber":1134,"author":{"gitId":"softmagnet"},"content":"2. Negative test cases:","lastModifiedDate":"2021-11-08"},{"lineNumber":1135,"author":{"gitId":"softmagnet"},"content":"   1. Out of range","lastModifiedDate":"2021-11-08"},{"lineNumber":1136,"author":{"gitId":"softmagnet"},"content":"      1. (assuming the class list does not have 100 classes) enter `class 100`","lastModifiedDate":"2021-11-08"},{"lineNumber":1137,"author":{"gitId":"softmagnet"},"content":"      2. Expected: \"The class index provided is invalid\" is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1138,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1139,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1140,"author":{"gitId":"s7u4rt99"},"content":"### Clearing data: `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":1141,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1142,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: Clear all `Student`s and `TuitionClass`es in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1143,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable contains `Student`s and `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1144,"author":{"gitId":"s7u4rt99"},"content":"        1. (You may skip this if you already have `Student`s) Add a student: `add n/Amber p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/Chemistry t/Sec 3 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25`","lastModifiedDate":"2021-11-08"},{"lineNumber":1145,"author":{"gitId":"s7u4rt99"},"content":"        2. (You may skip this if you already have `TuitionClass`es) Add a class: `addclass cn/Sec 4 A Maths ct/MON 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1146,"author":{"gitId":"s7u4rt99"},"content":"    2. Clear all data: `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":1147,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `TimesTable has been cleared!` and all `Student`s and `TuitionClass`es are removed from TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1148,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1149,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: Clear empty TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1150,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable does not contain `Student`s and `TuitionClass`es. Steps to do remove them are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1151,"author":{"gitId":"s7u4rt99"},"content":"        1. (You may skip this if you do not have `Student`s) Delete a student: `delete INDEX` for all `Student`s in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1152,"author":{"gitId":"s7u4rt99"},"content":"        2. (You may skip this if you do not have `TuitionClass`es) Delete a class: `deleteclass INDEX` for all `TuitionClass`es in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1153,"author":{"gitId":"s7u4rt99"},"content":"    2. Clear all data: `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":1154,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `TimesTable has been cleared!` and all `Student`s and `TuitionClass`es are removed from TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1155,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1156,"author":{"gitId":"s7u4rt99"},"content":"### Adding a class: `addclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":1157,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1158,"author":{"gitId":"bernardwan"},"content":"1. Test case: Adding a `TuitionClass` successfully - no clash in `CLASS_TIMING` with existing `TuitionClass`es.","lastModifiedDate":"2021-11-08"},{"lineNumber":1159,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable does not have any `TuitionClass`es. If you have any `TuitionClass`, steps to remove them are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1160,"author":{"gitId":"s7u4rt99"},"content":"        1. (You may skip this if you do not have `TuitionClass`es) Delete a class: `deleteclass INDEX` for all `TuitionClass`es in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1161,"author":{"gitId":"s7u4rt99"},"content":"    2. Add a `TuitionClass`: `addclass cn/Sec 4 A Maths ct/MON 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1162,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `New class added: Class Timing: MON 11:30-13:30  Class Name: Sec 4 A Maths Location: Nex Tuition Center Rate: 70` and switched to `Classes` Tab. The `Classes` Tab now shows the `TuitionClass` you added. The `Timetable` Tab also shows your `TuitionClass` on `MON 11:30-13:30`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1163,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1164,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: Adding a `TuitionClass` unsuccessfully - clash in `CLASS_TIMING` with existing `TuitionClass`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1165,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1166,"author":{"gitId":"s7u4rt99"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1167,"author":{"gitId":"s7u4rt99"},"content":"    2. Add a `TuitionClass` with a clash in `CLASS_TIMING` with an existing `TuitionClass`: `addclass cn/CS2103T ct/MON 10:30-12:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-08"},{"lineNumber":1168,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `The operation aborted because it will introduce a clash in class timing.` and the `TuitionClass` does not get added to the `Classes` Tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1169,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1170,"author":{"gitId":"bernardwan"},"content":"### Locating a class by name: `findname`","lastModifiedDate":"2021-11-08"},{"lineNumber":1171,"author":{"gitId":"bernardwan"},"content":"1. Test case: No students has a name that matches the search term used","lastModifiedDate":"2021-11-08"},{"lineNumber":1172,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisites: TimesTable contain multiple students. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1173,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start off with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1174,"author":{"gitId":"bernardwan"},"content":"    2. Find students using a name that currently do not exist: `findname Jennifer`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1175,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `0 persons listed!` message shown and no students shown in `Students` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1176,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1177,"author":{"gitId":"bernardwan"},"content":"2. Test case: A student is found with name that matches search term.","lastModifiedDate":"2021-11-08"},{"lineNumber":1178,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisites: TimesTable contain multiple students. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1179,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start off with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1180,"author":{"gitId":"bernardwan"},"content":"    2. Find students using a single name that currently exists: `findname alex`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1181,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `1 persons listed!` message shown and 2 students shown in `Students` tab, namely `Alex Yeoh` and","lastModifiedDate":"2021-11-08"},{"lineNumber":1182,"author":{"gitId":"bernardwan"},"content":"       `David Li`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1183,"author":{"gitId":"bernardwan"},"content":"3. Test case: Multiple students have names that matches search term.","lastModifiedDate":"2021-11-08"},{"lineNumber":1184,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisites: TimesTable contain multiple students. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1185,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start off with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1186,"author":{"gitId":"bernardwan"},"content":"    2. Find students using part of a name that currently exists: `findname li`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1187,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `3 persons listed!` message shown and 3 students shown in `Students` tab, namely","lastModifiedDate":"2021-11-08"},{"lineNumber":1188,"author":{"gitId":"bernardwan"},"content":"       `Charlotte Oliveiro`, `David Li` and `Angelica Holcomb`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1189,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1190,"author":{"gitId":"bernardwan"},"content":"### Locating a class by name: `findclass`","lastModifiedDate":"2021-11-08"},{"lineNumber":1191,"author":{"gitId":"bernardwan"},"content":"1. Test case: No `TuitionClass` matches the search term used.","lastModifiedDate":"2021-11-08"},{"lineNumber":1192,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1193,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1194,"author":{"gitId":"bernardwan"},"content":"    2. Find `TuitionClass`es with `CLASS_TIMING` of `WED`: `findclass WED`","lastModifiedDate":"2021-11-08"},{"lineNumber":1195,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `0 classes listed!` and tab switched to `Classes` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1196,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1197,"author":{"gitId":"bernardwan"},"content":"2. Test case: `TuitionClass`es match the search term used.","lastModifiedDate":"2021-11-08"},{"lineNumber":1198,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1199,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1200,"author":{"gitId":"bernardwan"},"content":"    2. Find `TuitionClass`es with `CLASS_TIMING` of \u0027MON\u0027: `findclass mon`","lastModifiedDate":"2021-11-08"},{"lineNumber":1201,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `2 classes listed!` and tab switched to `Classes` tab. The `Classes` Tab contains 2 `TuitionClass`es with `CLASS_TIMING` of `MON`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1202,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1203,"author":{"gitId":"bernardwan"},"content":"3. Test case: `TuitionClass`es match the multiple search terms used.","lastModifiedDate":"2021-11-08"},{"lineNumber":1204,"author":{"gitId":"bernardwan"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1205,"author":{"gitId":"bernardwan"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1206,"author":{"gitId":"bernardwan"},"content":"    2. Find `TuitionClass`es with `CLASS_TIMING` of `MON` and `11:30-13:30`: `findclass mon 11:30-13:30`","lastModifiedDate":"2021-11-08"},{"lineNumber":1207,"author":{"gitId":"bernardwan"},"content":"    3. Expected: `1 classes listed!` and tab switched to `Classes` tab. The `Classes` Tab contains 1 `TuitionClass` with `CLASS_TIMING` of `MON` and `11:30-13:30`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1208,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1209,"author":{"gitId":"s7u4rt99"},"content":"### Locating a class by name: `findclassname`","lastModifiedDate":"2021-11-08"},{"lineNumber":1210,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1211,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: No `TuitionClass` matches the search term used.","lastModifiedDate":"2021-11-08"},{"lineNumber":1212,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1213,"author":{"gitId":"s7u4rt99"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1214,"author":{"gitId":"s7u4rt99"},"content":"    2. Find `TuitionClass`es with `CLASS_NAME` of `CS2103T`: `findclassname CS2103T`","lastModifiedDate":"2021-11-08"},{"lineNumber":1215,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `0 classes listed!` and tab switched to `Classes` tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":1216,"author":{"gitId":"s7u4rt99"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1217,"author":{"gitId":"s7u4rt99"},"content":"2. Test case: `TuitionClass`es match the search term used.","lastModifiedDate":"2021-11-08"},{"lineNumber":1218,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1219,"author":{"gitId":"s7u4rt99"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1220,"author":{"gitId":"s7u4rt99"},"content":"    2. Find `TuitionClass`es with `CLASS_NAME` of \u0027math\u0027: `findclassname math`","lastModifiedDate":"2021-11-08"},{"lineNumber":1221,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `7 classes listed!` and tab switched to `Classes` tab. The `TuitionClass`es shown in the `Classes` Tab contains 7 `TuitionClass`es with `CLASS_NAME` of `math` (case insensitive).","lastModifiedDate":"2021-11-08"},{"lineNumber":1222,"author":{"gitId":"s7u4rt99"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1223,"author":{"gitId":"s7u4rt99"},"content":"3. Test case: `TuitionClass`es match the multiple search terms used.","lastModifiedDate":"2021-11-08"},{"lineNumber":1224,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: TimesTable contains the sample `TuitionClass`es. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1225,"author":{"gitId":"s7u4rt99"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1226,"author":{"gitId":"s7u4rt99"},"content":"    2. Find `TuitionClass`es with `CLASS_NAME` of `math` and `jc`: `findclassname math, jc`","lastModifiedDate":"2021-11-08"},{"lineNumber":1227,"author":{"gitId":"s7u4rt99"},"content":"    3. Expected: `8 classes listed!` and tab switched to `Classes` tab. The `TuitionClass`es shown in the `Classes` Tab contains 8 `TuitionClass`es with `CLASS_NAME` of `math` or `jc` or both (case insensitive).","lastModifiedDate":"2021-11-08"},{"lineNumber":1228,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1229,"author":{"gitId":"s7u4rt99"},"content":"### Listing all students: `list`","lastModifiedDate":"2021-11-08"},{"lineNumber":1230,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1231,"author":{"gitId":"s7u4rt99"},"content":"1. Test case: All `Student`s are listed and focus is moved to the `Students` tab. All previous filtering is reset.","lastModifiedDate":"2021-11-08"},{"lineNumber":1232,"author":{"gitId":"s7u4rt99"},"content":"    1. Prerequisite: `Student` filter must be present. Steps to do this are below:","lastModifiedDate":"2021-11-08"},{"lineNumber":1233,"author":{"gitId":"s7u4rt99"},"content":"        1. Delete `timestable.json` in the data file to start of with the sample data in TimesTable.","lastModifiedDate":"2021-11-08"},{"lineNumber":1234,"author":{"gitId":"s7u4rt99"},"content":"    2. Filter `Student`s: `findname alex`. One `Student` with the name `Alex Yeoh` should be listed.","lastModifiedDate":"2021-11-08"},{"lineNumber":1235,"author":{"gitId":"s7u4rt99"},"content":"    3. Go to `Classes` tab: `view classes`","lastModifiedDate":"2021-11-08"},{"lineNumber":1236,"author":{"gitId":"s7u4rt99"},"content":"    4. List all `Student`s: `list`","lastModifiedDate":"2021-11-08"},{"lineNumber":1237,"author":{"gitId":"s7u4rt99"},"content":"    5. Expected: `Listed all students` message shown and tab is changed to the `Students` tab. The list of `Student`s should be the same as before filtering (Step 2).","lastModifiedDate":"2021-11-08"},{"lineNumber":1238,"author":{"gitId":"s7u4rt99"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1239,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1240,"author":{"gitId":"Ongzl"},"content":"## Saving data","lastModifiedDate":"2021-11-04"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1247,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1248,"author":{"gitId":"s7u4rt99"},"content":"clear - stuart","lastModifiedDate":"2021-11-07"},{"lineNumber":1249,"author":{"gitId":"s7u4rt99"},"content":"add -bernard","lastModifiedDate":"2021-11-07"},{"lineNumber":1250,"author":{"gitId":"s7u4rt99"},"content":"addclass - stuart","lastModifiedDate":"2021-11-07"},{"lineNumber":1251,"author":{"gitId":"s7u4rt99"},"content":"delete - kevin","lastModifiedDate":"2021-11-07"},{"lineNumber":1252,"author":{"gitId":"s7u4rt99"},"content":"deleteclass - zhenglin","lastModifiedDate":"2021-11-07"},{"lineNumber":1253,"author":{"gitId":"s7u4rt99"},"content":"addtoclass - kevin","lastModifiedDate":"2021-11-07"},{"lineNumber":1254,"author":{"gitId":"s7u4rt99"},"content":"removefromclass - zhenglin","lastModifiedDate":"2021-11-07"},{"lineNumber":1255,"author":{"gitId":"s7u4rt99"},"content":"edit - zhiwei","lastModifiedDate":"2021-11-07"},{"lineNumber":1256,"author":{"gitId":"s7u4rt99"},"content":"editclass - zhiwei","lastModifiedDate":"2021-11-07"},{"lineNumber":1257,"author":{"gitId":"s7u4rt99"},"content":"sort - kevin","lastModifiedDate":"2021-11-07"},{"lineNumber":1258,"author":{"gitId":"s7u4rt99"},"content":"findname -bernard","lastModifiedDate":"2021-11-07"},{"lineNumber":1259,"author":{"gitId":"s7u4rt99"},"content":"findclass -bernard","lastModifiedDate":"2021-11-07"},{"lineNumber":1260,"author":{"gitId":"s7u4rt99"},"content":"findclassname -stuart","lastModifiedDate":"2021-11-07"},{"lineNumber":1261,"author":{"gitId":"s7u4rt99"},"content":"findtag -zhenglin","lastModifiedDate":"2021-11-07"},{"lineNumber":1262,"author":{"gitId":"s7u4rt99"},"content":"view - zhenglin","lastModifiedDate":"2021-11-07"},{"lineNumber":1263,"author":{"gitId":"s7u4rt99"},"content":"class - zhiwei","lastModifiedDate":"2021-11-07"},{"lineNumber":1264,"author":{"gitId":"s7u4rt99"},"content":"list -ez - stuart","lastModifiedDate":"2021-11-07"},{"lineNumber":1265,"author":{"gitId":"s7u4rt99"},"content":"listclass -ez - kevin","lastModifiedDate":"2021-11-07"},{"lineNumber":1266,"author":{"gitId":"s7u4rt99"},"content":"help - dunnid","lastModifiedDate":"2021-11-07"},{"lineNumber":1267,"author":{"gitId":"s7u4rt99"},"content":"exit - dunnid","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yourally2":246,"s7u4rt99":221,"Ongzl":317,"softmagnet":135,"bernardwan":110,"-":238}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"   1. Run the `seedu.times.Main` and try a few commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Ongzl":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"   e.g. `seedu.times.commons.StringUtilTest`","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"   e.g. `seedu.times.storage.StorageManagerTest`","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"   e.g. `seedu.times.logic.LogicManagerTest`","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Ongzl":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"![Logo](images/TimestableLogo.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"TimesTable is a **desktop app for managing your tuition students and classes, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TimesTable can get your class management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"1. Ensure you have Java `11` or above installed in your Computer, if you do not, you can download it from [here](https://www.oracle.com/java/technologies/downloads/#jdk17-linux).","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"1. Download the latest `timestable.jar` from [here](https://github.com/AY2122S1-CS2103T-F11-1/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample student data.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"1. Type the command in the command box and press \u0027Enter\u0027 to execute it. e.g. typing **`help`** and pressing \u0027Enter\u0027 will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"   Here are some example commands which you can use on our sample students data before using your own students data:","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"   * **`add `**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 nok/ n/Jack Doe p/10987654 e/jackd@example.com a/311, Clementi Ave 2, #02-25` : Adds a contact named `John Doe` to the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete `**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"   * **`sort `**`name asc` : Sorts the students by their name in ascending alphabetic order.","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"   * **`addclass `**`cn/Sec 4 A Maths ct/FRI 11:30-13:30 r/70 l/Nex Tuition Center`: Adds a new class with name \u0027Sec 4 A Maths\u0027, with class timing MON 11.30-13:30, with hourly rate of $70, at Nex Tuition Center.","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"   * **`addtoclass `**`1 2 3`: Adds the 2nd and 3rd student in the student list in the `students` tab into the 1st class in the `classes` tab","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"   * **`view `**`classes` : Changes the tab the user is on to the `classes` tab which displays all the classes.","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"   * **`view `**`timetable` : Changes the tab the user is on to the `timetable` tab which displays a timetable with all the classes. ","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * **`exit `** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"1. Once you are ready to fill in Timestable with your own students, simply use the  **`clear`** command to delete all the sample students, instead of having to delete them one by one.","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"   Now you can start putting your students into Timestable.","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"* Words in `UPPER_CASE` are the inputs to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"  e.g. in `add n/NAME`, `NAME` is an input which can be used as `add n/John Doe`.","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `listclass`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"* For commands that require next-ok-kin (NOK) information, all inputs regarding NOK should be after `nok/` and all","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"  inputs regarding the student should be before `nok/`. Timestable does not allow order swap!\u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"  e.g. `n/John p/97833242 … /nok n/Harry p/87738383 …` `John` and `97833242` are information belonging to the student","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"  and `John`\u0027s NOK\u0027s name is `Harry` whose phone number is `87738383`.","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"* For commands that require index (e.g. `editclass`, `addtoclass`, etc), zero, negative and out-of-range indices are ","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"rejected with an error message. (Out of range means that the index entered is greater than the number of entries in","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"a class or student list)","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"  ","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"* For commands that alters the list of students (eg. `findname`, `findtag`, `sort name asc`), the displayed","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"  changes for students will be shown in both the `Students` tab as well as the `Classes` tab.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"  This means that when students are filtered by their `name` and `tag`, they will be filtered by their `name` and `tag` in the `Classes` tab as well.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"  Likewise, when students are sorted by their names, they will be sorted in the `Classes` tab as well.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"* The `list` and `listclass` commands can be used to show the original lists of students and classes respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"* Class size will **not** be affected by filtering students (using FindName or FindTag).","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"* All arguments can have a maximum of 85 characters except otherwise stated.","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"Clears all entries from the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"Format: `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"### Adding a student: `add`","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"Adds a student to the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"Format:","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… nok/ n/NOK_NAME p/NOK_PHONE_NUMBER e/NOK_EMAIL a/NOK_ADDRESS","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"* This is a command that requires next-of-kin (NOK) information.","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"* This command is split into two segments (excluding command keyword). The first segment are the inputs before","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"  `nok/` and the second segment are the inputs after `nok/`.","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"    * Inputs in the first segment are about student information whereas inputs in the second segment are about NOK\u0027s information.","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"* The order of input within its own segment is swappable, but the segments themselves are not.","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"* The command does not allow adding duplicate students - as defined as the student having the same name, ignoring case.","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"* `NAME` can have a maximum of 120 characters.","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"* `PHONE_NUMBER` has to be between 3-25 numbers.","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"* `TAG` can have a maximum of 15 characters per tag, with a maximum of 5 tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"A student can have any number of tags (including 0).","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 t/ALevels nok/ n/Mary Doe p/93334848 e/mary23@gmail.com a/311, Clementi Ave 2, #02-25 ","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/slow learner nok/ n/Karen e/karenSUper@gmail.com p/99994444 a/311, Clementi Ave 2, #02-25 ","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"### Adding a class: `addclass`","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"yourally2"},"content":"Add a class to the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"addclass cn/CLASS_NAME ct/CLASS_TIMING r/HOURLY_RATE l/LOCATION","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"* This command adds a new class to keep track of all classes that the user is teaching.","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"yourally2"},"content":"* `CLASS_TIMING` must be in the form `ct/DAY HH:MM-HH:MM`","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"* `DAY` is case insensitive.","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"* `CLASS_TIMING` can only start and end at the hour mark or half hour mark, but can also end at 23:59 hours.","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"* `RATE` must be less than $1,000,000/hr","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"addclass cn/CS2103T ct/MON 09:30-11:30 r/70 l/Nex Tuition Center","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"Adds a new class with name `CS2103T`, with class timing `MON 09:30-11:30`, with hourly rate of $`70`, at `Nex","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"Tuition Center`.","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"yourally2"},"content":"addclass cn/Sec 4 E Maths ct/TUE 12:30-14:30 r/65 l/Block 123, Clementi Ave 6, #14-41","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"yourally2"},"content":"Adds a new class with name `Sec 4 E Maths`, with class timing `Tue 12:30-14:30`, with hourly rate of $`65`, at `Block 123, Clementi Ave 6, #14-41`.","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"yourally2"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"yourally2"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"yourally2"},"content":"Deletes the specified student from the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"yourally2"},"content":"Format:","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"yourally2"},"content":"delete INDEX","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"yourally2"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"* The index refers to the index number shown in the displayed student list in the `Students` tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"Examples:","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"yourally2"},"content":"* `list` followed by `delete 2` deletes the 2nd student in the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"* `findname Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"yourally2"},"content":"### Delete a class: `deleteclass`","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"yourally2"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"yourally2"},"content":"Deletes the specified class from the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"yourally2"},"content":"Format:","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"yourally2"},"content":"deleteclass INDEX","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"yourally2"},"content":"* Deletes the class at the specified `INDEX`.","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"* The index refers to the index number shown in the displayed class list in the `Classes` tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"yourally2"},"content":"Examples:","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"yourally2"},"content":"* `listclass` followed by `deleteclass 2` deletes the 2nd class in the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"### Adding student/students to a class: `addtoclass`","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"Add a single or multiple students to an existing class.","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"Ongzl"},"content":"addtoclass CLASS_INDEX STUDENT_INDEX...","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"Ongzl"},"content":"* This command adds any number of existing students into an existing class.","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"* `CLASS_INDEX` is the index number of the class in the displayed class list in the `Classes` tab, which will be","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"Ongzl"},"content":"  receiving the new students.","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"* `STUDENT_INDEX...` are the index number/s of the students shown in the displayed student list in the `Students` tab, these students are","lastModifiedDate":"2021-11-07"},{"lineNumber":214,"author":{"gitId":"Ongzl"},"content":"  to be added into the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"yourally2"},"content":"* Exactly one class index must be provided and at least one student index must be provided.","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"yourally2"},"content":"* Students that already exist in the class can\u0027t be added to the same class.","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"yourally2"},"content":"* If you enter duplicate student indices in one command, Timestable will only add the student once.","lastModifiedDate":"2021-11-07"},{"lineNumber":218,"author":{"gitId":"yourally2"},"content":"* Size of the class will change to reflect the number of students in the class.","lastModifiedDate":"2021-11-07"},{"lineNumber":219,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"Ongzl"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"Ongzl"},"content":"addtoclass 1 1 2 3","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"s7u4rt99"},"content":"Adds the 1st, 2nd and 3rd student in the displayed student list in the `Students` tab into the 1st class in the","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"s7u4rt99"},"content":"displayed class list in the `Classes` tab, `size` of the class will increase by 3.","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"yourally2"},"content":"### Removing students from a class: `removefromclass`","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"yourally2"},"content":"\u003chr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"yourally2"},"content":"Removes a single or multiple students from an existing class.","lastModifiedDate":"2021-11-07"},{"lineNumber":231,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"yourally2"},"content":"Format:","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"removefromclass CLASS_INDEX STUDENT_INDEX...","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"yourally2"},"content":"* Removes a non-zero number of existing students from an existing class.","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"s7u4rt99"},"content":"* `CLASS_INDEX` is the index number of the class in the displayed class list in the `Classes` tab to have its students removed from.","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"s7u4rt99"},"content":"* `STUDENT_INDEX...` are the index number(s) of the students, shown in the displayed student list of the class to be removed from","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"s7u4rt99"},"content":"  in the `Classes` tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":243,"author":{"gitId":"yourally2"},"content":"Example:","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"yourally2"},"content":"removefromclass 1 1 2 3","lastModifiedDate":"2021-11-07"},{"lineNumber":246,"author":{"gitId":"yourally2"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":247,"author":{"gitId":"yourally2"},"content":"Removes the 1st, 2nd and 3rd student in the displayed student list of the 1st class in the `classes` tab, causing the","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"yourally2"},"content":"`size` of 1st class to decrease by 3.","lastModifiedDate":"2021-11-07"},{"lineNumber":249,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":251,"author":{"gitId":"s7u4rt99"},"content":"### Editing a student : `edit`","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"yourally2"},"content":"Edits an existing student in the TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"softmagnet"},"content":"Format:","lastModifiedDate":"2021-10-01"},{"lineNumber":257,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":258,"author":{"gitId":"yourally2"},"content":"edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​ [nok/ [n/NOK_NAME] [p/NOK_PHONE] [e/NOK_EMAIL] [a/NOK_ADDRESS]]","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"softmagnet"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"softmagnet"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student","lastModifiedDate":"2021-10-01"},{"lineNumber":263,"author":{"gitId":"softmagnet"},"content":"  list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-01"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"yourally2"},"content":"* An optional `nok/` (next-of-kin) field can be provided to edit the student\u0027s next-of-kin (NOK). All fields that come after `nok/`","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"softmagnet"},"content":"  will be for the student\u0027s next-of-kin. (same rule from `add` command applies)","lastModifiedDate":"2021-10-01"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"    * If `nok/` is provided, at least one of the optional fields belonging to NOK must be provided.","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"* The order of input within its own segment is swappable, but the segments themselves are not.","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"yourally2"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"yourally2"},"content":"    * You can remove all the student\u0027s tags by typing `t/` without","lastModifiedDate":"2021-09-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"s7u4rt99"},"content":"* `NAME` can have a maximum of 120 characters.","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"* `PHONE_NUMBER` has to be between 3-25 numbers.","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"bernardwan"},"content":"* `TAG` can have a maximum of 15 characters per tag, with a maximum of 5 tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"softmagnet"},"content":"Examples (editing student information only):","lastModifiedDate":"2021-10-01"},{"lineNumber":277,"author":{"gitId":"s7u4rt99"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the `PHONE` and `EMAIL` of the 1st student to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"s7u4rt99"},"content":"* `edit 2 n/Betsy Crower t/` Edits the `NAME` of the 2nd student to be `Betsy Crower` and clears all existing `TAG`s.","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"yourally2"},"content":"* `edit 1 n/kevin p/12345678` Edits the `NAME` and `PHONE` of student 1 to become `kevin` and `12345678`.","lastModifiedDate":"2021-10-30"},{"lineNumber":280,"author":{"gitId":"s7u4rt99"},"content":"* `edit 4 n/John Walker a/4 Petir Road #16-04 Singapore 657891` Edits the `NAME` and `ADDRESS` of the 4th person to be","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"bernardwan"},"content":"  `John Walker` and `4 Petir Road #16-04 Singapore 657891` respectively.","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"yourally2"},"content":"Examples (also editing nok information):","lastModifiedDate":"2021-11-07"},{"lineNumber":284,"author":{"gitId":"s7u4rt99"},"content":"* `edit 2 nok/ p/98429239` Edits 2nd student\u0027s NOK\u0027s `PHONE` to be `98429239`.","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"s7u4rt99"},"content":"* `edit 3 a/Com2 nok/ p/98429239` Edits 3rd student\u0027s `ADDRESS` to be `Com2` while also editing","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"s7u4rt99"},"content":"  NOK\u0027s `PHONE` to be `98429239`.","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":288,"author":{"gitId":"s7u4rt99"},"content":"### Editing a class: `editclass`","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"s7u4rt99"},"content":"Edits an existing class in the class list in the `classes` tab.","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"Ongzl"},"content":"Format:","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"Ongzl"},"content":"editclass 1 [cn/CLASS_NAME] [ct/CLASS_TIMING] [r/RATE] [l/LOCATION]","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"Ongzl"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"Ongzl"},"content":"* Edits the class at the specified `INDEX`. The index refers to the index number shown in the displayed class","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"softmagnet"},"content":"  list in the `classes` tab. ","lastModifiedDate":"2021-11-03"},{"lineNumber":300,"author":{"gitId":"softmagnet"},"content":"  * The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-03"},{"lineNumber":301,"author":{"gitId":"yourally2"},"content":"  * The index must belong to a class.","lastModifiedDate":"2021-11-07"},{"lineNumber":302,"author":{"gitId":"Ongzl"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"yourally2"},"content":"* `CLASS_TIMING` can only start and end at the hour mark or half hour mark, but can also end at 23:59 hours.","lastModifiedDate":"2021-11-07"},{"lineNumber":304,"author":{"gitId":"softmagnet"},"content":"* Edit commands that will create a clash of `CLASS_TIMING` with other classes is not accepted.","lastModifiedDate":"2021-11-03"},{"lineNumber":305,"author":{"gitId":"s7u4rt99"},"content":"* `RATE` must be less than $1,000,000/hr","lastModifiedDate":"2021-11-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"yourally2"},"content":"* `editclass 1 ct/wed 15:00-17:00` Edits the first class in the class list\u0027s `CLASS_TIMIMG` to be on Wednesday from 3pm to 5pm.","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"s7u4rt99"},"content":"### Sorting students and classes: `sort`","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"s7u4rt99"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"yourally2"},"content":"Sorts the students based on their `NAME` in alphabetical order, ","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"s7u4rt99"},"content":"or classes based on their `CLASS_TIMING`, in either ascending or descending order.","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"s7u4rt99"},"content":"Format:","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"s7u4rt99"},"content":"sort PARAMETER_TO_SORT_BY DIRECTION_OF_SORT","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"s7u4rt99"},"content":"* `PARAMETER_TO_SORT_BY` can either be `name` or `timing` which sorts the students and classes respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":322,"author":{"gitId":"s7u4rt99"},"content":"* `DIRECTION_OF_SORT` can either be `asc` or `desc` to represent ascending and descending respectively.","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"s7u4rt99"},"content":"* `sort name asc` sorts students alphabetically by their `NAME` in ascending order.","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"s7u4rt99"},"content":"* `sort name desc` sorts students alphabetically by their `NAME` in descending order.","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"s7u4rt99"},"content":"* `sort timing asc` sorts classes based on their `CLASS_TIMING` starting from the earliest in the week to the latest.","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"s7u4rt99"},"content":"* `sort timing desc` sorts classes based on their `CLASS_TIMING` starting from the latest in the week to the earliest.","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"yourally2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"s7u4rt99"},"content":"For commands that alters the list of students (eg. `findname`, `findtag`, `sort name asc`), the displayed","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"s7u4rt99"},"content":"  changes for students will be shown in both the `Students` tab as well as the `Classes` tab.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"s7u4rt99"},"content":"  This means that when students are filtered by their `name` and `tag`, they will be filtered by their `name` and `tag` in the `Classes` tab as well.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"s7u4rt99"},"content":"  Likewise, when students are sorted by their names, they will be sorted in the `Classes` tab as well.","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"yourally2"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"yourally2"},"content":"The `list` and `listclass` commands can be used to show the original lists of students and classes respectively. ","lastModifiedDate":"2021-11-07"},{"lineNumber":337,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"yourally2"},"content":"Class size will **not** be affected by filtering students (using FindName or FindTag).","lastModifiedDate":"2021-11-07"},{"lineNumber":339,"author":{"gitId":"yourally2"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":341,"author":{"gitId":"s7u4rt99"},"content":"### Locating students by name: `findname`","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"s7u4rt99"},"content":"Finds students whose `NAME` contain any of the given keywords.  ","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"s7u4rt99"},"content":"Note that if you want to display the entire list of students again, run `list`.","lastModifiedDate":"2021-11-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"s7u4rt99"},"content":"Format:","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"s7u4rt99"},"content":"findname NAME [, [NAME]...]","lastModifiedDate":"2021-11-07"},{"lineNumber":350,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"bernardwan"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"s7u4rt99"},"content":"* The search terms are split by commas. e.g. `findname alex lim, bernice yu`","lastModifiedDate":"2021-11-07"},{"lineNumber":354,"author":{"gitId":"yourally2"},"content":"* Only the student\u0027s `NAME` is searched.","lastModifiedDate":"2021-11-07"},{"lineNumber":355,"author":{"gitId":"s7u4rt99"},"content":"* Partial matches will still be matched e.g. `Han` will match `Hans`.","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"s7u4rt99"},"content":"* Persons matching at least one search term will be returned (i.e. `OR` search).","lastModifiedDate":"2021-11-07"},{"lineNumber":357,"author":{"gitId":"bernardwan"},"content":"  e.g. `findname alex lim, bernice yu` will return `Alex Lim`, `Bernice Yu`.","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"s7u4rt99"},"content":"* The entire search term is used for matching e.g. `findname Alex L` will match `Alex Lim`","lastModifiedDate":"2021-11-07"},{"lineNumber":359,"author":{"gitId":"bernardwan"},"content":"    but not `Alex Yu`","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Ongzl"},"content":"* `findname John` returns `john` and `John Doe` in both `Students` and `Classes` tab.","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"Ongzl"},"content":"* `findname alex, david` returns `Alex Yeoh`, `David Li` in both `Students` and `Classes` tab.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"bernardwan"},"content":"  ![result for \u0027findname alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"yourally2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":368,"author":{"gitId":"s7u4rt99"},"content":"For commands that alters the list of students (eg. `findname`, `findtag`, `sort name asc`), the displayed","lastModifiedDate":"2021-11-07"},{"lineNumber":369,"author":{"gitId":"s7u4rt99"},"content":"  changes for students will be shown in both the `Students` tab as well as the `Classes` tab.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"s7u4rt99"},"content":"  This means that when students are filtered by their `name` and `tag`, they will be filtered by their `name` and `tag` in the `Classes` tab as well.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"s7u4rt99"},"content":"  Likewise, when students are sorted by their names, they will be sorted in the `Classes` tab as well.","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":373,"author":{"gitId":"yourally2"},"content":"The `list` and `listclass` commands can be used to show the original lists of students and classes respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":374,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"yourally2"},"content":"Class size will **not** be affected by filtering students (using FindName or FindTag).","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"yourally2"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":377,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"s7u4rt99"},"content":"### Locating class by class timing : `findclass`","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"s7u4rt99"},"content":"Finds a class whose `CLASS_TIMING` matches the given keyword.  ","lastModifiedDate":"2021-10-29"},{"lineNumber":382,"author":{"gitId":"s7u4rt99"},"content":"Note that if you want to display the list of classes again, run `listclass`.","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"s7u4rt99"},"content":"Format: `findclass CLASS_TIMING`","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"Ongzl"},"content":"\u003c!---todo fill in inner working---\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"yourally2"},"content":"* The valid keywords for `CLASS_TIMING` are limited to the following types:","lastModifiedDate":"2021-11-07"},{"lineNumber":389,"author":{"gitId":"softmagnet"},"content":"    1. 3 letter abbreviation for day of the week e.g. `Mon`, `Tue`, etc.","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"s7u4rt99"},"content":"    2. Time expressed in HH:MM-HH:MM format   e.g. `11:30-12:30`, `15:00-16:00`, etc. ","lastModifiedDate":"2021-10-29"},{"lineNumber":391,"author":{"gitId":"s7u4rt99"},"content":"        * `CLASS_TIMING` can only start and end at the hour mark or half hour mark, but can also end at 23:59 hours.","lastModifiedDate":"2021-11-07"},{"lineNumber":392,"author":{"gitId":"yourally2"},"content":"* Either a single keyword or two keywords of different types should be provided otherwise no classes would be returned.","lastModifiedDate":"2021-11-07"},{"lineNumber":393,"author":{"gitId":"s7u4rt99"},"content":"* Multiple keywords of the same type (eg Mon Tue) would not return any classes, because the command finds classes which contain both timings (Mon and Tue), and ","lastModifiedDate":"2021-11-07"},{"lineNumber":394,"author":{"gitId":"yourally2"},"content":"    it is currently not possible to have a class with two different timings (ie a class that occurs on both Monday and Tuesday or both `10:00-12:00` and `17:00-19:00`)","lastModifiedDate":"2021-11-07"},{"lineNumber":395,"author":{"gitId":"s7u4rt99"},"content":"    * Important clarification: In TimesTable, class refers to a single slot per week in the timetable.","lastModifiedDate":"2021-11-07"},{"lineNumber":396,"author":{"gitId":"softmagnet"},"content":"* If two keywords are entered, then the class returned would be the one that match all the keywords","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"softmagnet"},"content":"  (see example below).","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":399,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"softmagnet"},"content":"1. Single keyword","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"softmagnet"},"content":"    * `findclass mon` returns all classes on Monday","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"s7u4rt99"},"content":"    * `findclass 10:00-12:00` returns all classes scheduled for `10:00 to 12:00` no matter which day of the week it belongs","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"softmagnet"},"content":"      to","lastModifiedDate":"2021-10-29"},{"lineNumber":405,"author":{"gitId":"yourally2"},"content":"2. Two keywords","lastModifiedDate":"2021-11-07"},{"lineNumber":406,"author":{"gitId":"s7u4rt99"},"content":"    * `findclass mon 11:00-12:00` returns the exact class on `Mon at 11:00-12:00`.","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"s7u4rt99"},"content":"    * `findclass tue 11:00-12:00` returns the exact class on `Tue at 11:00-12:00`.","lastModifiedDate":"2021-10-29"},{"lineNumber":408,"author":{"gitId":"s7u4rt99"},"content":"3. Negative examples (Two or more keywords of the same type)","lastModifiedDate":"2021-11-07"},{"lineNumber":409,"author":{"gitId":"s7u4rt99"},"content":"    * `findclass mon tue` returns nothing.","lastModifiedDate":"2021-11-07"},{"lineNumber":410,"author":{"gitId":"s7u4rt99"},"content":"    * `findclass 09:00-10:30 11:00-12:00` returns nothing.","lastModifiedDate":"2021-11-07"},{"lineNumber":411,"author":{"gitId":"softmagnet"},"content":"   ","lastModifiedDate":"2021-10-29"},{"lineNumber":412,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":413,"author":{"gitId":"s7u4rt99"},"content":"### Locating class by class name: `findclassname`","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"Ongzl"},"content":"Finds a class whose class name matches the given keywords.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"s7u4rt99"},"content":"Note that if you want to display the list of classes again, run `listclass`.","lastModifiedDate":"2021-11-07"},{"lineNumber":418,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":419,"author":{"gitId":"s7u4rt99"},"content":"Format:","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"s7u4rt99"},"content":"findclassname CLASS_NAME [, [CLASS_NAME]...]","lastModifiedDate":"2021-11-07"},{"lineNumber":422,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"Ongzl"},"content":"\u003c!---todo fill in inner working---\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":424,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"s7u4rt99"},"content":"* The search is case-insensitive `PHYSICS` will match \u0027physics\u0027.","lastModifiedDate":"2021-11-07"},{"lineNumber":426,"author":{"gitId":"s7u4rt99"},"content":"* The search terms are split by commas. e.g. `findclassname sec 4 physics, jc math`","lastModifiedDate":"2021-11-07"},{"lineNumber":427,"author":{"gitId":"s7u4rt99"},"content":"* Only the class\u0027 `CLASS_NAME` is searched.","lastModifiedDate":"2021-11-07"},{"lineNumber":428,"author":{"gitId":"s7u4rt99"},"content":"* Partial matches will still be matched e.g. `Phy` will match `Physics`.","lastModifiedDate":"2021-11-07"},{"lineNumber":429,"author":{"gitId":"s7u4rt99"},"content":"* Classes matching at least one search term will be returned (i.e. `OR` search).","lastModifiedDate":"2021-11-07"},{"lineNumber":430,"author":{"gitId":"s7u4rt99"},"content":"  e.g. `findclassname sec 4 phy, jc math` will return `sec 4 physics`, `jc mathematics`.","lastModifiedDate":"2021-11-07"},{"lineNumber":431,"author":{"gitId":"s7u4rt99"},"content":"* The entire search term is used for matching e.g. `findclassname sec 4 phy` will match `sec 4 physics`","lastModifiedDate":"2021-11-07"},{"lineNumber":432,"author":{"gitId":"s7u4rt99"},"content":"  but not `sec 4 maths`","lastModifiedDate":"2021-11-07"},{"lineNumber":433,"author":{"gitId":"softmagnet"},"content":"  ","lastModifiedDate":"2021-10-29"},{"lineNumber":434,"author":{"gitId":"Ongzl"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":435,"author":{"gitId":"Ongzl"},"content":"* `findclassname math` returns all the classes with math in the class name.","lastModifiedDate":"2021-10-26"},{"lineNumber":436,"author":{"gitId":"s7u4rt99"},"content":"* `findclassname Sec, 4, maths` returns all the classes with `sec` or `4` or `maths` in the class name. Hence,","lastModifiedDate":"2021-11-07"},{"lineNumber":437,"author":{"gitId":"s7u4rt99"},"content":"  class with name `sec 4 physics` and class with name `JC maths` would both be returned.","lastModifiedDate":"2021-11-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"s7u4rt99"},"content":"### Locating students by tag: `findtag`","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"s7u4rt99"},"content":"Finds students whose `TAG`s contain any of the given keywords.  ","lastModifiedDate":"2021-10-29"},{"lineNumber":443,"author":{"gitId":"s7u4rt99"},"content":"Note that if you want to display the entire list of students again, run `list`.","lastModifiedDate":"2021-11-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"s7u4rt99"},"content":"Format:","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"s7u4rt99"},"content":"findtag KEYWORD [, [KEYWORD]...]","lastModifiedDate":"2021-11-07"},{"lineNumber":448,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"s7u4rt99"},"content":"* Search terms can partially match the tag, or the entire tag, e.g. `math` for all `A Math` and `C Math` tags, or `A Math` for the `A Math` tag.","lastModifiedDate":"2021-11-07"},{"lineNumber":451,"author":{"gitId":"s7u4rt99"},"content":"* Search terms are separated by commas. e.g. `findtag math, physics` will find students","lastModifiedDate":"2021-11-07"},{"lineNumber":452,"author":{"gitId":"s7u4rt99"},"content":"  with tags containing `math` or `physics`.","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"s7u4rt99"},"content":"* Students matching at least one search term will be returned (i.e. `OR` search).","lastModifiedDate":"2021-11-07"},{"lineNumber":454,"author":{"gitId":"s7u4rt99"},"content":"  e.g. `findtag math, physics` will return students with the `Math` `TAG` but no `Physics` `TAG`,","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"s7u4rt99"},"content":"  students with only the`Physics` `TAG` but no `Math` `TAG`, and students with both `TAG`s.","lastModifiedDate":"2021-10-29"},{"lineNumber":456,"author":{"gitId":"yourally2"},"content":"* The search is case-insensitive. e.g `math` will match `Math`.","lastModifiedDate":"2021-11-07"},{"lineNumber":457,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":458,"author":{"gitId":"yourally2"},"content":"Examples:","lastModifiedDate":"2021-11-07"},{"lineNumber":459,"author":{"gitId":"yourally2"},"content":"* `findtag math` returns `Alex Yeoh` with the `A Math` `TAG` and `John Doe` with the `C Math` `TAG` in both `Students` and `Classes` tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":460,"author":{"gitId":"yourally2"},"content":"* `findtag math, physics` returns `Alex Yeoh` with the `A Math` and `Biology` `TAG`s in both `Students` and `Classes` tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":461,"author":{"gitId":"yourally2"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":462,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":463,"author":{"gitId":"yourally2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":464,"author":{"gitId":"s7u4rt99"},"content":"For commands that alters the list of students (eg. `findname`, `findtag`, `sort name asc`), the displayed","lastModifiedDate":"2021-11-07"},{"lineNumber":465,"author":{"gitId":"s7u4rt99"},"content":"  changes for students will be shown in both the `Students` tab as well as the `Classes` tab.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":466,"author":{"gitId":"s7u4rt99"},"content":"  This means that when students are filtered by their `name` and `tag`, they will be filtered by their `name` and `tag` in the `Classes` tab as well.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":467,"author":{"gitId":"s7u4rt99"},"content":"  Likewise, when students are sorted by their names, they will be sorted in the `Classes` tab as well.","lastModifiedDate":"2021-11-07"},{"lineNumber":468,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":469,"author":{"gitId":"yourally2"},"content":"The `list` and `listclass` commands can be used to show the original lists of students and classes respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":470,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":471,"author":{"gitId":"yourally2"},"content":"Class size will **not** be affected by filtering students (using FindName or FindTag).","lastModifiedDate":"2021-11-07"},{"lineNumber":472,"author":{"gitId":"yourally2"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":473,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"s7u4rt99"},"content":"### Viewing of different tabs: `view`","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"yourally2"},"content":"Views an existing tab in the TimesTable without the need to use the mouse to click.","lastModifiedDate":"2021-11-07"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"s7u4rt99"},"content":"Format:","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"yourally2"},"content":"view TAB_TO_VIEW   ","lastModifiedDate":"2021-10-30"},{"lineNumber":482,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"s7u4rt99"},"content":"* `TAB_TO_VIEW` has to be an existing tab in Timestable (`students`, `classes`, `timetable`).","lastModifiedDate":"2021-10-29"},{"lineNumber":485,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"s7u4rt99"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":487,"author":{"gitId":"s7u4rt99"},"content":"* `view timetable` switches the displayed tab to be the `timetable` tab.","lastModifiedDate":"2021-10-29"},{"lineNumber":488,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":489,"author":{"gitId":"s7u4rt99"},"content":"### Selecting of classes: `class`","lastModifiedDate":"2021-10-28"},{"lineNumber":490,"author":{"gitId":"s7u4rt99"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":491,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":492,"author":{"gitId":"yourally2"},"content":"Selects a class in the class tab and displays its students without the need to use the mouse to double click the respective class.","lastModifiedDate":"2021-11-07"},{"lineNumber":493,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":494,"author":{"gitId":"s7u4rt99"},"content":"Format:","lastModifiedDate":"2021-10-28"},{"lineNumber":495,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":496,"author":{"gitId":"s7u4rt99"},"content":"class CLASS_INDEX   ","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"s7u4rt99"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":499,"author":{"gitId":"yourally2"},"content":"* Selected class will not be highlighted in the same way as when you click on a class using the mouse.","lastModifiedDate":"2021-11-07"},{"lineNumber":500,"author":{"gitId":"yourally2"},"content":"* `CLASS_INDEX` must be an index of a class that exists in the displayed class list.","lastModifiedDate":"2021-11-07"},{"lineNumber":501,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":502,"author":{"gitId":"s7u4rt99"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"s7u4rt99"},"content":"* `class 1` selects the class with `CLASS_INDEX` of `1` and displays its students in the class tab.","lastModifiedDate":"2021-10-29"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"s7u4rt99"},"content":"### Listing all students : `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"s7u4rt99"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"yourally2"},"content":"Shows a list of all students in the Students tab.","lastModifiedDate":"2021-10-30"},{"lineNumber":509,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"s7u4rt99"},"content":"Format: `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":512,"author":{"gitId":"s7u4rt99"},"content":"### Listing all the classes: `listclass`","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"Ongzl"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":514,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":515,"author":{"gitId":"yourally2"},"content":"Shows a list of all classes in the Class tab.","lastModifiedDate":"2021-10-30"},{"lineNumber":516,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"s7u4rt99"},"content":"Format: `listclass`","lastModifiedDate":"2021-10-28"},{"lineNumber":518,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":519,"author":{"gitId":"s7u4rt99"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":520,"author":{"gitId":"s7u4rt99"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":521,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":522,"author":{"gitId":"s7u4rt99"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-29"},{"lineNumber":523,"author":{"gitId":"s7u4rt99"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"s7u4rt99"},"content":"Format: `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":527,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"softmagnet"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"s7u4rt99"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"s7u4rt99"},"content":"TimesTable data is saved in the hard disk automatically in the `data` folder present in the same directory as `timestable.jar` after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":540,"author":{"gitId":"s7u4rt99"},"content":"\u003chr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":542,"author":{"gitId":"s7u4rt99"},"content":"TimesTable data are saved as a JSON file `[JAR file location]/data/timestable.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-11-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":544,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":545,"author":{"gitId":"yourally2"},"content":"If your changes to the data file makes its format invalid, Timestable will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-11-05"},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":548,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":550,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-11-07"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":552,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":553,"author":{"gitId":"yourally2"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Timestable home folder.","lastModifiedDate":"2021-11-07"},{"lineNumber":554,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":555,"author":{"gitId":"yourally2"},"content":"**Q**: Are you going to add XXX feature? What features are you planning to add?\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":556,"author":{"gitId":"yourally2"},"content":"**A**: I\u0027m glad you asked! We\u0027re currently planning to add the following features:","lastModifiedDate":"2021-11-07"},{"lineNumber":557,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":558,"author":{"gitId":"yourally2"},"content":"### Upcoming Features:","lastModifiedDate":"2021-11-07"},{"lineNumber":559,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":560,"author":{"gitId":"yourally2"},"content":"#### Payment Management with Invoice","lastModifiedDate":"2021-11-07"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"yourally2"},"content":"Different classes you teach will have different hourly rates, and they will of course have varying lengths and frequencies. ","lastModifiedDate":"2021-11-07"},{"lineNumber":563,"author":{"gitId":"yourally2"},"content":"Having to keep track of how much someone has to pay and whether they have paid is a major source of stress.","lastModifiedDate":"2021-11-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"yourally2"},"content":"We recognise this demand, and thus are working on this feature for you to easily track required payments to students.","lastModifiedDate":"2021-11-07"},{"lineNumber":566,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":567,"author":{"gitId":"yourally2"},"content":"A work in progress sneak peak of the feature is shown below.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":568,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":569,"author":{"gitId":"yourally2"},"content":"![UpcomingFeature](images/UpcomingFeature.png)  ","lastModifiedDate":"2021-11-07"},{"lineNumber":570,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":571,"author":{"gitId":"yourally2"},"content":"After a class, just input the time taught for that class and mark the attendance of those present.","lastModifiedDate":"2021-11-07"},{"lineNumber":572,"author":{"gitId":"yourally2"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":573,"author":{"gitId":"yourally2"},"content":"For each student present, TimesTable will take the hourly rate multiplied by the ","lastModifiedDate":"2021-11-07"},{"lineNumber":574,"author":{"gitId":"yourally2"},"content":"session length for each person present to calculate the amount that each student has to pay.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":575,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":576,"author":{"gitId":"bernardwan"},"content":"The session length field is useful when the class length goes beyond the intended length or when the class cuts short.  ","lastModifiedDate":"2021-11-08"},{"lineNumber":577,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":578,"author":{"gitId":"bernardwan"},"content":"This information will then be consolidated in an invoice to be generated.","lastModifiedDate":"2021-11-08"},{"lineNumber":579,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":580,"author":{"gitId":"bernardwan"},"content":"When you want to generate a new invoice, simply use the \u0027createinvoice\u0027 command. Invoices will be generated for all ","lastModifiedDate":"2021-11-08"},{"lineNumber":581,"author":{"gitId":"bernardwan"},"content":"students of the selected class. These invoices will use the session attendances recorded since the last invoice, generating","lastModifiedDate":"2021-11-08"},{"lineNumber":582,"author":{"gitId":"bernardwan"},"content":"a table with the relevant information such as session date, session length, hourly rate, student name, and so on. You will","lastModifiedDate":"2021-11-08"},{"lineNumber":583,"author":{"gitId":"bernardwan"},"content":"also be able to set the due date for the invoice. ","lastModifiedDate":"2021-11-08"},{"lineNumber":584,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":585,"author":{"gitId":"bernardwan"},"content":"An example of the invoice generated is shown below.","lastModifiedDate":"2021-11-08"},{"lineNumber":586,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":587,"author":{"gitId":"bernardwan"},"content":"![InvoiceExample](images/InvoiceExample.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":588,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":589,"author":{"gitId":"bernardwan"},"content":"With this invoice generation feature, you will easily be able to charge the correct amount to your clients","lastModifiedDate":"2021-11-08"},{"lineNumber":590,"author":{"gitId":"bernardwan"},"content":"and you would also not have to worry about providing evidence. TimesTable will take care of it for you.","lastModifiedDate":"2021-11-08"},{"lineNumber":591,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":592,"author":{"gitId":"bernardwan"},"content":"In addition to invoice generation, we are also working on an invoice management feature that will allow you to track","lastModifiedDate":"2021-11-08"},{"lineNumber":593,"author":{"gitId":"bernardwan"},"content":"the status of each invoice. You will be able to mark the invoices as paid, and archive them. TimesTable will also","lastModifiedDate":"2021-11-08"},{"lineNumber":594,"author":{"gitId":"bernardwan"},"content":"alert you once the due date for any invoice has passed. You can simply let TimesTable keep track of all payments for you.","lastModifiedDate":"2021-11-08"},{"lineNumber":595,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":596,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":597,"author":{"gitId":"yourally2"},"content":"If there are any other proposed features, please submit an issue via our GitHub over [here](https://github.com/AY2122S1-CS2103T-F11-1/tp/issues) and we\u0027ll look into it!","lastModifiedDate":"2021-11-07"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"yourally2"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… nok/ n/NOK_NAME p/NOK_PHONE_NUMBER e/NOK_EMAIL a/NOK_ADDRESS` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 t/ALevels nok/ n/Mary Doe p/93334848 e/mary23@gmail.com a/311, Clementi Ave 2, #02-25 `","lastModifiedDate":"2021-11-07"},{"lineNumber":606,"author":{"gitId":"s7u4rt99"},"content":"**Add class** | `addclass cn/CLASS_NAME ct/CLASS_TIMING r/HOURLY_RATE l/LOCATION` \u003cbr\u003e e.g., `addclass cn/Sec 4 A Maths ct/mon 11:30-13:30 r/70 l/Nex Tuition Center`","lastModifiedDate":"2021-11-07"},{"lineNumber":607,"author":{"gitId":"s7u4rt99"},"content":"**Add to class** | `addtoclass CLASS_INDEX STUDENT_INDEX…` \u003cbr\u003e e.g., `addtoclass 1 1 2 3`","lastModifiedDate":"2021-11-08"},{"lineNumber":608,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":609,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-11-07"},{"lineNumber":610,"author":{"gitId":"yourally2"},"content":"**Delete class** | `deleteclass INDEX` \u003cbr\u003e e.g., `deleteclass 2`","lastModifiedDate":"2021-11-07"},{"lineNumber":611,"author":{"gitId":"yourally2"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​ [nok/ [n/NOK_NAME] [p/NOK_PHONE] [e/NOK_EMAIL] [a/NOK_ADDRESS]]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-11-07"},{"lineNumber":612,"author":{"gitId":"s7u4rt99"},"content":"**Edit class** | `editclass 1 [cn/CLASS_NAME] [ct/CLASS_TIMING] [r/RATE] [l/LOCATION]` \u003cbr\u003e e.g., `editclass 1 ct/wed 15:00-17:00`","lastModifiedDate":"2021-10-28"},{"lineNumber":613,"author":{"gitId":"s7u4rt99"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-11-08"},{"lineNumber":614,"author":{"gitId":"s7u4rt99"},"content":"**Find name** | `findname NAME [, [NAME]...]` \u003cbr\u003e e.g., `find Stuart`","lastModifiedDate":"2021-11-07"},{"lineNumber":615,"author":{"gitId":"s7u4rt99"},"content":"**Find class timing** | `findclass CLASS_TIMING` \u003cbr\u003e e.g., `findclass mon 11:00-12:00`","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"s7u4rt99"},"content":"**Find class name** | `findclassname CLASS_NAME [, [CLASS_NAME]...]` \u003cbr\u003e e.g., `findclassname math`","lastModifiedDate":"2021-11-07"},{"lineNumber":617,"author":{"gitId":"s7u4rt99"},"content":"**Find tag** | `findtag KEYWORD [, [KEYWORD]...]` \u003cbr\u003e e.g., `findtag  math, physics`","lastModifiedDate":"2021-11-07"},{"lineNumber":618,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":619,"author":{"gitId":"yourally2"},"content":"**List** | `list`","lastModifiedDate":"2021-11-07"},{"lineNumber":620,"author":{"gitId":"yourally2"},"content":"**List class** | `listclass`","lastModifiedDate":"2021-11-07"},{"lineNumber":621,"author":{"gitId":"s7u4rt99"},"content":"**Remove from class** | `removefromclass CLASS_INDEX STUDENT_INDEX...` \u003cbr\u003e e.g., `removefromclass 1 1 2 3`","lastModifiedDate":"2021-11-08"},{"lineNumber":622,"author":{"gitId":"s7u4rt99"},"content":"**Sort** | `sort PARAMETER_TO_SORT_BY DIRECTION_OF_SORT` \u003cbr\u003e e.g., `sort name asc`","lastModifiedDate":"2021-11-08"},{"lineNumber":623,"author":{"gitId":"s7u4rt99"},"content":"**Select class** | `class CLASS_INDEX` \u003cbr\u003e e.g., `class 2`","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"s7u4rt99"},"content":"**View** | `view TAB_TO_VIEW` \u003cbr\u003e e.g., `view timetable`","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":626,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":627,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":628,"author":{"gitId":"yourally2"},"content":"## Glossary","lastModifiedDate":"2021-10-30"},{"lineNumber":629,"author":{"gitId":"yourally2"},"content":"- NOK: Next-of-kin. Refers to the student\u0027s guardian, parent or perhaps close friend to be contacted regarding admin matters like payment.","lastModifiedDate":"2021-10-30"},{"lineNumber":630,"author":{"gitId":"s7u4rt99"},"content":"- PARAMETERS: The inputs before the `/` are known as _parameters_.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":631,"author":{"gitId":"s7u4rt99"},"content":"  e.g `n/NAME` (`n/` is the parameter for name),   ","lastModifiedDate":"2021-11-07"},{"lineNumber":632,"author":{"gitId":"s7u4rt99"},"content":"  e.g `a/ADDRESS` (`a/` is the parameter for name).","lastModifiedDate":"2021-11-07"},{"lineNumber":633,"author":{"gitId":"s7u4rt99"},"content":"- ARGUMENTS: The inputs after the `/` are known as _arguments_.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":634,"author":{"gitId":"s7u4rt99"},"content":"  e.g `n/NAME` (`NAME` is the argument),   ","lastModifiedDate":"2021-11-07"},{"lineNumber":635,"author":{"gitId":"s7u4rt99"},"content":"  e.g `a/ADDRESS` (`ADDRESS` is the argument).","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yourally2":154,"s7u4rt99":200,"Ongzl":64,"softmagnet":43,"bernardwan":31,"-":143}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"bernardwan"},"content":"    content: \"TimesTable\";","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bernardwan":1,"-":294}},{"path":"docs/diagrams/AddClassModelSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"participant \":TimesTable\" as TimesTable MODEL_COLOR_T3","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"participant \":UniqueClassList\" as UniqueClassList MODEL_COLOR_T3","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"participant \"internalList:ObservableArrayList\" as ObservableArrayList MODEL_COLOR_T3","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"[-\u003e Model : addTuitionClass(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"Model -\u003e TimesTable : addTuitionClass(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"activate TimesTable","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"TimesTable -\u003e UniqueClassList : add(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"activate UniqueClassList","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"UniqueClassList -\u003e UniqueClassList : isValidTiming(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"activate UniqueClassList","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"UniqueClassList --\u003e UniqueClassList","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"deactivate UniqueClassList","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"UniqueClassList -\u003e ObservableArrayList : add(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"activate ObservableArrayList","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Ongzl":29}},{"path":"docs/diagrams/AddClassRef1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"group sd generate StudentNameList and TuitionClass","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"participant \":AddClassCommandParser\" as AddClassCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"participant \"s:StudentNameList\" as StudentNameList LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"participant \"t:TuitionClass\" as TuitionClass LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"activate AddClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"create StudentNameList","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"AddClassCommandParser -\u003e StudentNameList : StudentNameList()","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"activate StudentNameList","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"StudentNameList --\u003e AddClassCommandParser : s","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"deactivate StudentNameList","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"create TuitionClass","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"AddClassCommandParser -\u003e TuitionClass : TuitionClass(className, classTiming, location, rate, s)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"activate TuitionClass","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"TuitionClass --\u003e AddClassCommandParser : t","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"deactivate TuitionClass","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Ongzl":31}},{"path":"docs/diagrams/AddClassSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"participant \":AddClassCommandParser\" as AddClassCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"participant \"a:AddClassCommand\" as AddClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"[-\u003e LogicManager : execute(\"addclass cn/... ct/... r/.. l/...\")","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"activate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e TimesTableParser : parseCommand(\"addclass cn/... ct/... r/.. l/...\")","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"create AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"activate AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"AddClassCommandParser --\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"deactivate AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e AddClassCommandParser : parse(\"cn/... ct/... r/.. l/...\")","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"activate AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"ref over AddClassCommandParser : generate StudentNameList and TuitionClass","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"create AddClassCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"AddClassCommandParser -\u003e AddClassCommand : AddClassCommand(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"activate AddClassCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"AddClassCommand --\u003e AddClassCommandParser : a","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"deactivate AddClassCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"AddClassCommandParser --\u003e TimesTableParser : a","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"deactivate AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"AddClassCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"destroy AddClassCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"TimesTableParser --\u003e LogicManager : a","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e AddClassCommand : execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"activate AddClassCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"AddClassCommand -\u003e Model : addTuitionClass(t)","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"create CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"AddClassCommand -\u003e CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"activate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"CommandResult --\u003e AddClassCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"AddClassCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"deactivate AddClassCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Ongzl":71}},{"path":"docs/diagrams/AddToClassCreationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include Style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"participant \":AddToClassCommandParser\" as AddToClassCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"participant \"c:AddToClassCommand\" as AddToClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"-\u003e LogicManager: execute(\"addtoclass 1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e TimesTableParser: parseCommand(\"addtoclass 1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"create AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"activate AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"TimesTableParser \u003c-- AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"deactivate AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e AddToClassCommandParser: parse(\"1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"activate AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"create AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"AddToClassCommandParser -\u003e AddToClassCommand: AddToClassCommand(indexArray)","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"activate AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"AddToClassCommandParser \u003c-- AddToClassCommand: c","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"deactivate AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"TimesTableParser \u003c-- AddToClassCommandParser: c","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"deactivate AddToClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"LogicManager \u003c-- TimesTableParser: c","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e AddToClassCommand: execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"activate AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"ref over AddToClassCommand, Model : Match Student and Class Indices to their objects. Create updated Name list.","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e Model: setClass(classToAddTo, editedClass)","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- Model","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"LogicManager \u003c-- AddToClassCommand: result","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"deactivate AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"\u003c-- LogicManager: result","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Ongzl":55}},{"path":"docs/diagrams/AddToClassExecutionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include Style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"participant \":AddToClassCommand\" as AddToClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"participant \"classList:ObservableList\u003cTuitionClass\u003e\" as tuitionClassList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"participant \"c1:TuitionClass\" as TuitionClass MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"participant \"studentList:ObservableList\u003cStudent\u003e\" as studentList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"participant \"c2:TuitionClass\" as newTuitionClass MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"participant \"sn:StudentNameList\" as newStudentNameList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"[-\u003e AddToClassCommand: execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"activate AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e Model: getFilteredStudentList()","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"Model -\u003e studentList: Get student list","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"activate studentList","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"Model \u003c-- studentList: studentList","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- Model: studentList","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e Model: getFilteredTuitionClassList()","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"Model -\u003e tuitionClassList: Get class list","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"activate tuitionClassList","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"Model \u003c-- tuitionClassList: classList","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- Model: classList","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e AddToClassCommand ++: checkIndicesAreValid(studentList, classList)","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand --\u003e AddToClassCommand --","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e AddToClassCommand ++: createNameList(studentIndices, studentList)","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand --\u003e AddToClassCommand --: namesToAdd","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e tuitionClassList: get(classIndex)","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"activate tuitionClassList","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"tuitionClassList -\u003e TuitionClass: Get tuition class","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"activate TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"tuitionClassList \u003c-- TuitionClass: c1","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- tuitionClassList: c1","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"deactivate tuitionClassList","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e TuitionClass: getStudentList()","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"activate TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- TuitionClass: nameList","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"create newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e newStudentNameList : StudentNameList()","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"activate newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"newStudentNameList --\u003e AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"deactivate newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e newStudentNameList : addAll(nameList)","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"activate newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"newStudentNameList --\u003e AddToClassCommand : updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"deactivate newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e newStudentNameList : addAll(namesToAdd)","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"activate newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"newStudentNameList --\u003e AddToClassCommand : updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"deactivate newStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"create newTuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e newTuitionClass ++ :Create new tuition class with updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- newTuitionClass -- : c2","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e Model: setClass(c1, c2)","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- Model","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"AddToClassCommand \u003c-- CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"[\u003c-- AddToClassCommand: result","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"deactivate AddToClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Ongzl":89}},{"path":"docs/diagrams/AddToClassRef1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"group sd generate updated StudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"participant \":AddToClass\" as AddToClass LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"participant \":StudentNameList\" as updatedNameList LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"participant \"lastShownTuitionClassList:FilteredList\" as FilteredClass MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"participant \"classToAddTo:TuitionClass\" as classToAddTo MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"activate AddToClass","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e AddToClass : createNameList(...)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"activate AddToClass","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"return namesToAdd","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e FilteredClass : get(...)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"activate FilteredClass","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"return classToAddTo","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e classToAddTo : getStudentList()","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"activate classToAddTo","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"return currentStudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"create updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e updatedNameList : StudentNameList()","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"activate updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e updatedNameList : addAll(currentStudentNameList)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"activate updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e updatedNameList : addAll(namesToAdd)","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"activate updatedNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"softmagnet":45}},{"path":"docs/diagrams/AddToClassRef2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"group sd generate updated TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"participant \":AddToClass\" as AddToClass LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"participant \":EditClassDescriptor\" as descriptor LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"participant \":EditClassCommand\" as EditClassCommand \u003c\u003cclass\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"create descriptor","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e descriptor : EditClassDescriptor()","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"activate descriptor","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e descriptor : setStudentList(updatedStudentNameList)","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"activate descriptor","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e EditClassCommand : createEditedClass(classToAddTo, editClassDescriptor)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"activate EditClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"return editedClass","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"softmagnet":28}},{"path":"docs/diagrams/AddToClassSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"participant \":AddToClass\" as AddToClass LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"\u0027participant \":EditClassDescriptor\" as descripter LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"\u0027participant \"lastShownTuitionClassList:FilteredList\" as FilteredClass MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"[-\u003e LogicManager : execute(\"addtoclass 1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"LogicManager -\u003e AddToClass : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"activate AddToClass","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e ModelManager : getFilteredStudentList()","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"AddToClass \u003c-- ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e ModelManager : getFilteredClassList()","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"AddToClass \u003c-- ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e AddToClass : checkIndicesAreInRange()","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"activate AddToClass","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"ref over AddToClass, ModelManager : generate updated StudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"ref over AddToClass, ModelManager : generate updated TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"AddToClass -\u003e ModelManager : setClass(classToAdd, editedClass)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"AddToClass \u003c-- ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"softmagnet":41}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(s)","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTimesTable(timesTable)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yourally2":2,"-":36}},{"path":"docs/diagrams/BuildTimetableDayActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"title: Activity: Build TimetableDay","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Mon\";","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":":Increase row index by 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Tue\";","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":":Increase row index by 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Wed\";","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":":Increase row index by 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Thu\";","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":":Increase row index by 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Fri\";","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":":Increase row index by 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Sat\";","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":":Increase row index by 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay at\\nthe left (column index 0)\\nlabelled \"Sun\";","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":19}},{"path":"docs/diagrams/BuildTimetableHeaderActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"title: Activity: Build TimetableHeader","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableHeaderLabel at\\ntop left (row index \u003d 0 and\\ncolumn index \u003d 0) labelled \"Time Slots\";","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":":Find earliest start hour and latest end hour **\u003cU+22D4\u003e**;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"while () is ([earliest start hour\\n\u003c latest end hour])","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    if () then ([earliest start hour \u003d\u003d 23:30])","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"        :Add new TimetableHeaderTiming\\nfrom earliest start hour to \\nearliest start hour + 29 mins;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"        :Break out of while loop,\\ngo to else portion of the loop;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"        :Add new TimetableHeaderTiming\\nfrom earliest start hour to \\nearliest start hour + 30 mins;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        :Increase earliest start hour by 30mins;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    endif","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"endwhile ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":22}},{"path":"docs/diagrams/BuildTimetableOverallDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":":Clear Displayed Timetable;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableHeader **\u003cU+22D4\u003e**;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":":Build TimetableDay **\u003cU+22D4\u003e**;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"if () then ([Number of TuitionClasses \u003e 0])","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    :Build TimetableTuitionClassSlots **\u003cU+22D4\u003e**;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"endif","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":18}},{"path":"docs/diagrams/BuildTimetableTuitionClassSlotsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"title: Activity: Build TimetableTuitionClassSlots","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":":Sort tuitionClasses based on their class timings\\nstarting from the earliest;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":":Find earliest start hour and latest end hour **\u003cU+22D4\u003e**;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":":Store the earliest start hour in a variable called\\n\u0027previousTime\u0027 which will act as a pointer to the end\\nof the latest TuitionClassSlot we built up to;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":":int i \u003d 0;;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"while () is ([i \u003c TuitionClasses.size()])","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":":Get tuitionClass at index i;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    if () then ([tuitionClass at index i\u0027s\\nstart time !\u003d previousTime])","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"        :Add empty slot from\\npreviousTime to the\\nstart time of the tuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    endif","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    :Add TimetableTuitionClassSlot from start\\ntime to end time of tuitionClass at index i;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    if () then ([tuitionClass at index i + 1\\nis not on the same day as tuitionClass\\nat index i])","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        :previousTime \u003d Earliest start hour;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        :previousTime \u003d end time of tuitionClass at index i;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    endif","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":":i++;;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"endwhile ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":34}},{"path":"docs/diagrams/ClassPanelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"package ClassesUi \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"Class ClassPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"Class StudentClassPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"Class StudentClassTabCard","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"Class TuitionClassPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"Class TuitionClassCard","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"Class Student","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"Class TuitionClass","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"Class MainWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"MainWindow *--\u003e \"1\" ClassPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"ClassPanel -down-\u003e \"1\" StudentClassPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"ClassPanel -down-\u003e \"1\" TuitionClassPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"StudentClassPanel -down-\u003e \"*\" StudentClassTabCard","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"TuitionClassPanel -down-\u003e \"*\" TuitionClassCard","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"StudentClassTabCard ..\u003e Student","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"TuitionClassCard ..\u003e TuitionClass","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"ClassPanel --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"StudentClassPanel --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"TuitionClassPanel --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"StudentClassTabCard --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"TuitionClassCard --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"yourally2":35,"s7u4rt99":2}},{"path":"docs/diagrams/ClassesUiSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"skinparam ParticipantPadding -2","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"box MainWindow MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"participant \":MainWindow\" as MainWindow MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"box ClassesUi MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"participant \":ClassPanel\" as ClassPanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"participant \":Student\\nClassPanel\" as StudentClassPanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"participant \":Tuition\\nClassPanel\" as TuitionClassPanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"participant \":StudentList\\nClassTabViewCell\" as StudentListClassTabViewCell MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"participant \":Student\\nClassTabCard\" as StudentClassTabCard MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"participant \":Tuition\\nClassListViewCell\" as TuitionClassListViewCell MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"participant \":Tuition\\nClassCard\" as TuitionClassCard MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"participant \":Filtered\\nStudentList\" as FilteredStudentList MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"[-\u003e MainWindow : fillInnerParts()","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"create FilteredStudentList","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"create ClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"MainWindow -\u003e ClassPanel : new ClassPanel\\n(List\u003cStudent\u003e,\\nList\u003cTuitionClass\u003e)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"activate ClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"create StudentClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"ClassPanel -\u003e StudentClassPanel : new StudentClassPanel\\n(studentList)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"activate StudentClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"loop MODEL_COLOR_T1 for every student","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"create StudentListClassTabViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"StudentClassPanel -\u003e StudentListClassTabViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"activate StudentListClassTabViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"create StudentClassTabCard","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"StudentListClassTabViewCell -\u003e StudentClassTabCard","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"activate StudentClassTabCard","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"StudentClassTabCard --\u003e StudentListClassTabViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"deactivate StudentClassTabCard","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"StudentListClassTabViewCell --\u003e StudentClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"deactivate StudentListClassTabViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"StudentClassPanel --\u003e ClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"deactivate StudentClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"create TuitionClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"ClassPanel -\u003e TuitionClassPanel : new TuitionClassPanel\\n(studentList, tuitionClassList)","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"activate TuitionClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"loop MODEL_COLOR_T1 for every class","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"create TuitionClassListViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"TuitionClassPanel -\u003e TuitionClassListViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"activate TuitionClassListViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"create TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"TuitionClassListViewCell -\u003e TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"activate TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"opt MODEL_COLOR_T1 when clicked","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"TuitionClassCard -\u003e TuitionClassCard : onMouseClick()","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"activate TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"TuitionClassCard -\u003e TuitionClassCard : selectTuitionClass()","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"activate TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"TuitionClassCard -\u003e FilteredStudentList : filtered(student -\u003e ...)","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"activate FilteredStudentList","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"FilteredStudentList -\u003e TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"deactivate FilteredStudentList","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"deactivate TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"deactivate TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"TuitionClassCard --\u003e TuitionClassListViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"deactivate TuitionClassCard","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"TuitionClassListViewCell --\u003e TuitionClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"deactivate TuitionClassListViewCell","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"TuitionClassPanel --\u003e ClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"deactivate TuitionClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"ClassPanel --\u003e MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"deactivate ClassPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"[\u003c--MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"deactivate MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yourally2":91,"s7u4rt99":3}},{"path":"docs/diagrams/CommandObserverPattern.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"    @startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"Interface CommandObserver \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"Class UiManager","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"Class MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"Class \"{abstract}\\nCommand\" as Command LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"Class XYZCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"UiManager .right..|\u003e Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"MainWindow .right..|\u003e CommandObserver","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"XYZCommand .up..|\u003e Command LOGIC_COLOR_T4","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"Command --\u003e CommandObserver LOGIC_COLOR_T4 : \u003c Observes","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"s7u4rt99":26}},{"path":"docs/diagrams/DeleteClassRef1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"group sd get TuitionClass to delete and delete from model","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"participant \"d:DeleteClassCommand\" as DeleteClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"participant \":TimesTable\" as TimesTable MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"participant \":UniqueClassList\" as UniqueClassList MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"participant \"internalList:ObservableList\" as internalList MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"activate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand -\u003e Model : getFilteredTuitionClassList()","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"Model --\u003e DeleteClassCommand : classList","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand -\u003e DeleteClassCommand : classList.get(index)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"activate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand --\u003e DeleteClassCommand : tuitionclass","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"deactivate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand -\u003e Model : deleteTuitionClass(tuitionclass)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"Model -\u003e TimesTable : deleteTuitionClass(tuitionclass)","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"activate TimesTable","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"TimesTable -\u003e UniqueClassList : delete(tuitionclass)","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"activate UniqueClassList","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"UniqueClassList -\u003e internalList : remove(tuitionclass)","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"activate internalList","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"deactivate internalList","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"deactivate UniqueClassList","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"deactivate TimesTable","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Ongzl":46}},{"path":"docs/diagrams/DeleteClassSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"participant \":DeleteClassCommandParser\" as DeleteClassCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"participant \"d:DeleteClassCommand\" as DeleteClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"[-\u003e LogicManager : execute(\"deleteclass 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"activate LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e TimesTableParser : parseCommand(\"deleteclass 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"create DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"activate DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommandParser --\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"deactivate DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e DeleteClassCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"activate DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"create DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommandParser -\u003e DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"activate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand --\u003e DeleteClassCommandParser : d","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"deactivate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommandParser --\u003e TimesTableParser : d","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"deactivate DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"destroy DeleteClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"TimesTableParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e DeleteClassCommand : execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"activate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"ref over DeleteClassCommand, Model : get TuitionClass to delete and delete from model","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"create CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand -\u003e CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"activate CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"CommandResult --\u003e DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"DeleteClassCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"deactivate DeleteClassCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Ongzl":67}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"LogicManager -\u003e TimesTableParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"DeleteCommandParser --\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"TimesTableParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"DeleteCommandParser --\u003e TimesTableParser : d","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"DeleteCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"TimesTableParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Ongzl":11,"-":58}},{"path":"docs/diagrams/FindEarliestAndLatestHourActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"title: Activity: Find earliest start hour and latest end hour","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"if () then ([Number of TuitionClasses \u003e 0])","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"    :Iterate through the list of tuition\\nclasses and find the earliest class\\nstart timing and round down to\\nthe nearest hour;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"    :Set earliest start hour to the earliest class\\nstart timing found in the previous step or\\nthe default earliest start timing(09:00),\\nwhichever is earlier;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    :Iterate through the list of tuition\\nclasses and find the latest class\\nend timing and round up to the\\nnearest hour;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    :Set latest end hour to the latest class\\nend timing found in the previous step\\nor the default latest end timing(18:00),\\nwhichever is later;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    :Set earliest start hour\\nto default earliest start timing\\n(09:00);","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    :Set latest end hour\\nto default latest end timing\\n(18:00);","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"endif","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":17}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"participant \":FindTagCommand\" as FindTagCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"participant \"filteredStudent:FilteredList\" as FilteredStudents MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"[-\u003e LogicManager : execute(\"findtag maths\")","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"LogicManager -\u003e FindTagCommand : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"activate FindTagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"FindTagCommand -\u003e ModelManager : updateFilteredstudentList(predicate)","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"activate ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"ModelManager -\u003e FilteredStudents : setPredicate(predicate)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"activate FilteredStudents","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"softmagnet":33}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"Class TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"package UI {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenUI #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"LogicManager -right-\u003e\"1\" TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"TimesTableParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"LogicManager -right-\u003e Model","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"Command .up.\u003e Model","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"Command .right.\u003e UI : Observes \u003c","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"XYZCommand .down.\u003e UI","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"UI --\u003e Logic","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"LogicManager --\u003e UI","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"s7u4rt99":11,"Ongzl":3,"-":41}},{"path":"docs/diagrams/MainWindowDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"    @startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"\u0027IGNORE THIS FILE FIRST","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"package MainWindow \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"Class MainWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"Class HelpWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"Class ResultDisplay","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"Class PersonListPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"Class PersonCard","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"Class StatusBarFooter","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"Class CommandBox","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"package Timetable \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenTimetable #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"Class UiManager","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"Interface CommandObserver \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"UiManager .right.|\u003e Ui","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"UiManager -left-\u003e \"1\" MainWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"MainWindow .up.|\u003e CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-up---\u003e \"\\n\\n\\n1\" Timetable","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-left-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -down-|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"Timetable -right-|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"UiManager -up-\u003e Logic","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"Logic -up-\u003e \"*\" CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":74}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"Interface ReadOnlyTimestable \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"Class Timestable","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"Class ReadOnlyTimestable","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"Class UniqueStudentList","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"Class UniqueClassList","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"package TuitionClass \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"package Student \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"Timestable .up.|\u003e ReadOnlyTimestable","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"Model .left.\u003e ReadOnlyTimestable","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"ModelManager -left-\u003e \"1\" Timestable","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"Timestable *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"Timestable *--\u003e \"1\" UniqueClassList","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"UniqueClassList -right-\u003e \"~* all\" TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"ModelManager --\u003e\"~* filtered\" TuitionClass","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"softmagnet":22,"-":30}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"Class TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"HiddenOutside ..\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"TimesTableParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"TimesTableParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Ongzl":4,"-":34}},{"path":"docs/diagrams/RemoveFromClassCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"!include Style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"participant \"c:RemoveFromClassCommand\" as RemoveFromClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"participant \"classList:ObservableList\u003cTuitionClass\u003e\" as tuitionClassList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"participant \"classToRemoveFrom:TuitionClass\" as TuitionClass MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"participant \"studentList:ObservableList\u003cStudent\u003e\" as studentList MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"participant \"editedClass:TuitionClass\" as newTuitionClass MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"activate RemoveFromClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"group sd Match Student and Class Indices to their objects. Create updated Name list.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e Model: getFilteredTuitionClassList()","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"Model -\u003e tuitionClassList: Get class list","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"activate tuitionClassList","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"Model \u003c-- tuitionClassList: classList","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand \u003c-- Model: classList","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e tuitionClassList: get(classIndex)","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"activate tuitionClassList","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"tuitionClassList -\u003e TuitionClass: Get tuition class","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"activate TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"tuitionClassList \u003c-- TuitionClass: classToRemoveFrom","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"RemoveFromClassCommand \u003c-- tuitionClassList: classToRemoveFrom","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"deactivate tuitionClassList","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e TuitionClass: getStudentList()","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"activate TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand \u003c-- TuitionClass: nameList","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e Model: getFilteredStudentList()","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"Model -\u003e studentList: Get student list","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"activate studentList","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"Model \u003c-- studentList: studentList","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"deactivate","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand \u003c-- Model: studentList","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e RemoveFromClassCommand ++: checkIndicesAreValid(studentIndices, studentList)","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand --\u003e RemoveFromClassCommand --","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e RemoveFromClassCommand ++: createNewNameList(studentIndices, studentList)","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand --\u003e RemoveFromClassCommand --: newNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"create newTuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e newTuitionClass ++ :Create new tuition class with newNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"RemoveFromClassCommand \u003c-- newTuitionClass -- : editedClass","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Ongzl":6,"bernardwan":62}},{"path":"docs/diagrams/RemoveFromClassOverviewDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"!include Style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"participant \":RemoveFromClassCommandParser\" as RemoveFromClassCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"participant \"c:RemoveFromClassCommand\" as RemoveFromClassCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"-\u003e LogicManager: execute(\"removefromclass 1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"LogicManager -\u003e TimesTableParser: parseCommand(\"removefromclass 1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"create RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"TimesTableParser -\u003e RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"activate RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"TimesTableParser \u003c-- RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"deactivate RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"TimesTableParser -\u003e RemoveFromClassCommandParser: parse(\"1 1\")","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"activate RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"create RemoveFromClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommandParser -\u003e RemoveFromClassCommand: RemoveFromClassCommand(indexArray)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"activate RemoveFromClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommandParser \u003c-- RemoveFromClassCommand: c","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"deactivate RemoveFromClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"TimesTableParser \u003c-- RemoveFromClassCommandParser: c","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"deactivate RemoveFromClassCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"RemoveFromClassCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"destroy RemoveFromClassCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"LogicManager \u003c-- TimesTableParser: c","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"LogicManager -\u003e RemoveFromClassCommand: execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"activate RemoveFromClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"ref over RemoveFromClassCommand, Model : Match Student and Class Indices to their objects. Create updated Name list.","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e Model: setClass(classToRemoveFrom, editedClass)","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand \u003c-- Model","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"RemoveFromClassCommand \u003c-- CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"LogicManager \u003c-- RemoveFromClassCommand: result","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"deactivate RemoveFromClassCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"\u003c-- LogicManager: result","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Ongzl":3,"bernardwan":56}},{"path":"docs/diagrams/SortSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"participant \"mainWindow:CommandObserver\" as CommandObserver UI_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"[-\u003e LogicManager : execute(\"sort name asc\")","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"activate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"LogicManager -\u003e TimesTableParser : parseCommand(\"sort name asc\")","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"create SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"TimesTableParser -\u003e SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"activate SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"SortCommandParser --\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"TimesTableParser -\u003e SortCommandParser : parse(\"name asc\")","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"activate SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"create SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"SortCommandParser -\u003e SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"activate SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"SortCommand --\u003e SortCommandParser : s","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"deactivate SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"SortCommandParser --\u003e TimesTableParser : s","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"deactivate SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"SortCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"destroy SortCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"TimesTableParser --\u003e LogicManager : s","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"LogicManager -\u003e SortCommand : execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"activate SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"SortCommand -\u003e Model : sortStudents()","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"deactivate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"SortCommand -\u003e CommandObserver : updateView(STUDENTS)","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"activate CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"CommandObserver --\u003e SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"deactivate CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"create CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"activate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"\u0027CommandResult -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"\u0027destroy CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"deactivate SortCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"\u0027SortCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"\u0027destroy SortCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":85}},{"path":"docs/diagrams/StorageClassDiagramWTuitionClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"package Storage{","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"Class StorageManager","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"package \"TimesTable Storage\" #F4F6F6{","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"Interface TimesTableStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"Class JsonTimesTableStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"Class JsonSerializableTimesTable","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"Class JsonAdaptedTuitionClass","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"Class JsonAdaptedNok","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"StorageManager -up-\u003e \"1\" TimesTableStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"Storage -right-|\u003e TimesTableStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"JsonTimesTableStorage .up.|\u003e TimesTableStorage","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"JsonTimesTableStorage ..\u003e JsonSerializableTimesTable","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"JsonSerializableTimesTable --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"JsonSerializableTimesTable --\u003e \"*\" JsonAdaptedTuitionClass","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"JsonAdaptedStudent --\u003e \"1\" JsonAdaptedNok","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Ongzl":46}},{"path":"docs/diagrams/StudentModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"Package Student \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"Class Person","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"Class Student","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"Class Address","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"Class Email","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"Class Name","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"Class Phone","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"Class Tag","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"Class NOK","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"Person \u003c|-- Student","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"Person \u003c|-- NOK","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"Student *--\u003e \"1\" Phone","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"Student *--\u003e \"1\" Email","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"Student *--\u003e \"1\" Address","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"Student *--\u003e \"1\" NOK","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"softmagnet":36}},{"path":"docs/diagrams/StudentsDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"package StudentsUi \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"Class StudentListPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"Class StudentCard","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"Class MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *--\u003e \"1\" StudentListPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"StudentListPanel --\u003e \"*\" StudentCard","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"StudentCard .right.\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"s7u4rt99":27}},{"path":"docs/diagrams/TimetableDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"package TimetableUi \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"Class TimetablePanel","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableDay","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableEmptySlot","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableHeader","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableRegion","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableTuitionClassSlot","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableHeaderTiming","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"Class TimetableHeaderLabel","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"Class MainWindow","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *--\u003e \"1\" TimetablePanel","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel *--\u003e \"7\" TimetableDay","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel *--\u003e \"*\" TimetableEmptySlot","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel *--\u003e \"18...48\" TimetableHeaderTiming","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel *--\u003e \"1\" TimetableHeaderLabel","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel *--\u003e \"*\" TimetableTuitionClassSlot","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"TimetableHeaderLabel -down-|\u003e TimetableHeader","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"TimetableHeaderTiming -down-|\u003e TimetableHeader","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"TimetableDay --|\u003e TimetableRegion","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"TimetableEmptySlot --|\u003e TimetableRegion","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"TimetableHeader --|\u003e TimetableRegion","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"TimetableTuitionClassSlot --|\u003e TimetableRegion","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"TimetableRegion --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel .right.\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":44}},{"path":"docs/diagrams/TimetableUiDaySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"box TimetableUi MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetablePanel\" as TimetablePanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetableDay\" as TimetableDay MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"create TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"[-[hidden]-\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"group sd buildDays","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetablePanel : buildDays()","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"loop 7 times (Mon to Sun)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"create TimetableDay","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetableDay","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"activate TimetableDay","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"TimetableDay --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetableDay","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"s7u4rt99":33}},{"path":"docs/diagrams/TimetableUiHeaderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"box TimetableUi MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetablePanel\" as TimetablePanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetableHeaderLabel\" as TimetableHeaderLabel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetableHeaderTiming\" as TimetableHeaderTiming MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"create TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"[-[hidden]-\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"group sd buildHeader","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetablePanel : buildHeader(List\u003cTuitionClass\u003e)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"create TimetableHeaderLabel","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetableHeaderLabel","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"activate TimetableHeaderLabel","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"TimetableHeaderLabel --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetableHeaderLabel","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"loop For every 30 mins from start to end time of List","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"create TimetableHeaderTiming","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetableHeaderTiming","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"activate TimetableHeaderTiming","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"TimetableHeaderTiming --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetableHeaderTiming","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"s7u4rt99":40}},{"path":"docs/diagrams/TimetableUiSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"box MainWindow MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"participant \":MainWindow\" as MainWindow MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"box TimetableUi MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetablePanel\" as TimetablePanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"[-\u003e MainWindow : fillInnerParts()","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"activate MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"create TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -\u003e TimetablePanel : new TimetablePanel(List\u003cTuitionClass\u003e)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetablePanel : build()","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"ref over TimetablePanel, TimetablePanel: buildHeader","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"ref over TimetablePanel, TimetablePanel: buildDays","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"opt MODEL_COLOR_T1 has classes","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"ref over TimetablePanel, TimetablePanel: buildClasses","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel --\u003e MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"[\u003c-- MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"deactivate MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"s7u4rt99":38}},{"path":"docs/diagrams/TimetableUiSlotSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"box TimetableUi MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetablePanel\" as TimetablePanel MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetableTuitionClassSlot\" as TimetableTuitionClassSlot MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimetableEmptySlot\" as TimetableEmptySlot MODEL_COLOR_T3","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"create TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"[-[hidden]-\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"group sd buildClasses","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetablePanel : buildClasses(List\u003cTuitionClass\u003e)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"activate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"loop Until end of List","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"opt Free time in between this and previous class","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"create TimetableEmptySlot","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetableEmptySlot","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"activate TimetableEmptySlot","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"TimetableEmptySlot --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetableEmptySlot","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"create TimetableTuitionClassSlot","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel -\u003e TimetableTuitionClassSlot","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"activate TimetableTuitionClassSlot","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"TimetableTuitionClassSlot --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetableTuitionClassSlot","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"TimetablePanel --\u003e TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimetablePanel","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"s7u4rt99":43}},{"path":"docs/diagrams/TuitionClassModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"Package TuitionClass \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"Class TuitionClass","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"Class ClassName","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"Class ClassTiming","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"Class Rate","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"Class Location","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"Class StudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"TuitionClass *--\u003e \"1\" ClassName","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"TuitionClass *--\u003e \"1\" ClassTiming","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"TuitionClass *--\u003e \"1\" Rate","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"TuitionClass *--\u003e \"1\" Location","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"TuitionClass *--\u003e \"1\" StudentNameList","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"softmagnet":24}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"    @startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"Interface CommandObserver \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"\u0027Class StudentListPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"\u0027Class StudentCard","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"Enum TabName \u003c\u003cEnumeration\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"package TimetableUi \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"package ClassesUi \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"package StudentsUi \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"UiManager .right.|\u003e Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"MainWindow .right.|\u003e CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -down-\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"\u0027MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"MainWindow *-down-\u003e \"1\" TimetableUi","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-down-\u003e \"1\" ClassesUi","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"MainWindow *-down-\u003e \"1\" StudentsUi","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"\u0027StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -down-|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"\u0027StudentListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"\u0027StudentCard --|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"ClassesUi --|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"TimetableUi --|\u003e UiPart","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"StudentsUi --|\u003e UiPart","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"\u0027StudentCard .right.\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"UiManager -up-\u003e Logic","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"MainWindow -up-\u003e Logic","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"Logic ---down-\u003e CommandObserver : \u003c Observes","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"Logic .down.\u003e TabName","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"TimetableUi .up.\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"ClassesUi .up.\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"StudentsUi .up.\u003e Model","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"\u0027StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"MainWindow .right.\u003e TabName","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yourally2":3,"s7u4rt99":36,"-":47}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"participant \":TimesTableParser\" as TimesTableParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"participant \"mainWindow:CommandObserver\" as CommandObserver UI_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"[-\u003e LogicManager : execute(\"view timetable\")","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"activate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"LogicManager -\u003e TimesTableParser : parseCommand(\"view timetable\")","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"activate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"create ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"TimesTableParser -\u003e ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"activate ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"ViewCommandParser --\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"TimesTableParser -\u003e ViewCommandParser : parse(\"timetable\")","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"activate ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"create ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"activate ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"deactivate ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"ViewCommandParser --\u003e TimesTableParser : v","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"ViewCommandParser -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"destroy ViewCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"TimesTableParser --\u003e LogicManager : v","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"deactivate TimesTableParser","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"activate ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"ViewCommand -\u003e CommandObserver : updateView(TIMETABLE)","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"activate CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"CommandObserver --\u003e ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"deactivate CommandObserver","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"create CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"activate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"\u0027CommandResult -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"\u0027destroy CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"deactivate ViewCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"\u0027ViewCommand -[hidden]-\u003e TimesTableParser","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"\u0027destroy ViewCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":75}},{"path":"docs/diagrams/plantuml/FindXYZ.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"\":Logic\" -\u003e \":FindTagCommand\" : execute()","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"activate \":FindTagCommand\"","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"\":FindTagCommand\" -\u003e \":Model\" : updateFilteredPersonList(predicate)","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"activate \":Model\"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"\":Model\" -\u003e \"filteredStudents:FilteredList\" : setPredicate(predicate)","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"activate \"filteredStudents:FilteredList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"softmagnet":11}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"title: TimesTable","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F11-1/tp/branch/master/graph/badge.svg?token\u003dNNN2J2NDB2)](https://codecov.io/gh/AY2122S1-CS2103T-F11-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"![Ui](images/ClassList.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"**TimesTable is a desktop app for managing your tuition students and classes, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"While it has a GUI, it can be controlled by typing in commands using the CLI.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"If you can type fast, TimesTable can get your class management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"* If you are interested in using TimesTable, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"* If you are interested about developing TimesTable, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"# Features","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"### Student Management","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"TimesTable supports all basic contact management commands such as adding of students and their contact info, editing of contact info,","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"deleting students, finding students, sorting, etc. Furthermore, TimesTable also stores the Next-of-Kin(NOK) information of the student,","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"which is important and often used. This is displayed to the right of the student information.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"### Class Management","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"![ClassList](images/ClassList.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"TimesTable allows users to easily create and manage their classes. The Class tab shows all the information","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"about your various classes at a glance, with the student information in the sidebar on the right. Users can ","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"easily add and remove students from the various classes using the commands. The class list can also be filtered","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"to search for a  specific class.","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"### View Timetable","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"![Timetable](images/Timetable.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"TimesTable automatically generates a timetable for you based on the classes that you have added.","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"Simply head over to the Timetable tab by clicking on it or using the view command.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"* The [`Timetable`](#view-timetable) feature was inspired by a similar feature in the past project of [Pet Store Helper](https://github.com/AY1920S2-CS2103-W15-4/main) ([DG](https://ay1920s2-cs2103-w15-4.github.io/main/DeveloperGuide.html#calendar-feature)). ","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"  The implementation of the components of the Timetable feature (`TimetableTuitionClassSlot`, `TimetableDay`, `TimetableRegion` and `TimetableEmptySlot`) has been adapted from them with maximum changes to fit our app.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"  The implementation of how we built and designed ([TimetablePanel.java](https://github.com/AY2122S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/times/ui/timetabletab/TimetablePanel.java)) the entire Timetable Tab (layout, classes etc) is entirely new.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"s7u4rt99":5,"Ongzl":1,"bernardwan":26,"-":16}},{"path":"docs/team/bernardwan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"title: Bernard Wan De Yuan\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"### Project: TimesTable","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"TimesTable is a desktop address book plus planner application for tuition teachers to keep track of their students","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"and classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java,","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"and has about 17 kLoC.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"* **New Feature**: Added the `removefromclass` command to remove one or more students from an existing class.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    * Justification: A core feature to remove students that left.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    * Highlights: The implementation of this command was especially challenging as the only information that the command has","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"      are the student indices and the class index. These indices are based on the view displayed by the GUI, which is ","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"      affected by `sort` and `find` commands. Furthermore, only student names are stored in the `TuitionClass` object to reduce","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"      update cascading. As such, the correct filters and sorting must be applied to the overall student list to obtain the student","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"      names in the right order as displayed by the GUI.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    * Pull requests: [\\#117](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/117), [\\#147](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/147),","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"      [\\#260](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/260), [\\#266](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/266)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"      , [\\#301](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/301)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"      ","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"* **New Feature**: Added the `deleteclass` command to delete existing tuition classes.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    * Justification: A core feature for the user to get rid of older classes that they have finished teaching.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    * Highlights: Deleting the entire class is much simpler than removing students from a class. The most challenging aspect","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    would be to ensure that the index of the class to be deleted corresponds to the actual class list order displayed on the GUI","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"      after any `sort` or `find` commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"      * Pull requests: [\\#104](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/104), [\\#273](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/273)","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"* **New Feature**: Updated the behaviour of the `findname` and `findtag` command to support more natural use cases.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    * What it does: Changed the functionality of the two `find` commands for students to support partial matches","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"      and to allow for multi-word searches.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"      * Justification: The different types of `find` commands needs different logic as what the user will want to do varies.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"      For name searches, users would often want to search for first name together with last name. As such, the command should treat","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"      the multi-word keyword as a single sequence. For the `findtag` command, users might search for just `math` and expect to find","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"      all tags that contain math. As such, partial matching is required.","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    * Highlights: Previously, whitespace was used as a delimiter to obtain separate keywords. However, to use multi-word keywords,","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"      another delimiter, a comma, was used. Also, the logic had to be adjusted to allow for partial matches, ignoring case.","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    * Pull requests: [\\#145](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/145), [\\#159](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/104),","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"      [\\#163](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/163)","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"      ","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dtotalCommits\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbernardwan\u0026tabRepo\u003dAY2122S1-CS2103T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"    * Added some initial code for the class feature in the model - UniqueClassList and JsonAdaptedTuitionClass. ([\\#104](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/104))","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"    * Wrote additional tests for existing features to increase test coverage ([\\#260](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/260), [\\#266](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/266), [\\#273](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/273))","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    * Updated the sample data to fill out the timetable, have more students with realistic data. ([\\#145](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/145), [\\#164](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/164))","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"    * Add tests for NOK feature ([\\#66](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/66))","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"    * Added location field ([\\#58](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/58))","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"    * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"        * Added section for location field. ([\\#37](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/37))","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        * Updated behavior for find features. ([\\#145](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/145))","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        * Update UG and examples for findname and findtag. ([\\#163](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/163))","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"        * Added section for proposed feature of invoice generation. ([\\#323](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/323))","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"        * Updated NFRs section to include relevant information. ([\\#12](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/12))","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"        * Added implementation details of the `removefromclass` feature. Added UML diagrams for the command. ([\\#82](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/82), [\\#301](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/301))","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"    * Set up project website:","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"        * Set up github pages, changed settings, changed names and links from AddressBook to TimesTable","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    * Landing Page ([\\#133](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/133) , [\\#306](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/306)):","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        * Updated landing page to reflect TimesTable contents, added a section for each major feature, added pictures.","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"    * Project Demo for 1.3:","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"        * Recorded gifs and screenshots for different features.","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"    * Helped maintained issue tracker:","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        * Created new issues, added milestones and assignees, closed relevant issues.","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"    * PRs reviewed (with non-trivial review comments):  [\\#303](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/303)","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"    * Reported bugs for other teams during PE-D.  [PE-D](https://github.com/bernardwan/ped/issues)","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"  ","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bernardwan":81}},{"path":"docs/team/ongzl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"---","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"layout: page","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"title: Ong Zheng Lin\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"---","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"### Project: TimesTable","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"TimesTable is a desktop class management application for tuition teachers to keep track of their students ","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"and classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, ","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"and has about 19 kLoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"* **New feature**: Added a schedule command that filters and sort students by their class timing (V1.2)","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"  * What it does: Allows the user to filter students by day of which they are attending their class, so that user ","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    can see who he is teaching and when.","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"  * Justification:  Provides early functionality to sort students by their class timing during the early phases of ","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    the application. Provides some early work towards functions like `sort` and back-end processing of ","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    `TuitionClass` and `ClassTiming`.","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"  * Highlights: Provide a foundation for later iteration which improved the functionality of `TuitionClass` and `ClassTiming`.","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"  * Pull request: [\\#62](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/62), [\\#71](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/71)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"* **New feature**: Added the basic GUI for the `TuitionClass list` in the `classes` tab ","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    * What it does: Allows the user to view the classes currently in TimesTable.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    * Justification: Allows the user to know the details of classes currently in TimesTable, so that they can have a ","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"      better idea of their workload and schedule.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    * Highlights: Provide a foundation for later improvement and iterations in the `classes` tab.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    * Commits: [1](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/e632b2de0b0f44bc67e84de601d8632e28696bf1)","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"* **New feature** Added the backend support for `UniqueClassList` and `TuitionClass`","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    * What it does: Create support for adding and removing `TuitionClass` in `UniqueClassList` by ensuring no ","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"      overlap and proper updates from and to storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"    * Justification: Ensures that there is smooth reading of the JSON file into the model and overlapping class ","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"      timing between tuition classes are not allowed during editing and adding of class.","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    * Highlights: Provide support for `AddClassCommand`, `EditClassCommand` and safe reading of JSON file into model.","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    * Commits: [1](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/7ddac4e24d6abc6da6b669c0daf50a85601c3f5a),","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    [2](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/d344612297e2d21c988653b51a7eaa7d409cdacb),","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    [3](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/39d388fd3f0bf55dd3dcab9995d41ccf0419f0c6)  ","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"* **Code contributed**: [Reposense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003df11\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dOngzl\u0026tabRepo\u003dAY2122S1-CS2103T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    * Link the `JSON` file and `UniqueClassList` in model, allowing the model to save (Commits","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"      [1](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/7ddac4e24d6abc6da6b669c0daf50a85601c3f5a),","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"      [2](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/d344612297e2d21c988653b51a7eaa7d409cdacb),","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"      [3](https://github.com/AY2122S1-CS2103T-F11-1/tp/commit/39d388fd3f0bf55dd3dcab9995d41ccf0419f0c6))","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"    * Wrote additional tests for existing features to increase coverage (Pull request ","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"      [\\#234](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/234),","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"      [\\#259](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/259),","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"      [\\#281](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/281))","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"    * Bug fixes for features `Class size` in `classes` tab and `Student list` in `classes` tab (Pull request ","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"      [\\#106](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/106),","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"      [\\#137](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/137),","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"      [\\#246](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/246),","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"      [\\#249](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/249),","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"      [\\#251](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/251),","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"      [\\#252](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/252))","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"    * Fix old test cases which were outdated due to change in commands (Pull request [\\#115](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/115), [\\#155](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/155))","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"* **Documentation**","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"  * User Guide:","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    * Added basic documentation for features `addclass`, `deleteclass`, `addtoclass`, `editclass`, `findclass`, ","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"      `listclass` [\\#130](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/130)","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"    * Added documentation on filtering `students` [\\#281](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/281)","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"  * Developer Guide","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"    * Added use cases (Pull request ","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"      [\\#17](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/17),","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"      [\\#265](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/265))","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    * Updated `Storage` component and UML diagram [\\#290](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/290)","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    * Added sequence diagrams and implementation detail for `AddClassCommand` and edited other UML diagrams (Pull request","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"      [\\#294](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/294),","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"      [\\#295](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/295),","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"      [\\#333](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/333),","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"      [\\#339](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/339))     ","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"    * Added documentation and sequence diagrams for `DeleteClassCommand` (Pull request ","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"      [\\#320](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/320),","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"      [\\#333](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/333))","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"    * Added method for manual testing of `deleteclass`, `removefromclass`, `findtag` and `view` [\\#332](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/332)","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"* **Community**","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"  * PRs reviewed (with non-trivial review comments): (Pull request ","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"    [\\#26](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/26)","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"    [\\#40](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/40),","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"    [\\#47](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/47#partial-pull-merging),","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    [\\#53](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/53),","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"    [\\#92](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/92),","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"    [\\#152](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/152),","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"    [\\#237](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/237),","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"    [\\#253](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/253),","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"    [\\#254](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/254),","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"    [\\#260](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/260))","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"  * Reported bugs for other teams during PE-D: [ped issues github](https://github.com/Ongzl/ped/issues)","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"  ","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Ongzl":92}},{"path":"docs/team/s7u4rt99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"title: Stuart Long\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"### Project: TimesTable","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"TimesTable is a Class Management desktop application for tuition teachers to keep track of their students","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"and classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java,","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"and has about 17 kLoC.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"* **New Feature**: Added the skeleton of the tabs (Pull request: [\\#73](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/73))","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    * What it does: Added the base skeleton of the 3 tabs - `Students`, `Classes` and `Timetable`","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    * Highlights: I had to implement this before my teammates could start working on their respective tabs. This enhancement was the start of our evolution from the original AB3 into what we have today. It improved the entire UI and allowed us to have multiple tabs which users could view.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"* **New Feature**: Added the Timetable UI (Pull requests: [\\#81](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/81), [\\#97](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/97), [\\#114](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/114), [\\#136](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/136), [\\#138](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/138))","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    * What it does: Displays the tuition classes of the user in a timetable format in the `Timetable` Tab, improving the user experience.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    * Justification: The Timetable allows user to see his entire weekly schedule in a glance.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    * Highlights: This enhancement revamped the entire UI of the app. It required an in-depth analysis of all possible design patterns to upgrade the UI. The implementation was challenging as it required addition of many new components to build the entire timetable component.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    * Credits: AY19/20 S2 CS2103-W15-4 [Github](https://github.com/AY1920S2-CS2103-W15-4/main/tree/master/src/main/java/clzzz/helper/ui/calendar)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"* **New Feature**: Added the `sort` feature (Pull requests: [\\#126](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/126), [\\#129](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/129), [\\#132](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/132), [\\#240](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/240), [\\#250](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/250))","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    * What it does: Sorts the students and classes based on the specified parameter in the specified order.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    * Justification: User is able to arrange the list of students and/or classes in the order the user would like. It is also one of the basic features an address book application should have.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    * Highlights: Implementing this `sort` command was relatively easier than the Timetable UI. However, the challenging part was choosing what parameter to allow the user to sort the students or classes by. The parameters I allowed to be sorted by were the student\u0027s name and the class\u0027 timing, as I believe that these are the two parameters which the user would sort them by the most.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"* **New Feature**: Added the `view` feature using Observer Pattern (Pull request: [\\#92](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/92), [\\#126](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/126))","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"   * What it does: Opens the tab specified by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"   * Justification: This feature was crucial as it tailored our app towards users who do not like using the mouse or voice commands. The user can now switch tabs without the need of a mouse. This feature also played an important role in other commands. The commands related to TuitionClass, such as `addToClass`, `editClass` etc used this feature to switch to the `Classes` tab when they were called. Similarly, commands related to Student, such as `add`, `edit` etc used this feature to switch to the `Students` Tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"   * Highlights: Implementing this `view` command required an in-depth analysis of the possible design patterns. I decided to use the Observer pattern here. In this case, the `MainWindow` implemented the `CommandObserver` and observed the `Command`s. `CommandObserver#updateView()` switches the tab of the Observers to the tab indicated by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"* **Code contributed**: [Reposense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ds7u4rt99\u0026tabRepo\u003dAY2122S1-CS2103T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"* **Project management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    * Managed releases `v1.3.trial`, `v1.3(final)` and `v1.4` on GitHub.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    * Added the field names to all StudentCard (Pull requests [\\#68](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/68))","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    * Wrote tests to increase code coverage (Pull requests [\\#81](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/81), [\\#92](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/92), [\\#126](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/126), [\\#136](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/136), [\\#240](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/240), [\\#255](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/255), [\\#256](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/256)) ","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        * Added documentation for the `CLASS_TIMING` field, and the `sort`, `view` and `class` commands: [\\#29](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/29), [\\#146](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/146)","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        * Added command summary for `addclass`, `addtoclass`, `deleteclass`, `editclass`, `findname`, `findclass`, `findclassname`, `findtag`, `list`, `listclass`, `selectclass`, `sort`, `view`: [\\#146](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/146)","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        * Reordered User Guide to follow the order which the user uses the app to improve the reader\u0027s experience: [\\#150](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/150) ","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        * Did cosmetic tweaks to existing documentation of features `delete`, `deleteclass`, `listclass`, `editclass`, `findname`, `findtag` and `findclassname`: [\\#146](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/146)","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        * Added target user profile: [\\#25](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/25)","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        * Added UML diagrams and implementation details of the `Timetable` feature, `View` feature, `Sort` feature and `Observer` feature: [\\#94](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/94), [\\#297](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/297), [\\#310](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/310), [\\#325](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/325)","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"        * Improved class diagram of Ui and Logic Component: [\\#297](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/297), [\\#310](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/310)","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#31](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/31), [\\#36](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/36), [\\#37](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/37), [\\#56](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/56), [\\#58](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/58), [\\#62](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/62), [\\#71](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/71), [\\#147](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/147), [\\#254](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/254), [\\#258](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/258), [\\#281](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/281)","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"    * Reported bugs and suggestions for other teams during PE-D: [PE-D issues github](https://github.com/s7u4rt99/ped/issues)","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        * Recorded 17 bugs, top 10% of cohort","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"s7u4rt99":57}},{"path":"docs/team/softmagnet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"softmagnet"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"title: Lin Zhiwei\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"### Project: TimesTable","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"TimesTable is a desktop address book plus planner application for tuition teachers to keep track of their students","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"and classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java,","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"and has about 17 kLoC.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"* **New Feature**: Integrated the `TuitionClass` into the model","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    * What it does: serves as the backbone for our application as our application needs a tuition class entity in its","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"  model.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    * Justification: Same as above, it serves as backbone for our project. ","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    * Highlights: I wrote the initial setup for tuition class and added new classes to model a tuition class\u0027s ","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"attributes such as StudentNameList. I made the design decision for how we keep track of students in classes so as to","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"minimize dependency.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    * PRs: [\\#56](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/56),","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"      [\\#60](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/60),","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"      [\\#104](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/104),","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"      [\\#127](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/127),","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"      [\\#139](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/139),","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"      [\\#151](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/151),","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"      [\\#152](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/152)...","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"* **New Feature**: Added numerous basic commands related to tuition class such as `addclass`, `editclass` ","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"and `addtoclass`","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"  * What it does: adds the basic functionality of being able to interact with tuition classes such as adding a class,","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"editing a class and adding students to classes.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"  * Justification: The functionalities mentioned above are the basic features that our application should have given our","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"goal and target user.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"  * Highlights: Add commands and edit commands are relatively easier than addtoclass command which require designing ","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"a new command format. I ended deciding to use indices of currently displayed list as it is the most convenient and","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"intuitive to use.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"  * PRs: [\\#70](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/70),","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    [\\#104](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/104),","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    [\\#127](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/127),","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    [\\#160](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/160),","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    [\\#237](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/237),","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"    [\\#253](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/253),","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    [\\#263](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/263)...","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"* **New Feature/Enhancements to existing features**: greatly enhanced the search capabiltiy of our application by ","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"adding `findtag`, `findclass` and `findclassname` commands","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"  * What it does: allows user to find students by the tags they have and also find classes by class timing and class","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"name.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"  * Justification: Users should be able to have such search functionalities as mentioned above to find quickly students","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"or classes they are interested in.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"  * Highlights: Adding find commands for each different attributes have various nuances that one has to look out for and ","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"I have learnt to be more careful around these nuances.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"  * PRs: [\\#70](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/70),","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    [\\#112](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/112),","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    [\\#158](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/158)...","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"* **Code contributed**: [Reposense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabAuthor\u003dsoftmagnet\u0026tabRepo\u003dAY2122S1-CS2103T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026tabType\u003dauthorship)","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"* **Documentation**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"  * User Guide: Added some documentation for updated features","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"    * PRs: [\\#170](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/170), ","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"          [\\#254](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/254)","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"  * Developer Guide (DG): Added DG for find, addtoclass commands and updated DG for model component","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"    * PRs: [\\#88](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/88),","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"            [\\#293](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/293),","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"            [\\#308](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/308),","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"            [\\#312](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/312),","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"            [\\#326](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/326)...","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"      ","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"* **Community**","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"    * PRs reviewed (with non-trivial review comments):  [\\#232](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/232), ","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"  [\\#117](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/117),","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"  [\\#53](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/53),","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"  [\\#25](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/25),","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"  [\\#17](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/17)","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"    * Reported bugs for other teams during PE-D: [ped issues github](https://github.com/softmagnet/ped)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"softmagnet":77}},{"path":"docs/team/yourally2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"title: Kevin Chua\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"### Project: TimesTable","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"TimesTable is a Class Management desktop application for tuition teachers to keep track of their students ","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"and classes. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, ","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"and has about 17 kLoC.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"* **New feature**: Added the GUI and related behaviour for the class tab (Pull Request: [\\#103](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/103))","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"  * What it does: Allows the user to visually see which students belong to each respective class by double clicking on the class","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    or using a command `class INDEX` which is described in another section.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"  * Justification: Visuals allows the user to quickly tell which students belong to a class at a glance. ","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"  Forms the backbone of the class feature as all interactions with the class is done in this tab.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"  * Highlights: I gained a deep understanding of how the GUI functioned together with greater understanding of different design patterns.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"* **New feature**: Add `class` feature to view a specific class without double clicking (Pull Request: [\\#103](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/103))","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"  * What it does: It shows the students belonging to the specified class. Does the same thing as double clicking on a class.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"  * Justification: It allows us to perform the same functionality without using a mouse, which is important.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"  * Highlights: It was challenging to modify the GUI using a command as it meant a lot of coupling, so after discussing with Stuart we decided to follow the Observer pattern,","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    which proved to be very useful.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"* **New feature**: Overloaded `edit` and set up base for overloading `add` command to allow user to add the next-of-kin (nok) of the Student. (Pull Requests: [\\#26](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/26) [\\#47](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/47))","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"  * What it does: Allows the user to add/edit a Student\u0027s nok with name, address, and location when adding/editing a Student.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"  * Highlights: This enhancement went through several iterations as we initially implemented the","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"  `nok` command to specifically to add/edit an nok, but settled on overloading the `add` and `edit` command because it would","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"  be faster and less confusing to add an `nok` and the Student at once.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":" ","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"* **New feature**: Store next-of-kin (nok) information in a nested json (Pull Request: [\\#65](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/65))","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    * Highlights: I decided to nest the json in a key `nok` instead of having fields like `nok_name`, `nok_phone` etc so it is clearer what the fields are for. Nesting json objects proved to be more complex compared to strings.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"* **New feature**: Improved colours for the GUI overall (Pull Request: [\\#217](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/217))","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    * Highlights: Finding the right combination of colors that the entire team agreed on proved to be more difficult than expected and the colors went through several iterations before the team could decide on a color. In the process, finding the css for specific components to change was surprisingly harder than expected as the documentation for the css in javafx is often unclear.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"* **Code contributed**: [Reposense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dyourally2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyourally2\u0026tabRepo\u003dAY2122S1-CS2103T-F11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"    * Make Student and next-of-kin (NOK) inherit from Person to implement DRY principles (Pull Request [\\#30](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/30))","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    * Limit length and number of tags to prevent GUI from covering other information and added tests (Pull Request [\\#319](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/319))","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    * Wrote tests for `FindClassCommandParser`, `FindClassCommand`, `SelectClassCommand` and `SelectClassCommandParser` (Pull Request [\\#258](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/258) [\\#302](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/302))","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"    * Bug fixes for GUI, `class` command, Student list in `classes` tab and `addtoclass` command (Pull Request ","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"      [\\#248](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/248),","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"      [\\#243](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/243),","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"      [\\#304](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/304))","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"* **Documentation**","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"  * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    * Ensured entire UG flowed well (Pull Request [\\#224](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/224), [\\#303](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/303))","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"    * Added section for proposed feature of attendance marking in Payment Management feature. ([Commit](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/319/commits/effd6fbe0d67a6ed821fa16581e7ed3fd3e9cd32))","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"  * Developer Guide","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    * Added UML class diagram, Sequence Diagram for Ui component and the ClassesUi component (Pull Request [\\#291](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/291) [\\#309](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/309))","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    * Added noteworthy implementation details for `nok/` field (Pull Request [\\#292](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/292), [\\#291](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/291))","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"    * Added manual testing for `addtoclass`, `listclass`, `delete`, `sort` commands (Pull Request [\\#327](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/327) [\\#86](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/86))","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    * Added user stories (Pull Request [\\#22](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/22))","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"* **Community**","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"  * PRs reviewed (with non-trivial review comments): (Pull Request","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    [\\#256](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/256),","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"    [\\#81](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/81),","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    [\\#50](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/50),","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"    [\\#311](https://github.com/AY2122S1-CS2103T-F11-1/tp/pull/311)","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"  * Reported bugs for other teams during PE-D: [ped issues github](https://github.com/yourally2/ped/issues)","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yourally2":66}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"Create a `RemarkCommandParser` class in the `seedu.times.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Ongzl"},"content":"Create a new `Remark` in `seedu.times.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-11-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Ongzl"},"content":"Simply add the following to [`seedu.times.ui.studenttab.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"yourally2"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/timestable.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2021-11-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"yourally2":1,"Ongzl":6,"-":394}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"The `address` field in `Person` is actually an instance of the `seedu.times.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"**`invalidPersonTimesTable.json`:**","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yourally2":1,"Ongzl":1,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.times.logic.Logic`.","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"A quick look at the `seedu.times.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"yourally2"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editStudentDescriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yourally2":1,"Ongzl":2,"-":298}},{"path":"src/main/java/seedu/times/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.FileUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Ongzl":3,"-":61}},{"path":"src/main/java/seedu/times/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Ongzl":1,"-":24}},{"path":"src/main/java/seedu/times/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Config;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Version;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.ConfigUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.StringUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.Logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.LogicManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.util.SampleDataUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.JsonTimesTableStorage;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.StorageManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.TimesTableStorage;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.UserPrefsStorage;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TimesTable ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        TimesTableStorage timesTableStorage \u003d new JsonTimesTableStorage(userPrefs.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        storage \u003d new StorageManager(timesTableStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        Optional\u003cReadOnlyTimesTable\u003e timesTableOptional;","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        ReadOnlyTimesTable initialData;","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"            timesTableOptional \u003d storage.readTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"            if (!timesTableOptional.isPresent()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TimesTable\");","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"            initialData \u003d timesTableOptional.orElseGet(SampleDataUtil::getSampleTimesTable);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TimesTable\");","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"            initialData \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TimesTable\");","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"            initialData \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"yourally2"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TimesTable\");","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"yourally2"},"content":"        logger.info(\"Starting TimesTable \" + MainApp.VERSION);","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TimesTable ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":15,"s7u4rt99":1,"Ongzl":25,"-":142}},{"path":"src/main/java/seedu/times/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":62}},{"path":"src/main/java/seedu/times/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":78}},{"path":"src/main/java/seedu/times/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private static final String LOG_FILE \u003d \"timestable.log\";","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":1,"Ongzl":1,"-":110}},{"path":"src/main/java/seedu/times/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_INVALID_CLASS_DISPLAYED_INDEX \u003d \"The class index provided is invalid\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CLASHING_CLASS_TIMING \u003d \"The operation aborted because it will introduce a clash\"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"            + \" in class timing.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CLASSES_LISTED_OVERVIEW \u003d \"%1$d classes listed!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_NO_SEARCH_TERMS_ENTERED \u003d \"You have not entered any search term!\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":1,"softmagnet":6,"-":10}},{"path":"src/main/java/seedu/times/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":115}},{"path":"src/main/java/seedu/times/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core.index;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Ongzl":1,"-":53}},{"path":"src/main/java/seedu/times/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":10}},{"path":"src/main/java/seedu/times/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":1,"-":20}},{"path":"src/main/java/seedu/times/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.MainApp;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"     * Checks that {@code test} doesn\u0027t exceed {@code maxLength}. Part of argument validation.","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    public static boolean isWithinLength(String test, int maxLength) {","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        if (test.length() \u003c\u003d maxLength) {","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ongzl":2,"softmagnet":10,"-":40}},{"path":"src/main/java/seedu/times/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":1,"-":34}},{"path":"src/main/java/seedu/times/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Config;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ongzl":3,"-":20}},{"path":"src/main/java/seedu/times/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":82}},{"path":"src/main/java/seedu/times/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":3,"-":140}},{"path":"src/main/java/seedu/times/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":2,"-":66}},{"path":"src/main/java/seedu/times/logic/CommandObserver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * Interface to represent the observers of command class.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public interface CommandObserver {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the view of the observer.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * @param tabToView tab to change the view to.","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    public void updateView(TabName tabToView);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the class selected of the observer.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexOfClassToSelect class index to change the selected to.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public void updateClass(Integer indexOfClassToSelect);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * Hides the tuition class student list.","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    public void hideTuitionClassStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":26,"Ongzl":2}},{"path":"src/main/java/seedu/times/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"     * Returns the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     * @see seedu.times.model.Model#getTimesTable()","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    ReadOnlyTimesTable getTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    Path getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    void setCommandObserver(CommandObserver commandObserver);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yourally2":4,"s7u4rt99":2,"Ongzl":12,"-":38}},{"path":"src/main/java/seedu/times/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.TimesTableParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    private final TimesTableParser timesTableParser;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        timesTableParser \u003d new TimesTableParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        Command command \u003d timesTableParser.parseCommand(commandText);","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"            storage.saveTimesTable(model.getTimesTable());","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    public void setCommandObserver(CommandObserver commandObserver) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        Command.setCommandObserver(commandObserver);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        return model.getTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        return model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"    public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        return model.getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yourally2":11,"s7u4rt99":2,"Ongzl":17,"-":62}},{"path":"src/main/java/seedu/times/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NOK + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"            + PREFIX_TAG + \"Chemistry \"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"            + PREFIX_TAG + \"Sec 3 \\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NOK + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_NAME + \"Jack Doe \"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_PHONE + \"10987654 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_EMAIL + \"jackd@example.com \"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Student added: %1$s\";","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    private final Student studentToAdd;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"     * Creates an AddCommand to add the specified {@code Person}.","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"     * We always pass in a new {@code TuitionClass}, and check if it alr exists","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        studentToAdd \u003d student;","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        if (model.hasStudent(studentToAdd)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        model.addStudent(studentToAdd);","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.STUDENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, studentToAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 studentToAdd.equals(((AddCommand) other).studentToAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":10,"s7u4rt99":3,"Ongzl":22,"softmagnet":2,"bernardwan":2,"-":45}},{"path":"src/main/java/seedu/times/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TimesTable has been cleared!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        model.setTimesTable(new TimesTable());","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":1,"Ongzl":3,"-":18}},{"path":"src/main/java/seedu/times/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.CommandObserver;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    private static final ArrayList\u003cCommandObserver\u003e commandObservers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public static void setCommandObserver(CommandObserver commandObserver) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        commandObservers.add(commandObserver);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the CommandObservers by calling the updateView method for each of them.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     * @param tabToView Tab to be viewed.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public void updateView(TabName tabToView) {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        for (CommandObserver commandObserver : commandObservers) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"            commandObserver.updateView(tabToView);","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the CommandObservers by calling the updateClass command.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexOfClassToSelect index of class to be selected.","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    public void updateClass(Integer indexOfClassToSelect) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        for (CommandObserver commandObserver : commandObservers) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"            commandObserver.updateClass(indexOfClassToSelect);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the CommandObservers by calling the hideTuitionClassStudentList command.","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"    public void hideTuitionClassStudentList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        for (CommandObserver commandObserver : commandObservers) {","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"            commandObserver.hideTuitionClassStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"s7u4rt99":39,"Ongzl":5,"-":17}},{"path":"src/main/java/seedu/times/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":1,"-":70}},{"path":"src/main/java/seedu/times/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete));","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":4,"Ongzl":6,"softmagnet":1,"-":42}},{"path":"src/main/java/seedu/times/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.CollectionUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"     * @param editStudentDescriptor details to edit the person with","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        //execute update scade, change name in student name list in tuitionclass","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        editStudentDescriptor.getName().ifPresent(name -\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"            model.updateClassStudentLists(name, studentToEdit.getName());","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        });","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.STUDENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor)","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        Address updatedAddress \u003d editStudentDescriptor.getAddress().orElse(studentToEdit.getAddress());","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"        // Nok","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        Name nokName \u003d editStudentDescriptor.getNokName().orElse(studentToEdit.getNok().getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        Phone nokPhone \u003d editStudentDescriptor.getNokPhone().orElse(studentToEdit.getNok().getPhone());","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"        Email nokEmail \u003d editStudentDescriptor.getNokEmail().orElse(studentToEdit.getNok().getEmail());","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        Address nokAddress \u003d editStudentDescriptor.getNokAddress().orElse(studentToEdit.getNok().getAddress());","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"        Nok nok \u003d new Nok(nokName, nokPhone, nokEmail, nokAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail, updatedAddress, nok, updatedTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"yourally2"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"yourally2"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"yourally2"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"yourally2"},"content":"        private Name nokName;","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        private Phone nokPhone;","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"yourally2"},"content":"        private Email nokEmail;","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"yourally2"},"content":"        private Address nokAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"yourally2"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"yourally2"},"content":"            setNokName(toCopy.nokName);","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"yourally2"},"content":"            setNokPhone(toCopy.nokPhone);","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"yourally2"},"content":"            setNokEmail(toCopy.nokEmail);","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"yourally2"},"content":"            setNokAddress(toCopy.nokAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, nokAddress, nokEmail, nokName,","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"                    nokPhone);","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"Ongzl"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"Ongzl"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"softmagnet"},"content":"        //// nok","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"yourally2"},"content":"        public void setNokName(Name nokName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"yourally2"},"content":"            this.nokName \u003d nokName;","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cName\u003e getNokName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":226,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokName);","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"yourally2"},"content":"        public void setNokPhone(Phone nokPhone) {","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"yourally2"},"content":"            this.nokPhone \u003d nokPhone;","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cPhone\u003e getNokPhone() {","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokPhone);","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"yourally2"},"content":"        public void setNokEmail(Email nokEmail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"yourally2"},"content":"            this.nokEmail \u003d nokEmail;","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cEmail\u003e getNokEmail() {","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokEmail);","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":244,"author":{"gitId":"yourally2"},"content":"        public void setNokAddress(Address nokAddress) {","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"yourally2"},"content":"            this.nokAddress \u003d nokAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"yourally2"},"content":"        public Optional\u003cAddress\u003e getNokAddress() {","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"yourally2"},"content":"            return Optional.ofNullable(nokAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":250,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"yourally2"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"yourally2"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-11-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":288,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getNokAddress().equals(e.getNokAddress())","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getNokEmail().equals(e.getNokEmail())","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getNokName().equals(e.getNokName())","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getNokPhone().equals(e.getNokPhone());","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yourally2":75,"s7u4rt99":10,"Ongzl":27,"softmagnet":18,"-":166}},{"path":"src/main/java/seedu/times/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Ongzl":2,"-":17}},{"path":"src/main/java/seedu/times/logic/commands/FindNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findname\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain all of \"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: NAME [, [NAME]...]\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice, bob lim, charlie\";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public FindNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.STUDENTS);","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof FindNameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 predicate.equals(((FindNameCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":3,"Ongzl":5,"softmagnet":6,"bernardwan":1,"-":28}},{"path":"src/main/java/seedu/times/logic/commands/FindTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":" * Finds and lists all persons in address book whose list of tags contains any of the argument keywords.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findtag\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose list of tags contains any of \"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: KEYWORD [, [KEYWORD]...]\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" Maths, Physics\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    private final TagsContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public FindTagCommand(TagsContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.STUDENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof FindTagCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 predicate.equals(((FindTagCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":5,"Ongzl":5,"softmagnet":11,"-":24}},{"path":"src/main/java/seedu/times/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":2,"-":19}},{"path":"src/main/java/seedu/times/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.STUDENTS);","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":2,"Ongzl":4,"-":19}},{"path":"src/main/java/seedu/times/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts students/classes by specified\"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"            + \" parameter and order\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: PARAMETER_TO_SORT_BY DIRECTION_OF_SORT\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"            + \"Example: \" + COMMAND_WORD + \" name asc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    public static final String INVALID_SORTBY \u003d \"The parameter to sort by can only be: name or timing\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public static final String INVALID_DIRECTIONOFSORT \u003d \"The direction of sort can only be asc or desc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted %s based on %s in %s direction\";","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    // input keywords","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    public static final String SORT_BY_NAME \u003d \"name\";","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    public static final String SORT_BY_CLASS_TIMING \u003d \"timing\";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public static final String DIRECTION_OF_SORT_ASC \u003d \"asc\";","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    public static final String DIRECTION_OF_SORT_DESC \u003d \"desc\";","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public static final String STUDENT_TAB_SORTED \u003d \"students\";","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    public static final String CLASSES_TAB_SORTED \u003d \"classes\";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    private final String sortBy;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    private final String directionOfSort;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a new SortCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     * @param sortBy sortBy keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * @param directionOfSort directionOfSort keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    public SortCommand(String sortBy, String directionOfSort) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        this.sortBy \u003d sortBy;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        this.directionOfSort \u003d directionOfSort;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        // sort the StudentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        if (sortBy.equals(SORT_BY_NAME)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"            if (directionOfSort.equals(DIRECTION_OF_SORT_ASC)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"                model.sortStudents((student1, student2) -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"                        student1.getName().toString().compareTo(student2.getName().toString()));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"                model.sortStudents((student1, student2) -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"                        student2.getName().toString().compareTo(student1.getName().toString()));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"            updateView(TabName.STUDENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, STUDENT_TAB_SORTED, sortBy, directionOfSort));","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        } else if (sortBy.equals(SORT_BY_CLASS_TIMING)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"            if (directionOfSort.equals(DIRECTION_OF_SORT_ASC)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"                model.sortClasses((class1, class2) -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"                        class1.getClassTiming().compareTo(class2.getClassTiming()));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"                model.sortClasses((class1, class2) -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"                        class2.getClassTiming().compareTo(class1.getClassTiming()));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"            updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"            hideTuitionClassStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, CLASSES_TAB_SORTED, sortBy, directionOfSort));","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"            return new CommandResult(\"sort by\" + sortBy","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"                    + \" has not been implemented by the developers\");","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        } else if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"        } else if (obj instanceof SortCommand) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"            SortCommand sortCommand \u003d (SortCommand) obj;","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"            return this.directionOfSort.equals(sortCommand.directionOfSort) \u0026\u0026 this.sortBy.equals(sortCommand.sortBy);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":87,"Ongzl":4,"softmagnet":1}},{"path":"src/main/java/seedu/times/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" * Sets the UI to View the tab selected.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Switches tab to specified tab\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: TAB_TO_VIEW\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"            + \"Example: \" + COMMAND_WORD + \" timetable\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    public static final String INVALID_TAB \u003d \"This tab doesn\u0027t exists.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"            + \"You can only switch to students, timetable or classes.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    private final TabName tabToView;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a ViewCommand to view the specified tab index.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    public ViewCommand(TabName tab) {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        this.tabToView \u003d tab;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        updateView(tabToView);","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        return new CommandResult(\"Successfully switched to \" + tabToView + \" tab\",","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"                false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        } else if (obj instanceof ViewCommand) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"            ViewCommand viewCommand \u003d (ViewCommand) obj;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"            return this.tabToView \u003d\u003d viewCommand.tabToView;","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":46,"Ongzl":4}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/AddClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.OverlappingClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"public class AddClassCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"addclass\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New class added: %1$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    public static final Object MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a class to the address book.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASS_NAME + \"CLASS NAME \"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASSTIMING + \"CLASS TIMING \"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_RATE + \"RATE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_LOCATION + \"LOCATION\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"            + PREFIX_CLASS_NAME + \"Sec 4 A Maths \"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASSTIMING + \"MON 11:30-13:30 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_RATE + \"70 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_LOCATION + \"Nex Tuition Center\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"    private final TuitionClass tuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"     * Creates an AddToClassCommand to add the specified tuitionClass.","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"     * @param tuitionClass TuitionClass to be added.","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"    public AddClassCommand(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(tuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        this.tuitionClass \u003d tuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"            model.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        } catch (OverlappingClassException ice) {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_CLASHING_CLASS_TIMING);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tuitionClass));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"                || (other instanceof AddClassCommand // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 tuitionClass.equals(((AddClassCommand) other).tuitionClass));","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"s7u4rt99":2,"Ongzl":27,"softmagnet":37}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/AddToClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.MESSAGE_DUPLICATE_STUDENT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.DuplicateStudentInClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"public class AddToClassCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"addtoclass\";","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds students to a class by the index number used \"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"            + \"in the displayed class and student list in students tab.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"            + \"Indexes must be non-zero positive integers.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"            + \"Parameters: CLASS_INDEX \"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"            + \"STUDENT_INDEX...\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"            + \"1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"            + \"2 3 5 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"            + \"(adds students indexed 2, 3 and 5 to class indexed 1)\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"Successfully added students to class \";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    public static final String NO_STUDENT_INDEX_PROVIDED_MESSAGE \u003d \"No student index is provided!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    public static final String INVALID_OR_MISSING_CLASS_INDEX \u003d \"Class index is invalid or is not provided\";","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public static final int CLASS_INDEX_POSITION \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    public static final int STUDENT_INDEX_STARTING_POSITION \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    private final Index toEditClassIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cIndex\u003e studentIndices;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"     * Constructs AddToClassCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"     * @param indexArray ArrayList of index.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    public AddToClassCommand(List\u003cIndex\u003e indexArray) {","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(indexArray);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        //the first index is the index of class in filtered class list that students would be added to","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        toEditClassIndex \u003d indexArray.get(CLASS_INDEX_POSITION);","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        //the remaining indices are those of the students in filtered student list","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        studentIndices \u003d indexArray.subList(STUDENT_INDEX_STARTING_POSITION, indexArray.size());","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        //check indices are not out-of-range","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e lastShownStudentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        List\u003cTuitionClass\u003e lastShownTuitionClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        checkIndicesAreInRange(lastShownStudentList, lastShownTuitionClassList);","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        //get names to be added and class to add to","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cName\u003e namesToAdd \u003d createNameList(studentIndices, lastShownStudentList);","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"        TuitionClass classToAddTo \u003d lastShownTuitionClassList.get(toEditClassIndex.getZeroBased());","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        //get updated student list","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        StudentNameList currentStudentNameList \u003d classToAddTo.getStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        StudentNameList updatedStudentNameList \u003d new StudentNameList();","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"            updatedStudentNameList.addAll(currentStudentNameList);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"            updatedStudentNameList.addAll(namesToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"        } catch (DuplicateStudentInClassException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT + e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        //create edit class descriptor","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor editClassDescriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        editClassDescriptor.setStudentList(updatedStudentNameList);","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        //swap out old tuition class with new tuition class","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d EditClassCommand.createEditedClass(classToAddTo, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        model.setClass(classToAddTo, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        // Switches the view to the class view and updates the class","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        updateClass(toEditClassIndex.getZeroBased());","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_SUCCESS, editedClass));","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"    private ArrayList\u003cName\u003e createNameList(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e lastShownStudentList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"        studentIndices.stream().forEach(index -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"            Student student \u003d lastShownStudentList.get(index.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"            nameList.add(student.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        });","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"        return nameList;","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"    private void checkIndicesAreInRange(List\u003cStudent\u003e lastShownStudentList, List\u003cTuitionClass\u003e lastShownTuitionClass)","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"        int studentListSize \u003d lastShownStudentList.size();","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        int classListSize \u003d lastShownTuitionClass.size();","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        if (studentListSize \u003d\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        assert studentListSize \u003e 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        assert classListSize \u003e\u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        if (toEditClassIndex.getZeroBased() \u003e\u003d classListSize) {","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"        for (Index index : studentIndices) {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"            if (index.getZeroBased() \u003e\u003d studentListSize) {","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"softmagnet"},"content":"        if (!(o instanceof AddToClassCommand)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand other \u003d ((AddToClassCommand) o);","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"softmagnet"},"content":"        return other.toEditClassIndex.equals(toEditClassIndex)","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 other.studentIndices.equals(studentIndices);","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":13,"s7u4rt99":2,"Ongzl":28,"softmagnet":100,"bernardwan":1}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/DeleteClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"public class DeleteClassCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    public static final String COMMAND_WORD \u003d \"deleteclass\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Class deleted: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_MISSING_CLASS \u003d \"This class does not exist in the address book\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"            + \": Deletes the class identified by the index in class list.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeleteClassCommand\");","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"     * Create a DeleteClassCommand with the specified index.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"     * @param index The index of the class to be deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    public DeleteClassCommand(Index index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        assert index.getOneBased() \u003e 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        if (index.getOneBased() \u003e lastShownClassList.size()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"            logger.log(Level.INFO, \"There are only \" + lastShownClassList.size() + \" classes displayed\");","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        TuitionClass tuitionClass \u003d lastShownClassList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        if (!model.hasTuitionClass(tuitionClass)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"            throw new CommandException(MESSAGE_MISSING_CLASS);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"        model.deleteTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"        logger.log(Level.INFO, \"Class deleted\");","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"        hideTuitionClassStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tuitionClass));","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"                || (other instanceof DeleteClassCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"                \u0026\u0026 index.equals(((DeleteClassCommand) other).index)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":5,"Ongzl":12,"bernardwan":57}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/EditClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.CollectionUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.DuplicateClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.OverlappingClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"public class EditClassCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"editclass\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_EDIT_CLASS_SUCCESS \u003d \"Edited class: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_NO_FIELD_PROVIDED \u003d \"At least one field to editclass must be provided.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in this class:\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the class identified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"            + \"by the index number used in the displayed person list \"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"            + \"(adding or removing students is done with separate commands!)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_CLASS_NAME + \"CLASS NAME] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_CLASSTIMING + \"CLASS TIMING] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_RATE + \"RATE] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION]\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_CLASSTIMING + \"MON 13:30-15:30 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"            + PREFIX_RATE + \"100\";","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    private final Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    private final EditClassDescriptor editClassDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"     * Constructs a new EditClassCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"     * @param index of class to be edited.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"     * @param editClassDescriptor descriptor of new class.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"    public EditClassCommand(Index index, EditClassDescriptor editClassDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(index, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        this.editClassDescriptor \u003d editClassDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"     * Creates EditedClass.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"     * @param classToEdit to be editted.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"     * @param editClassDescriptor to replace.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"     * @return edited TuitionClass.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    public static TuitionClass createEditedClass(TuitionClass classToEdit, EditClassDescriptor editClassDescriptor) {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        assert classToEdit !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"        ClassName className \u003d editClassDescriptor.getClassName().orElse(classToEdit.getClassName());","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"        ClassTiming classTiming \u003d editClassDescriptor.getClassTiming().orElse(classToEdit.getClassTiming());","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"        Location location \u003d editClassDescriptor.getLocation().orElse(classToEdit.getLocation());","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        Rate rate \u003d editClassDescriptor.getRate().orElse(classToEdit.getRate());","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        StudentNameList studentNameList \u003d editClassDescriptor.getStudentList().orElse(classToEdit.getStudentList());","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        return new TuitionClass(className, classTiming, location, rate, studentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownClassList.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"        TuitionClass classToEdit \u003d lastShownClassList.get(index.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d createEditedClass(classToEdit, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"            model.setClass(classToEdit, editedClass);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"            model.updateFilteredClassList(Model.PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        } catch (OverlappingClassException | DuplicateClassException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLASS_SUCCESS, editedClass));","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"     * Stores the names of the student and the class involved in an addToClassCommand.","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"    public static class EditClassDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"        private ClassName className;","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"        private ClassTiming classTiming;","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        private Location location;","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"        private Rate rate;","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"        private StudentNameList studentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"        public EditClassDescriptor() {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"         * Constructs a copy of the given EditClassDescriptor.","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"         * @param toCopy The EditClassDescriptor to copy.","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"        public EditClassDescriptor(EditClassDescriptor toCopy) {","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"            setClassName(toCopy.className);","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"            setClassTiming(toCopy.classTiming);","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"            setRate(toCopy.rate);","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"            setStudentList(toCopy.studentNameList);","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cClassName\u003e getClassName() {","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(className);","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        public void setClassName(ClassName className) {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"            this.className \u003d className;","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cClassTiming\u003e getClassTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(classTiming);","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"        public void setClassTiming(ClassTiming classTiming) {","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"            this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cRate\u003e getRate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(rate);","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"        public void setRate(Rate rate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"            this.rate \u003d rate;","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"        public Optional\u003cStudentNameList\u003e getStudentList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"            return Optional.ofNullable(studentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"        public void setStudentList(StudentNameList studentNameList) {","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"softmagnet"},"content":"            this.studentNameList \u003d studentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"softmagnet"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"softmagnet"},"content":"            return CollectionUtil.isAnyNonNull(className, classTiming, rate, location, studentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"softmagnet"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"softmagnet"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"softmagnet"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"                return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"            if (!(other instanceof EditClassDescriptor)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"softmagnet"},"content":"                return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"softmagnet"},"content":"            EditClassDescriptor e \u003d (EditClassDescriptor) other;","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"softmagnet"},"content":"            return getClassName().equals(e.getClassName())","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getClassTiming().equals(e.getClassTiming())","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getRate().equals(e.getRate())","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 getStudentList().equals(e.getStudentList());","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"softmagnet"},"content":"        return this \u003d\u003d o","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"softmagnet"},"content":"                || ((o instanceof EditClassCommand)","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 index.equals(((EditClassCommand) o).index)","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"softmagnet"},"content":"                    \u0026\u0026 editClassDescriptor.equals(((EditClassCommand) o).editClassDescriptor));","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":2,"Ongzl":63,"softmagnet":136,"bernardwan":5}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/FindClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindClassCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findclass\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all classes whose class timing contains all of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"            + \"Valid keywords are limited to:\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"            + \"    1) 3 letter abbreviation for day of the week\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"            + \"    2) time expressed in HH:MM-HH:MM format.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"            + \"(\" + ClassTiming.MESSAGE_CONSTRAINTS + \")\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: CLASS_TIMING\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" Mon 11:30-12:30\";","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    private final ClassTimingContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"     * Constructs a new FindClassCommand.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"     * @param predicate The predicate to filter the classes by.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    public FindClassCommand(ClassTimingContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        hideTuitionClassStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"                String.format(Messages.MESSAGE_CLASSES_LISTED_OVERVIEW, model.getFilteredTuitionClassList().size()));","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof FindClassCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 predicate.equals(((FindClassCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":6,"s7u4rt99":5,"Ongzl":10,"softmagnet":36}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/FindClassNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"public class FindClassNameCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"findclassname\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all classes whose class name contains all of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: CLASS_NAME [, [CLASS_NAME]...]\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"            + \"Example: \" + COMMAND_WORD + \" sec4 physics\";","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    private final ClassNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public FindClassNameCommand(ClassNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        hideTuitionClassStudentList();","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"                String.format(Messages.MESSAGE_CLASSES_LISTED_OVERVIEW, model.getFilteredTuitionClassList().size()));","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        if (!(o instanceof FindClassNameCommand)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        return ((FindClassNameCommand) o).predicate.equals(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"s7u4rt99":5,"Ongzl":10,"softmagnet":37}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/ListClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.Model.PREDICATE_SHOW_ALL_CLASS;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class ListClassCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final String COMMAND_WORD \u003d \"listclass\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all classes\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"        model.updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"s7u4rt99":1,"Ongzl":8,"softmagnet":15}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/RemoveFromClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"public class RemoveFromClassCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    public static final String COMMAND_WORD \u003d \"removefromclass\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes students from a class by the index\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"            + \" number used \"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"            + \"in the displayed class and student list in classes tab.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"            + \"Parameters: CLASS_INDEX \"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"            + \"STUDENT_INDEX... (Indexes must be non-zero positive integers)\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"            + \"2 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"            + \"3 4 5 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"            + \"(removes students indexed 3, 4 and 5 from class indexed 2)\";","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    public static final String NO_STUDENT_INDEX_PROVIDED_MESSAGE \u003d \"No student index is provided!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    public static final String MESSAGE_REMOVE_SUCCESS \u003d \"Successfully removed students from class \";","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    private static Logger logger \u003d Logger.getLogger(\"RemoveFromClassCommand\");","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    private final Index toEditClassIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    private final List\u003cIndex\u003e studentIndicesToRemove;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a remove from class command.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"     * @param indexArray Array with index of class to remove from and index of students.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"    public RemoveFromClassCommand(List\u003cIndex\u003e indexArray) {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(indexArray);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"        //the first index is the index of class in filtered class list that students would be removed from","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        toEditClassIndex \u003d indexArray.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"        assert toEditClassIndex.getOneBased() \u003e 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        //the remaining indices are those of the students in filtered student list","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        studentIndicesToRemove \u003d indexArray.subList(1, indexArray.size());","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        //get class to remove from","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"        List\u003cTuitionClass\u003e lastShownClassList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"        if (lastShownClassList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"            logger.log(Level.INFO, \"There are no classes displayed.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"        } else if (toEditClassIndex.getOneBased() \u003e lastShownClassList.size()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"            logger.log(Level.INFO, \"There are only \" + lastShownClassList.size() + \" classes displayed.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"        TuitionClass classToRemoveFrom \u003d lastShownClassList.get(toEditClassIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        //get names to be removed","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        StudentNameList currentStudentNameList \u003d classToRemoveFrom.getStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"        List\u003cStudent\u003e filteredStudentList \u003d model.getFilteredStudentList().filtered(student -\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"                classToRemoveFrom.containsStudent(student.getName()));","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"        checkIndicesAreValid(studentIndicesToRemove, filteredStudentList);","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cName\u003e namesToRemove \u003d createNewNameList(studentIndicesToRemove, filteredStudentList);","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"        //get updated student list","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        StudentNameList updatedStudentNameList \u003d new StudentNameList();","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"        updatedStudentNameList.addAll(currentStudentNameList);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"        updatedStudentNameList.removeAll(namesToRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        //create edit class descriptor","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"        EditClassCommand.EditClassDescriptor editClassDescriptor \u003d new EditClassCommand.EditClassDescriptor();","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        editClassDescriptor.setStudentList(updatedStudentNameList);","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"        //swap out old tuition class with new tuition class","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"        TuitionClass editedClass \u003d EditClassCommand.createEditedClass(classToRemoveFrom, editClassDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"        model.setClass(classToRemoveFrom, editedClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        // Switches the view to the class view and updates the class","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        updateClass(toEditClassIndex.getZeroBased());","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        logger.log(Level.INFO, \"Class name list updated.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_SUCCESS, editedClass));","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"    private ArrayList\u003cName\u003e createNewNameList(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cName\u003e newNameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"        studentIndices.stream().forEach(index -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"            Name name \u003d studentList.get(index.getZeroBased()).getName();","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"            newNameList.add(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"        return newNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"    private void checkIndicesAreValid(List\u003cIndex\u003e studentIndices, List\u003cStudent\u003e studentList)","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"        int size \u003d studentList.size();","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"        for (Index index : studentIndices) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"            if (index.getZeroBased() \u003e\u003d size) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"                logger.log(Level.INFO, \"There are only \" + size + \" students displayed.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"        logger.log(Level.INFO, \"All indices are valid.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"            return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"        if (!(o instanceof RemoveFromClassCommand)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand other \u003d ((RemoveFromClassCommand) o);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"        return other.toEditClassIndex.equals(toEditClassIndex)","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"bernardwan"},"content":"                \u0026\u0026 other.studentIndicesToRemove.equals(studentIndicesToRemove);","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yourally2":4,"s7u4rt99":8,"Ongzl":17,"softmagnet":3,"bernardwan":106}},{"path":"src/main/java/seedu/times/logic/commands/classcommands/SelectClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"public class SelectClassCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    public static final String COMMAND_WORD \u003d \"class\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Selects the appropriate class\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"            + \"Parameters: CLASS_INDEX\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    public static final String INVALID_TAB \u003d \"This class doesn\u0027t exists.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"            + \"You can only switch to indexes shown in the Classlist.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    public SelectClassCommand(Index targetIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        List\u003cTuitionClass\u003e lastShownList \u003d model.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        TuitionClass tuitionClass \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        // Switches the view to the class view and updates the class","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        updateView(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        updateClass(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        return new CommandResult(\"Viewing class \" + tuitionClass.toString(),","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"                false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"            return true;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        if (!(o instanceof SelectClassCommand)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"            return false;","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        SelectClassCommand other \u003d ((SelectClassCommand) o);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        return other.targetIndex.equals(targetIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"yourally2":42,"s7u4rt99":4,"Ongzl":14}},{"path":"src/main/java/seedu/times/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Ongzl":1,"-":16}},{"path":"src/main/java/seedu/times/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        String argsBeforeNok \u003d args;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        String argsAfterNok \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        if (args.contains(\"nok/\")) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"            String[] splitArgs \u003d args.split(\"nok/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"            if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"            argsBeforeNok \u003d splitArgs[0];","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"            argsAfterNok \u003d splitArgs[1];","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"        Student student \u003d parseStudent(argsBeforeNok);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        Nok nok \u003d parseNok(argsAfterNok);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        student.setNok(nok);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    private Student parseStudent(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        return new Student(name, phone, email, address, null , tagList);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"    private Nok parseNok(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        return new Nok(","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()),","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()),","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()),","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"                ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get())","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        );","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yourally2":30,"s7u4rt99":3,"Ongzl":32,"softmagnet":2,"-":23}},{"path":"src/main/java/seedu/times/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Ongzl":1,"-":59}},{"path":"src/main/java/seedu/times/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Ongzl":1,"-":147}},{"path":"src/main/java/seedu/times/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    public static final Prefix PREFIX_CLASS_NAME \u003d new Prefix(\"cn/\");","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final Prefix PREFIX_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    public static final Prefix PREFIX_NOK \u003d new Prefix(\"nok/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public static final Prefix PREFIX_CLASSTIMING \u003d new Prefix(\"ct/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":1,"Ongzl":1,"softmagnet":2,"bernardwan":1,"-":14}},{"path":"src/main/java/seedu/times/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Ongzl":5,"-":24}},{"path":"src/main/java/seedu/times/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import static seedu.times.logic.parser.ParserUtil.checkTagsAreValid;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.EditCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        // Tokenize twice, once for everything before nok and everything after it","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        String argsBeforeNok \u003d args;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        String argsAfterNok \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        if (args.contains(\"nok/\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"            String[] splitArgs \u003d args.split(\"nok/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"            if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"            argsBeforeNok \u003d splitArgs[0];","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"            argsAfterNok \u003d splitArgs[1];","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimapBeforeNok \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"                        .tokenize(argsBeforeNok, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        ArgumentMultimap argMultimapAfterNok \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                ArgumentTokenizer.tokenize(argsAfterNok, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        Index index;","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"            index \u003d ParserUtil.parseIndex(argMultimapBeforeNok.getPreamble());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        EditCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        // For before nok","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimapBeforeNok.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimapBeforeNok.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimapBeforeNok.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        if (argMultimapBeforeNok.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"                    .setAddress(ParserUtil.parseAddress(argMultimapBeforeNok.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        parseTagsForEdit(argMultimapBeforeNok.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        // For after nok","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor.setNokName(ParserUtil.parseName(argMultimapAfterNok.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor.setNokPhone(ParserUtil.parsePhone(argMultimapAfterNok.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor.setNokEmail(ParserUtil.parseEmail(argMultimapAfterNok.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        if (argMultimapAfterNok.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"            editStudentDescriptor","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"                    .setNokAddress(ParserUtil.parseAddress(argMultimapAfterNok.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        checkTagsAreValid(tags);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yourally2":52,"s7u4rt99":5,"Ongzl":12,"-":51}},{"path":"src/main/java/seedu/times/logic/parser/FindNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.FIND_REGEX_WITH_COMMA_DELIMITER;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.getSearchTermList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":" * Parses input arguments and creates a new FindNameCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommandParser implements Parser\u003cFindNameCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNameCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"     * and returns a FindNameCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public FindNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        return new FindNameCommand(new NameContainsKeywordsPredicate(getSearchTermList(trimmedArgs,","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"                FIND_REGEX_WITH_COMMA_DELIMITER)));","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Ongzl":7,"softmagnet":9,"-":16}},{"path":"src/main/java/seedu/times/logic/parser/FindTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.FIND_REGEX_WITH_COMMA_DELIMITER;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.getSearchTermList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindTagCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":" * Parses input arguments and creates a new {@code FindTagCommand} object","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommandParser implements Parser\u003cFindTagCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"     * and returns a FindTagCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    public FindTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        return new FindTagCommand(new TagsContainsKeywordsPredicate(getSearchTermList(trimmedArgs,","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"                FIND_REGEX_WITH_COMMA_DELIMITER)));","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Ongzl":7,"softmagnet":9,"-":16}},{"path":"src/main/java/seedu/times/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Ongzl":3,"-":13}},{"path":"src/main/java/seedu/times/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MAX_TAG_LENGTH;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MAX_TAG_NUMBER;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MESSAGE_CONSTRAINTS_TOO_LONG;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MESSAGE_CONSTRAINTS_TOO_MANY;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.StringUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    public static final String FIND_REGEX_WITH_COMMA_DELIMITER \u003d \",\\\\s*\";","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"     * Parses a {@code String classTiming} into an {@code ClassTiming}.","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if the given {@code classTiming} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"    public static ClassTiming parseClassTiming(String classTiming) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(classTiming);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"        String trimmedClassTiming \u003d classTiming.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"        if (!ClassTiming.isValidClassTiming(trimmedClassTiming)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(ClassTiming.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"        return new ClassTiming(trimmedClassTiming);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"        String trimmedAddress \u003d location.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"        if (!Location.isValidLocation(trimmedAddress)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"        return new Location(trimmedAddress);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"yourally2"},"content":"     * Parses a {@code String nok} into an {@code Nok}.","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"yourally2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"yourally2"},"content":"     * @throws ParseException if the given {@code nok} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"yourally2"},"content":"    public static Address parseNok(String nok) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"yourally2"},"content":"        requireNonNull(nok);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"yourally2"},"content":"        String trimmedAddress \u003d nok.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"softmagnet"},"content":"     * Parses a {@code String rate} into a {@code Rate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"softmagnet"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"softmagnet"},"content":"     * @throws ParseException if the given {@code rate} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"    public static Rate parseRate(String rate) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(rate);","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"softmagnet"},"content":"        String trimmedRate \u003d rate.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"softmagnet"},"content":"        if (!Rate.isValidRate(trimmedRate)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"        return new Rate(trimmedRate);","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":192,"author":{"gitId":"yourally2"},"content":"        checkTagsAreValid(tags);","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"yourally2"},"content":"     * Checks whether the tags are within the constraints.","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"yourally2"},"content":"     * @param tags The tags to check.","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"yourally2"},"content":"     * @throws ParseException if the given tags are invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":206,"author":{"gitId":"yourally2"},"content":"    public static void checkTagsAreValid(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-11-07"},{"lineNumber":207,"author":{"gitId":"yourally2"},"content":"        if (tags.size() \u003e MAX_TAG_NUMBER) {","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS_TOO_MANY);","lastModifiedDate":"2021-11-07"},{"lineNumber":209,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":210,"author":{"gitId":"yourally2"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"yourally2"},"content":"            if (tagName.length() \u003e MAX_TAG_LENGTH) {","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"yourally2"},"content":"                throw new ParseException(MESSAGE_CONSTRAINTS_TOO_LONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":213,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":214,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"softmagnet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"softmagnet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"softmagnet"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"softmagnet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"softmagnet"},"content":"     * Parses a {@code String className} into a {@code ClassName}.","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"softmagnet"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"softmagnet"},"content":"     * @throws ParseException if the given {@code className} is invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"softmagnet"},"content":"    public static ClassName parseClassName(String className) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(className);","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"softmagnet"},"content":"        String trimmedClassName \u003d className.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"softmagnet"},"content":"        if (!ClassName.isValidClassName(trimmedClassName)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(ClassName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"softmagnet"},"content":"        return new ClassName(trimmedClassName);","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"softmagnet"},"content":"     * Returns a list of search terms to be used for filtering student or class list.","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"softmagnet"},"content":"     * @throws ParseException if given {@code trimmedArgs} does not have any search term","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"softmagnet"},"content":"    public static List\u003cString\u003e getSearchTermList(String trimmedArgs, String regex) throws ParseException {","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"softmagnet"},"content":"        String[] searchTerms \u003d trimmedArgs.split(regex);","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"softmagnet"},"content":"        if (searchTerms.length \u003d\u003d 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(Messages.MESSAGE_NO_SEARCH_TERMS_ENTERED);","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":250,"author":{"gitId":"softmagnet"},"content":"        return Arrays.asList(searchTerms);","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yourally2":36,"s7u4rt99":15,"Ongzl":16,"softmagnet":55,"bernardwan":15,"-":115}},{"path":"src/main/java/seedu/times/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Ongzl":1,"-":38}},{"path":"src/main/java/seedu/times/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.SortCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private final String[] validSortByKeywords \u003d new String[]{\"name\", \"timing\"};","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    private final String[] validDirectionOfSortKeywords \u003d new String[]{\"asc\", \"desc\"};","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        if (splitArgs.length !\u003d 2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        String sortBy \u003d splitArgs[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        checkSortBy(sortBy);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        // sort by asc or desc","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        String directionOfSort \u003d splitArgs[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        checkDirectionOfSort(directionOfSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        return new SortCommand(sortBy, directionOfSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"     * Checks the string to see if it is a valid sortBy keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"     * @param sortBy String to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException If it is not a valid sortBy keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    public void checkSortBy(String sortBy) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(sortBy);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"        for (String validSortByKeyword : validSortByKeywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"            if (sortBy.equals(validSortByKeyword)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"                return;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_SORTBY));","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * Checks the string to see if its a valid direction of sort keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * @param directionOfSort String to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException If it is not a valid directionOfSort keyword.","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"    public void checkDirectionOfSort(String directionOfSort) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(directionOfSort);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        for (String validDirectionOfSortKeyword : validDirectionOfSortKeywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"            if (directionOfSort.equals(validDirectionOfSortKeyword)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"                return;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_DIRECTIONOFSORT));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":73,"Ongzl":4}},{"path":"src/main/java/seedu/times/logic/parser/TimesTableParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.EditCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ExitCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindTagCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.HelpCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ListCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.SortCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ViewCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddToClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.DeleteClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.EditClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.FindClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.FindClassNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.ListClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.RemoveFromClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.SelectClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.AddClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.AddToClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.DeleteClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.EditClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.FindClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.FindClassNameCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.RemoveFromClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.SelectClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"public class TimesTableParser {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        //// student commands","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        case FindNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"            return new FindNameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        case FindTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"            return new FindTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        //// tuition class commands","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        case ListClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"            return new ListClassCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"        case AddClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"            return new AddClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        case AddToClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"            return new AddToClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        case RemoveFromClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"            return new RemoveFromClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        case EditClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"            return new EditClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"        case SelectClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"            return new SelectClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"        case DeleteClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"            return new DeleteClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        case FindClassCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"            return new FindClassCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"        case FindClassNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"            return new FindClassNameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        //// general application command","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":4,"s7u4rt99":6,"Ongzl":33,"softmagnet":37,"bernardwan":6,"-":51}},{"path":"src/main/java/seedu/times/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ViewCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" * Parses input command and returns ViewCommand.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * and returns an ViewCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        String tabToView \u003d splitArgs[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        TabName tab;","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        switch (tabToView) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        case \"students\":","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"            tab \u003d TabName.STUDENTS;","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        case \"classes\":","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"            tab \u003d TabName.CLASSES;","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        case \"timetable\":","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"            tab \u003d TabName.TIMETABLE;","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"        return new ViewCommand(tab);","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":49,"Ongzl":5}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/AddClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"public class AddClassCommandParser implements Parser\u003cAddClassCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    public AddClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(args, PREFIX_CLASS_NAME, PREFIX_RATE, PREFIX_CLASSTIMING, PREFIX_LOCATION);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLASS_NAME, PREFIX_RATE, PREFIX_CLASSTIMING, PREFIX_LOCATION)","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        ClassName className \u003d ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS_NAME).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        Rate rate \u003d ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        ClassTiming classTiming \u003d ParserUtil.parseClassTiming(argMultimap.getValue(PREFIX_CLASSTIMING).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        return new AddClassCommand(new TuitionClass(className, classTiming, location, rate, new StudentNameList()));","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":20,"softmagnet":24}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/AddToClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddToClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":" * Parses input arguments and creates a new AddToClassCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"public class AddToClassCommandParser implements Parser\u003cAddToClassCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    public AddToClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        String[] argsArray \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        List\u003cIndex\u003e indexArray \u003d mapToIndexArray(argsArray);","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        return new AddToClassCommand(indexArray);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    private List\u003cIndex\u003e mapToIndexArray(String[] str) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        for (int i \u003d 0; i \u003c str.length; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"                Index currentIndex \u003d ParserUtil.parseIndex(str[i]);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"                indexArray.add(currentIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                        AddToClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        if (indexArray.size() \u003c 2) {","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(AddToClassCommand.NO_STUDENT_INDEX_PROVIDED_MESSAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        return copyWithoutDuplicateExcludeFirst(indexArray);","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    private List\u003cIndex\u003e copyWithoutDuplicateExcludeFirst(List\u003cIndex\u003e indexArray) {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        int size \u003d indexArray.size();","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        assert size \u003e\u003d 2 : \"Should have thrown ParseException.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        List\u003cIndex\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        for (int i \u003d 1; i \u003c size; i++) {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"            Index currentIndex \u003d indexArray.get(i);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"            if (!res.contains(currentIndex)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"                res.add(currentIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        res.add(0, indexArray.get(0));","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        return res;","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Ongzl":13,"softmagnet":56}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/DeleteClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.DeleteClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":" * Parses input arguments and creates a new DeleteClassCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"public class DeleteClassCommandParser implements Parser\u003cDeleteClassCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public DeleteClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"            return new DeleteClassCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Ongzl":7,"bernardwan":20}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/EditClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.EditClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"public class EditClassCommandParser implements Parser\u003cEditClassCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    public EditClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"                ArgumentTokenizer","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                        .tokenize(args, PREFIX_CLASS_NAME, PREFIX_CLASSTIMING, PREFIX_RATE, PREFIX_LOCATION);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"                    EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor editClassDescriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_CLASS_NAME).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setClassName(ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS_NAME).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_CLASSTIMING).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setClassTiming(ParserUtil","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"                    .parseClassTiming(argMultimap.getValue(PREFIX_CLASSTIMING).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_RATE).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setRate(ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"            editClassDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        if (!editClassDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(EditClassCommand.MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        return new EditClassCommand(index, editClassDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Ongzl":17,"softmagnet":42}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/FindClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.FindClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class FindClassCommandParser implements Parser\u003cFindClassCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    private static final String VALIDATION_REGEX_DAY \u003d \"(?i)(MON|TUE|WED|THU|FRI|SAT|SUN){1}\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    private static final String VALIDATION_REGEX_TIME \u003d \"([01][0-9]|2[0-3]):[03]0-(([01][0-9]|2[0-3])\"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            + \":[03]0|23:59){1}\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    private static final String FIND_REGEX \u003d \"\\\\s+\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"     * Returns true if all keywords contained in {@code classTimingKeywords} is a three-letter abbreviation","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"     * for day of the week or in a valid time format, HH:MM-HH:MM.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"     * @param classTimingKeywords Array of string keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    private static boolean isAllValidKeyword(String[] classTimingKeywords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        return Arrays.stream(classTimingKeywords).allMatch(keyword -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"            return keyword.matches(VALIDATION_REGEX_TIME) || keyword.matches(VALIDATION_REGEX_DAY);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public FindClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        String[] classTimingKeywords \u003d trimmedArgs.split(FIND_REGEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        if (!isAllValidKeyword(classTimingKeywords)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        return new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(classTimingKeywords)));","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":2,"Ongzl":21,"softmagnet":24}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/FindClassNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.FIND_REGEX_WITH_COMMA_DELIMITER;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.getSearchTermList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.FindClassNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class FindClassNameCommandParser implements Parser\u003cFindClassNameCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public FindClassNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        return new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(getSearchTermList(trimmedArgs,","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"                FIND_REGEX_WITH_COMMA_DELIMITER)));","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Ongzl":9,"softmagnet":16}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/RemoveFromClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.AddToClassCommand.CLASS_INDEX_POSITION;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddToClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.RemoveFromClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":" * Parses input arguments and creates a new RemoveFromClassCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"public class RemoveFromClassCommandParser implements Parser\u003cRemoveFromClassCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    public RemoveFromClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        String[] argsArray \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d mapToIndex(argsArray);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"        return new RemoveFromClassCommand(indexArray);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    private ArrayList\u003cIndex\u003e mapToIndex(String[] str) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        for (int i \u003d 0; i \u003c str.length; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"                indexArray.add(ParserUtil.parseIndex(str[i]));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"                String errorMessage \u003d i \u003d\u003d CLASS_INDEX_POSITION","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"                        ? AddToClassCommand.INVALID_OR_MISSING_CLASS_INDEX","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                        : MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"                        RemoveFromClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        if (indexArray.size() \u003c 2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"            throw new ParseException(RemoveFromClassCommand.NO_STUDENT_INDEX_PROVIDED_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        return indexArray;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Ongzl":16,"bernardwan":34}},{"path":"src/main/java/seedu/times/logic/parser/classcommandparsers/SelectClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommandparsers;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.EditClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.SelectClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"public class SelectClassCommandParser implements Parser\u003cSelectClassCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public SelectClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        if (splitArgs.length \u003e 1) {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        Index indexOfClassToView;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"            indexOfClassToView \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        } catch (ParseException | ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_CLASS_DISPLAYED_INDEX,","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"                    EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        return new SelectClassCommand(indexOfClassToView);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"yourally2":31,"Ongzl":9}},{"path":"src/main/java/seedu/times/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Ongzl":2,"-":15}},{"path":"src/main/java/seedu/times/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    Predicate\u003cTuitionClass\u003e PREDICATE_SHOW_ALL_CLASS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    Path getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"    void setTimesTableFilePath(Path timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"     * Replaces address book data with the data in {@code timestable}.","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    void setTimesTable(ReadOnlyTimesTable timesTable);","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"    /** Returns the TimesTable */","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    ReadOnlyTimesTable getTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"     * The person must exist in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"     * {@code person} must not already exist in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"     * Returns true if a class with the same identity as {@code TuitionClass} exists in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    boolean hasTuitionClass(TuitionClass tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"     * Adds the given tuition class.","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"     * {@code TuitionClass} must not already exist in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    void addTuitionClass(TuitionClass tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"     * Deletes the given tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"     * The class must exist in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"    void deleteTuitionClass(TuitionClass target);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"     * {@code target} must exist in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the TimesTable.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"    void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate);","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"    /** Returns an unmodifiable view of the filtered tuition class list */","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"    ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList();","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"     * Replaces the given class {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"     * The Class identity of {@code editedClass} must not be the same as another existing class in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"    void setClass(TuitionClass target, TuitionClass editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"     * Replaces the filteredTuitionClass with the classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"    void setClasses(List\u003cTuitionClass\u003e classes);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"     * Replaces the filtered student list with the classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"    void setStudents(List\u003cStudent\u003e students);","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"    /** Executes update cascade after change of student name for {@code StudentNameList}. */","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"    void updateClassStudentLists(Name newName, Name oldName);","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"    void sortStudents(Comparator\u003c? super Student\u003e c);","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"s7u4rt99"},"content":"    void sortClasses(Comparator\u003c? super TuitionClass\u003e c);","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yourally2":28,"s7u4rt99":20,"Ongzl":11,"softmagnet":16,"bernardwan":5,"-":62}},{"path":"src/main/java/seedu/times/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":" * Represents the in-memory model of the timestable data.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    private final TimesTable timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    private FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    private FilteredList\u003cTuitionClass\u003e filteredTuitionClass;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"     * Initializes a ModelManager with the given timestable and userPrefs.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"    public ModelManager(ReadOnlyTimesTable timestable, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(timestable, userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        logger.fine(\"Initializing with timestable: \" + timestable + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        this.timesTable \u003d new TimesTable(timestable);","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.timesTable.getStudentList());","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        filteredTuitionClass \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"                new FilteredList\u003c\u003e(this.timesTable.getTuitionClassList());","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        this(new TimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"        return userPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"    public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        return userPrefs.getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"    public void setTimesTableFilePath(Path timesTableFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        requireNonNull(timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        userPrefs.setTimesTableFilePath(timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TimesTable \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"    public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        return timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"    public void setTimesTable(ReadOnlyTimesTable timestable) {","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"        this.timesTable.resetData(timestable);","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        return timesTable.hasPerson(student);","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"        requireNonNull(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"        return timesTable.hasTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        timesTable.removePerson(target);","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        timesTable.addStudent(student);","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"    public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"yourally2"},"content":"        timesTable.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"        updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"    public void deleteTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"yourally2"},"content":"        timesTable.deleteTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"yourally2"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"        timesTable.setPerson(target, editedStudent);","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"yourally2"},"content":"     * {@code versionedTimesTable}","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"yourally2"},"content":"        return filteredStudents;","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"s7u4rt99"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"    public void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"        filteredTuitionClass.setPredicate(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"    public void updateClassStudentLists(Name newName, Name oldName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(newName, oldName);","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"        if (newName.equals(oldName)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"            return;","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"yourally2"},"content":"        timesTable.updateClassStudentLists(newName, oldName);","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"    public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"        return filteredTuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"softmagnet"},"content":"    public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"yourally2"},"content":"        timesTable.setClass(target, editedClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"        updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"    public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"yourally2"},"content":"        timesTable.setClasses(classes);","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"    public void setStudents(List\u003cStudent\u003e studentsList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"yourally2"},"content":"        timesTable.setStudents(studentsList);","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"    public void sortStudents(Comparator\u003c? super Student\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"        ArrayList\u003cStudent\u003e studentsToSort \u003d new ArrayList\u003c\u003e(getFilteredStudentList());","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"        studentsToSort.sort(c);","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"        setStudents(studentsToSort);","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"    public void sortClasses(Comparator\u003c? super TuitionClass\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"        updateFilteredClassList(PREDICATE_SHOW_ALL_CLASS);","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"        ArrayList\u003cTuitionClass\u003e classesToSort \u003d new ArrayList\u003c\u003e(getFilteredTuitionClassList());","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"        classesToSort.sort(c);","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"        setClasses(classesToSort);","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"yourally2"},"content":"        return timesTable.equals(other.timesTable)","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":227,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents)","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 filteredTuitionClass.equals(other.filteredTuitionClass);","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":51,"s7u4rt99":31,"Ongzl":20,"softmagnet":21,"bernardwan":4,"-":104}},{"path":"src/main/java/seedu/times/model/ReadOnlyTimesTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"public interface ReadOnlyTimesTable {","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"     * Returns an unmodifiable view of the class list.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"     * This list will not contain any duplicate classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"     * @return","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    ObservableList\u003cTuitionClass\u003e getTuitionClassList();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":2,"Ongzl":3,"softmagnet":7,"-":13}},{"path":"src/main/java/seedu/times/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    Path getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yourally2":1,"Ongzl":2,"-":13}},{"path":"src/main/java/seedu/times/model/TimesTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.UniqueStudentList;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.UniqueClassList;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"public class TimesTable implements ReadOnlyTimesTable {","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    private final UniqueClassList classes;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        classes \u003d new UniqueClassList();","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    public TimesTable() {}","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"     * Creates a TimesTable using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    public TimesTable(ReadOnlyTimesTable toBeCopied) {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        this.students.setPersons(students);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"    public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"        this.classes.setClasses(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"     * Resets the existing data of this {@code TimesTable} with {@code newData}.","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    public void resetData(ReadOnlyTimesTable newData) {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        setClasses(newData.getTuitionClassList());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"    public boolean hasPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"     * Returns true if a tuition class with the same identity as {@code TuitionClass} exists in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"    public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        requireNonNull(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        return classes.contains(tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        students.add(p);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"     * Adds a tuition class to the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"     * The tuition class must not already exist in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"    public void addTuitionClass(TuitionClass t) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        classes.add(t);","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        students.setPerson(target, editedStudent);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"     * Removes {@code key} from this {@code TimesTable}.","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"    public void removePerson(Student key) {","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"        classes.removeStudent(key.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"    public void deleteTuitionClass(TuitionClass toDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"        classes.delete(toDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"yourally2"},"content":"        return students.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"yourally2"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"softmagnet"},"content":"    public ObservableList\u003cTuitionClass\u003e getTuitionClassList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"        return classes.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"yourally2"},"content":"                || (other instanceof TimesTable // instanceof handles nulls","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 students.equals(((TimesTable) other).students));","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"yourally2"},"content":"        return students.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"    public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"        classes.setClass(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"     * Replaces the given old name in the list with a new name.","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"     * @param newName New name to replace the given old name.","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"     * @param oldName Old name to be replaced by new name.","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"    public void updateClassStudentLists(Name newName, Name oldName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"        for (TuitionClass tuitionClass : classes) {","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"            tuitionClass.replaceStudentName(newName, oldName);","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":43,"s7u4rt99":6,"Ongzl":15,"softmagnet":14,"bernardwan":6,"-":89}},{"path":"src/main/java/seedu/times/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    private Path timesTableFilePath \u003d Paths.get(\"data\" , \"timestable.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        setTimesTableFilePath(newUserPrefs.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        return timesTableFilePath;","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"    public void setTimesTableFilePath(Path timesTableFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        requireNonNull(timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        this.timesTableFilePath \u003d timesTableFilePath;","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 timesTableFilePath.equals(o.timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        return Objects.hash(guiSettings, timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        sb.append(\"\\nLocal data file location : \" + timesTableFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":10,"Ongzl":2,"-":75}},{"path":"src/main/java/seedu/times/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.util.Commons.MAX_CHAR_COUNT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Address is blank or has exceeded \"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"            + MAX_CHAR_COUNT + \" characters!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].{0,84}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":3,"softmagnet":3,"bernardwan":1,"-":52}},{"path":"src/main/java/seedu/times/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.isWithinLength;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.util.Commons.MAX_CHAR_COUNT;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"            + \"1. The total length of the email must not exceed 85 characters\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            + \"2. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"            + \"3. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isWithinLength(test, MAX_CHAR_COUNT);","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":4,"softmagnet":4,"-":66}},{"path":"src/main/java/seedu/times/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.isWithinLength;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final int MAX_CHAR_COUNT \u003d 120;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"            \"Names contains characters that is not alphanumeric/space, or the name is not between 1 and 120 \"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"            + \"characters long.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"    public String getFullName() {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        return fullName;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isWithinLength(test, MAX_CHAR_COUNT);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"                \u0026\u0026 fullName.compareToIgnoreCase(((Name) other).fullName) \u003d\u003d 0); // compares names, ignores case","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"    public int compareTo(Name otherName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        return fullName.compareTo(otherName.fullName);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":3,"softmagnet":9,"bernardwan":7,"-":52}},{"path":"src/main/java/seedu/times/model/person/Nok.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":" * Represents a students Next of Kin (ie parent etc.).","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"public class Nok extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    public Nok(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"        super(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"yourally2":13,"Ongzl":1}},{"path":"src/main/java/seedu/times/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    // Identity (mandatory) fields","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    public Person(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress());","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        return Objects.hash(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":5,"Ongzl":2,"-":94}},{"path":"src/main/java/seedu/times/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final int MAX_DIGIT_COUNT \u003d 25;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final int MIN_DIGIT_COUNT \u003d 3;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"            \"Phone number contains non-number characters or its length is not between \"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"                    + MIN_DIGIT_COUNT + \" and \"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"                    + MAX_DIGIT_COUNT + \" digits!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,25}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ongzl":2,"softmagnet":6,"-":49}},{"path":"src/main/java/seedu/times/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"public class Student extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    /* Each Student has 0..1 Nok */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private Nok nok;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"     * Student constructor","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public Student(","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"            Name name, Phone phone, Email email, Address address, Nok nok, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        super(name, phone, email, address);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        this.nok \u003d nok;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    public void setNok(Nok nok) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        this.nok \u003d nok;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    public Nok getNok() {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        return nok;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    public ClassTiming getClassTiming() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        // TODO: Placeholder","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        // TODO: Placeholder","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"     * Returns tuition {@code Rate} of this student","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    public Rate getRate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        // Placeholder","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"     * Returns true if any {@code Tag} belonging to this student matches {@code keyword} in name ignoring case.","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    public boolean isAnyTagsMatching(String keyword) {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        return tags.stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"                .anyMatch(tag -\u003e tag.isNameMatchingIgnoreCase(keyword));","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"     * We check if their tags are equal as well.","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        Student o \u003d (Student) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        return super.equals(other)","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.getTags().equals(getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        // Hashes the hashcode to produce a new hash","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        return Objects.hash(super.hashCode(), tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"        final StringBuilder builder \u003d new StringBuilder(super.toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        builder.append(\"\\nNext-of-Kin: \");","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        builder.append(nok.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"yourally2":82,"s7u4rt99":6,"Ongzl":7,"softmagnet":25,"bernardwan":3}},{"path":"src/main/java/seedu/times/model/person/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":" * updating of","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(UniqueStudentList.class);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        int listSize \u003d internalList.size();","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        /*","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"         * TODO:","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"         * As of the new implementation there is a possibility a Student has multiple classes, so this is commented out","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"         * for now","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"         *        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"         *","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"         *             if (internalList.get(i).getClassTiming().isEarlier(toAdd.getClassTiming())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"         *                 continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"         *             } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"         *                 internalList.add(i, toAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"         *                 break;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"         *             }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"         *         }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"        if (listSize \u003d\u003d 0 || internalList.size() \u003d\u003d listSize) {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"    public Student getStudent(Name name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        for (Student student : internalList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"            if (student.getName() \u003d\u003d name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"                return student;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        return null;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"    public void setPersons(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"        logger.info(\"List of Students set from replace UniquePersonList.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"    public void setPersons(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"yourally2"},"content":"        if (!personsAreUnique(students)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"        logger.info(\"List of Students set from List\u003cStudent\u003e.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"yourally2"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"yourally2"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"yourally2"},"content":"    private boolean personsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"yourally2"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":49,"Ongzl":15,"softmagnet":1,"-":108}},{"path":"src/main/java/seedu/times/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Ongzl":1,"-":10}},{"path":"src/main/java/seedu/times/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"Ongzl":1,"-":5}},{"path":"src/main/java/seedu/times/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person.predicates;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        String nameLowerCase \u003d student.getName().fullName.toLowerCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"                .anyMatch(keyword -\u003e nameLowerCase.contains(keyword.toLowerCase()));","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yourally2":2,"Ongzl":2,"softmagnet":2,"-":26}},{"path":"src/main/java/seedu/times/model/person/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person.predicates;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":" * Tests if a {@code Person}\u0027s list of {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"                .anyMatch(keyword -\u003e student.isAnyTagsMatching(keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof TagsContainsKeywordsPredicate","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 keywords.equals(((TagsContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Ongzl":3,"softmagnet":27}},{"path":"src/main/java/seedu/times/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    public static final int MAX_TAG_LENGTH \u003d 15;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    public static final int MAX_TAG_NUMBER \u003d 5;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_CONSTRAINTS_TOO_LONG \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"            \"Tags names should be at most \" + MAX_TAG_LENGTH + \" characters\";","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    public static final String MESSAGE_CONSTRAINTS_TOO_MANY \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"            \"A student should have at most \" + MAX_TAG_NUMBER + \" tags\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"     * Returns true if {@code tagName} of this {@code Tag} matches exactly with {@code keyword} ignoring case.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"    public boolean isNameMatchingIgnoreCase(String keyword) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        return tagName.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yourally2":4,"Ongzl":2,"softmagnet":6,"bernardwan":4,"-":51}},{"path":"src/main/java/seedu/times/model/tuitionclass/ClassName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.isWithinLength;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.util.Commons.MAX_CHAR_COUNT;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":" * Represents the name given to a tuition class by a user","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassName(String)}","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"public class ClassName {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"            \"Class name contains characters that is not alphanumeric/space, or the name is not between 1 and \"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"            + MAX_CHAR_COUNT + \" characters long!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    public final String className;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"     * Constructs a {@code ClassName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"     * @param className A valid class name.","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    public ClassName(String className) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(className);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        checkArgument(isValidClassName(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    public static boolean isValidClassName(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isWithinLength(test, MAX_CHAR_COUNT);","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        return className;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof ClassName // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 className.equals(((ClassName) other).className)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"Ongzl":9,"softmagnet":45}},{"path":"src/main/java/seedu/times/model/tuitionclass/ClassTiming.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":" * Represents a Student\u0027s class timing in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassTiming(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"public class ClassTiming implements Comparable\u003cClassTiming\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"            \"Class Timing must be in the form DAY HH:MM-HH:MM\"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"                    + \"\\nStart time must be earlier than end time, and \"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"                    + \"start and end time has to start at the hour or half hour mark, but it can end at 23:59\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"     * The string has to be in the form DAY HH:MM-HH:MM eg MON 23:59-01:00","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"            \"^(?i)(MON |TUE |WED |THU |FRI |SAT |SUN )([01][0-9]|2[0-3]):[0-5][0-9]-([01][0-9]|2[0-3]):[0-5][0-9]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    public final String value;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    private final String day;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a {@code ClassTiming}.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming A valid class timing.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public ClassTiming(String classTiming) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(classTiming);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        checkArgument(isValidClassTiming(classTiming), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        value \u003d formatClassTiming(classTiming);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        startTime \u003d getStartTimeFromValue();","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        endTime \u003d getEndTimeFromValue();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        day \u003d parseDay();","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the endTime from value.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"     * @return The end time.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    private LocalTime getStartTimeFromValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(this.value);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        String startTime \u003d timePart[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        return LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the startTime from value.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     * @return The start time.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"    private LocalTime getEndTimeFromValue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(this.value);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"        String endTime \u003d timePart[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        return LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"     * Formats the classTiming day into caps.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming classTiming where day is going to be changed to caps.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"     * @return classTiming with the day in caps.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"    private String formatClassTiming(String classTiming) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"        String day \u003d classTiming.split(\" \")[0].toUpperCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        String timing \u003d classTiming.split(\" \")[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        return day + \" \" + timing;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     * Converts Day from the ClassTiming object into the int representation of the day.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"     * @return int representation of the Day of the ClassTiming object","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"    public int getDayToInt() {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        // TODO: change day to enum","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"        switch (day.toUpperCase()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"        case \"MON\":","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"            return 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"        case \"TUE\":","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"            return 2;","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        case \"WED\":","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"            return 3;","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        case \"THU\":","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"            return 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        case \"FRI\":","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"            return 5;","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"        case \"SAT\":","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"            return 6;","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        case \"SUN\":","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"            return 7;","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"            return 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"     * Compares two ClassTiming objects.","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"     * @param time ClassTiming being compared to.","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if this ClassTiming is on an earlier day or has end time earlier than time\u0027s","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"     * start time, otherwise false.","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isEarlier(ClassTiming time) {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        return this.compareTo(time) \u003c 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"     * Sees if the ClassTiming\u0027s start time is after the LocalTime given.","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"     * @param time LocalTime being compared to.","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"     * @return true if ClassTiming has a start time later than given time otherwise false.","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isAfter(LocalTime time) {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"        return this.getStartTime().isAfter(time);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the class timing string to retrieve the day from the value.","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"     * @return The Day of the ClassTiming value.","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"    private String parseDay() {","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"        String[] classTimingPart \u003d this.value.split(\" \");","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"        return classTimingPart[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"     * Splits the class timing string to retrieve the start and end time in String form.","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be split.","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"     * @return A String array consisting of the start time at index 0 and end time at index 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"    private static String[] splitTiming(String ct) {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"        String[] ctSplit \u003d ct.split(\" \");","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"        String startEndTime \u003d ctSplit[1];","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"        return startEndTime.split(\"-\");","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the input class timing string to retrieve the Start Time.","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"     * @return The start time of the input string.","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if ct does not start at the hour or half hour mark.","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"    private static LocalTime parseStartTime(String ct) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(ct);","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"        String startTime \u003d timePart[0];","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"        String startTimeMinutes \u003d startTime.split(\":\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"        if (!startTimeMinutes.equals(\"00\") \u0026\u0026 !startTimeMinutes.equals(\"30\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(\"Invalid start time\");","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"        return LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"     * Parses the input class timing string to retrieve the End Time.","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"     * @param ct ClassTiming string to be parsed.","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"     * @return The end time of the input string.","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"     * @throws ParseException if ct does not start at the hour or half hour mark.","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"    private static LocalTime parseEndTime(String ct) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"        String[] timePart \u003d splitTiming(ct);","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"        String endTime \u003d timePart[1];","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"        String endTimeMinutes \u003d endTime.split(\":\")[1];","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"        if (!endTimeMinutes.equals(\"00\") \u0026\u0026 !endTimeMinutes.equals(\"30\") \u0026\u0026 !endTime.equals(\"23:59\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"            throw new ParseException(\"Invalid end time\");","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"Ongzl"},"content":"        return LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the start time of the class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"     * @return Start Time of ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"        return this.startTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the end time of the class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"     * @return End Time of ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"        return this.endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the day of the class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"     * @return Day of ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"s7u4rt99"},"content":"    private String getDay() {","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"s7u4rt99"},"content":"        return this.day;","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"Ongzl"},"content":"     * Returns boolean true if other is on the same day as this, false otherwise.","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"s7u4rt99"},"content":"     * @param other ClassTiming to compare to this.","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"Ongzl"},"content":"     * @return Boolean on whether this and other is on the same day.","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"Ongzl"},"content":"    public Boolean isSameDay(ClassTiming other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Ongzl"},"content":"        if (this.getDayToInt() \u003d\u003d other.getDayToInt()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"Ongzl"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the timing string without the day of the ClassTiming.","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"s7u4rt99"},"content":"     * @return Timing of the ClassTiming without the Day.","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"s7u4rt99"},"content":"    public String getClassTiming() {","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"s7u4rt99"},"content":"        return this.value.split(\" \")[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"Ongzl"},"content":"     * Returns true if a given string is a valid class timing.","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"s7u4rt99"},"content":"    public static boolean isValidClassTiming(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"s7u4rt99"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"Ongzl"},"content":"            if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"s7u4rt99"},"content":"                LocalTime startTime \u003d parseStartTime(test);","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"s7u4rt99"},"content":"                LocalTime endTime \u003d parseEndTime(test);","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"Ongzl"},"content":"                return startTime.isBefore(endTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":251,"author":{"gitId":"Ongzl"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"Ongzl"},"content":"                return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"s7u4rt99"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"s7u4rt99"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"s7u4rt99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"s7u4rt99"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"s7u4rt99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"s7u4rt99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"                || (other instanceof ClassTiming // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"                \u0026\u0026 value.equals(((ClassTiming) other).value)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"s7u4rt99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"s7u4rt99"},"content":"    public int compareTo(ClassTiming o) {","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"s7u4rt99"},"content":"        int thisDayInt \u003d getDayToInt();","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"s7u4rt99"},"content":"        String otherDay \u003d o.getDay();","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"s7u4rt99"},"content":"        int otherDayInt \u003d o.getDayToInt();","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime otherStartTime \u003d o.getStartTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"s7u4rt99"},"content":"        if (thisDayInt \u003c otherDayInt) {","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"s7u4rt99"},"content":"            return -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"s7u4rt99"},"content":"        } else if (otherDayInt \u003c thisDayInt) {","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"s7u4rt99"},"content":"            return 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"s7u4rt99"},"content":"        } else if (this.getStartTime().equals(otherStartTime)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"s7u4rt99"},"content":"            return 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"s7u4rt99"},"content":"            return otherStartTime.isAfter(this.getEndTime()) || this.getStartTime().isBefore(otherStartTime) ? -1 : 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"yourally2":2,"s7u4rt99":219,"Ongzl":72,"bernardwan":1}},{"path":"src/main/java/seedu/times/model/tuitionclass/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.util.Commons.MAX_CHAR_COUNT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":" * Represents a Person\u0027s class location in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"public class Location {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Class location should be between 1 and \"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"            + MAX_CHAR_COUNT + \" characters long!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    /*","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].{0,84}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     * @param location A valid class address.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    public Location(String location) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        value \u003d location;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"     * Returns true if a given string is a valid class location.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        return value;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"                \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Ongzl":3,"softmagnet":3,"bernardwan":52}},{"path":"src/main/java/seedu/times/model/tuitionclass/Rate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.util.Commons.MAX_CHAR_COUNT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":" * Represents a Student\u0027s tuition rate in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"public class Rate {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"            \"Rate should satisfy the following constraints:\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"            + \"1. Not exceed a million\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"            + \"2. Not be negative\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"            + \"3. Not be empty\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"            + \"4. At most be up to 2 decimal places\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"            + \"5. You also cannot enter a decimal point without following it up with at least one digit.\\n\";","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,6}(\\\\.\\\\d{1,2})?\";","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"     * Constructs a {@code Rate}","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"     * @param rate A valid tuition per hour rate.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    public Rate(String rate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(rate);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        checkArgument(isValidRate(rate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        value \u003d rate;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"     * Returns true if a given string is a valid tuition rate.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"     * @param test String representing rate to be tested.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"     * @return A boolean value.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public static boolean isValidRate(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c MAX_CHAR_COUNT;","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof Rate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 value.equals(((Rate) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"s7u4rt99":4,"Ongzl":3,"softmagnet":53}},{"path":"src/main/java/seedu/times/model/tuitionclass/StudentNameList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Person;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.DuplicateStudentInClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":" * Represents a unique list of names corresponding to the students","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":" * that a {@code TuitionClass} has.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"public class StudentNameList implements Iterable\u003cName\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cName\u003e internalList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"     * Constructs an StudentNameList from an array of Strings.","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     * @param nameList The String array to convert into an StudentNameList.","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    public StudentNameList(String[] nameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        for (String name : nameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"            internalList.add(new Name(name));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"     * Constructor that builds a StudentNameList from zero or more names.","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"     * @param names Names to be stored in the StudentNameList.","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    public StudentNameList(Name... names) {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        for (Name name : names) {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"            this.add(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"     * Checks to see if the name in argument is already in the NameList.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"     * @param toCheck Name to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"     * @return boolean, true if name is already in list, false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    public boolean contains(Name toCheck) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"     * Removes name from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"     * @param name to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    public void remove(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        internalList.remove(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     * Removes all names provided from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     * @param names The list of names to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    public void removeAll(List\u003cName\u003e names) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        internalList.removeAll(names);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"     * Adds a name to the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"     * @param toAdd name to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"     * @throws DuplicateStudentInClassException if name is already in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"    public void add(Name toAdd) throws DuplicateStudentInClassException {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"            throw new DuplicateStudentInClassException(toAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"     * Adds all the names in the argument into the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"     * @param names to be added in StudentNameList form.","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"    public void addAll(StudentNameList names) {","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        for (Name name : names) {","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"            if (!this.contains(name)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"                this.add(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"     * Adds all the names in argument into the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"     * @param names list of names to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"     * @throws DuplicateStudentInClassException if there are duplicate names in list.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"    public void addAll(List\u003cName\u003e names) throws DuplicateStudentInClassException {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"        for (int i \u003d 0; i \u003c names.size(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"            this.add(names.get(i));","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"    public int size() {","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"        return internalList.size();","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"    public Iterator\u003cName\u003e iterator() {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"     * Sorts the internal Name list in the same order as the list of students given.","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"     * @param listToSortBy The student list to sort the name list by.","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"    public void sortListByList(List\u003cStudent\u003e listToSortBy) {","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"        Collections.sort(internalList,","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"                Comparator.comparing(name -\u003e listToSortBy.stream().map(Person::getName)","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"                        .collect(Collectors.toList()).indexOf(name)));","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"     * Gets the Name at the given index.","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"     * @param zeroBasedIndex The index to retrieve the Name from.","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"     * @return The Name at the given index.","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"    public Name get(int zeroBasedIndex) {","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"        assert (zeroBasedIndex \u003c internalList.size());","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"        return internalList.get(zeroBasedIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"        if (!(o instanceof StudentNameList)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"        return ((StudentNameList) o).internalList.equals(internalList);","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"     * Replaces the old student name in the internalList with the new name.","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"     * @param newName Name to replace the old name.","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"     * @param oldName Name to be replaced by the new name.","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"    public void replaceStudentName(Name newName, Name oldName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"        int oldNameIndex \u003d internalList.indexOf(oldName);","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"        if (oldNameIndex !\u003d -1) {","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"            internalList.set(oldNameIndex, newName);","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"     * Utility method for testing","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"softmagnet"},"content":"    public String[] getNames() {","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"softmagnet"},"content":"        int len \u003d internalList.size();","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"softmagnet"},"content":"        String[] res \u003d new String[len];","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"softmagnet"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"softmagnet"},"content":"            res[i] \u003d internalList.get(i).getFullName();","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"softmagnet"},"content":"        return res;","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"s7u4rt99":8,"Ongzl":33,"softmagnet":87,"bernardwan":54}},{"path":"src/main/java/seedu/times/model/tuitionclass/TuitionClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":" * Represents a tuition TuitionClass in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class TuitionClass {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    private final ClassTiming classTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private final ClassName className;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    private final Location location;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    private final Rate rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"     * ArrayList of {@code Name}","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"     * Rationale for choosing Name as identifier:","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"     * If the {@code Student} objects are stored, any changes to a student would cause a cascade of updates in classes","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"     * the student is in.","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    private final StudentNameList studentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"     * Represents a tuition class for Students to join. A {@code TuitionClass} can have multiple {@code Student}s.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"     * A class is uniquely identified by its timing; a single timing can only have _one_ class.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"     * A {@code Student} can have multiple {@code TuitionClass}es as well.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"     * @param className The name of the class to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"     * @param classTiming The timing of the class specified. This is the unique identifier (id) of the class.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"     * @param location The location of the class.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"     * @param rate How much it costs per hour to attend the class.","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    public TuitionClass(ClassName className, ClassTiming classTiming, Location location, Rate rate,","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"                        StudentNameList studentNameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(className, classTiming, location, rate);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        this.studentNameList \u003d studentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"     *  Represents a tuition class for Students to join. A {@code TuitionClass} can have multiple {@code Student}s.","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"     * A class is uniquely identified by its timing; a single timing can only have _one_ class. Without the","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"     * StudentNameList.","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"     * A {@code Student} can have multiple {@code TuitionClass}es as well.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"     * @param className The name of the class to be created.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"     * @param classTiming The timing of the class specified. This is the unique identifier (id) of the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"     * @param location The location of the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"     * @param rate How much it costs per hour to attend the class.","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    public TuitionClass(ClassName className, ClassTiming classTiming, Location location, Rate rate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        requireAllNonNull(className, classTiming, location, rate);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        this.studentNameList \u003d new StudentNameList();","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"    public ClassName getClassName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        return className;","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"    public String getClassNameString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        return className.toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"    public ClassTiming getClassTiming() {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        return classTiming;","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"    public LocalTime getStartTiming() {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        return classTiming.getStartTime();","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"    public LocalTime getEndTiming() {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        return classTiming.getEndTime();","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        return location;","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"    public Rate getRate() {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        return rate;","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"     * Returns whether the tuition class contains the Student.","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"     * @return whether the tuition class contains the Student or not.","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"    public boolean containsStudent(Name name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"        return studentNameList.contains(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"    public StudentNameList getStudentList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        return studentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"    public void addStudent(Name name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"        studentNameList.add(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"    public void addAllStudents(Name... names) {","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"        studentNameList.addAll(Arrays.asList(names));","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"     * Removes student name from the name list.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"     * @param name to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"     * @return this after name has been removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"    public TuitionClass removeStudent(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"        if (studentNameList.contains(name)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"            studentNameList.remove(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"    public void addStudentList(StudentNameList studentNameList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"softmagnet"},"content":"        this.studentNameList.addAll(studentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"     * Checks if the TuitionClass is at this timing.","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"yourally2"},"content":"    public boolean isAtTiming(ClassTiming otherClassTiming) {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"yourally2"},"content":"        return classTiming.equals(otherClassTiming);","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"softmagnet"},"content":"        if (!(other instanceof TuitionClass)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"        TuitionClass o \u003d (TuitionClass) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"        return o.className.equals(getClassName())","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.classTiming.equals(getClassTiming())","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.rate.equals(getRate())","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.location.equals(getLocation())","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 o.studentNameList.equals(getStudentList());","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"bernardwan"},"content":"     * Returns true if the class timing of the class to be checked overlaps with this class.","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"    public boolean isOverlapping(TuitionClass toCheck) {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"        //return !(this.getClassTiming().isEarlier(toCheck.getClassTiming())","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"        //        || toCheck.getClassTiming().isEarlier(this.getClassTiming()));","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"        if (this.equals(toCheck)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"        } else if (this.getClassTiming().isSameDay(toCheck.getClassTiming()) //on the same day","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 ((toCheck.getStartTiming().compareTo(this.getEndTiming()) \u003c 0","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 toCheck.getStartTiming().compareTo(this.getStartTiming()) \u003e\u003d 0) // \u0026\u0026 toCheck start time overlap","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"                // with this","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"                || (toCheck.getEndTiming().compareTo(this.getEndTiming()) \u003c\u003d 0","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 toCheck.getEndTiming().compareTo(this.getStartTiming()) \u003e 0) //toCheck end time overlap with this","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"                || (toCheck.getStartTiming().compareTo(this.getStartTiming()) \u003c\u003d 0 //toCheck starts earlier than this","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 toCheck.getEndTiming().compareTo(this.getEndTiming()) \u003e\u003d 0))) { //toCheck ends later than this","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"Ongzl"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"Ongzl"},"content":"     * Checks if 2 TuitionClass are the same using ClassTiming.","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"Ongzl"},"content":"     * @param otherClass to be checked with this.","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"Ongzl"},"content":"     * @return boolean.","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"    public boolean isSameClass(TuitionClass otherClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"softmagnet"},"content":"        if (otherClass \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"softmagnet"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"        return otherClass !\u003d null","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 otherClass.getClassTiming().equals(getClassTiming());","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"    public boolean isAfter(LocalTime time) {","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.isAfter(time);","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.getStartTime();","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.getEndTime();","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"    public int getDayToInt() {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"s7u4rt99"},"content":"        return this.classTiming.getDayToInt();","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"bernardwan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"bernardwan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"bernardwan"},"content":"        builder.append(\"Class Timing: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"softmagnet"},"content":"                .append(getClassTiming())","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"softmagnet"},"content":"                .append(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"bernardwan"},"content":"        if (!getClassTiming().equals(getClassName())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"bernardwan"},"content":"            builder.append(\" Class Name: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"Ongzl"},"content":"                    .append(getClassName())","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"Ongzl"},"content":"                    .append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"Ongzl"},"content":"        builder.append(\"Location: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"Ongzl"},"content":"                .append(getLocation())","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"Ongzl"},"content":"                .append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"Ongzl"},"content":"        builder.append(\"Rate: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"Ongzl"},"content":"                .append(getRate())","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"Ongzl"},"content":"                .append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"bernardwan"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"softmagnet"},"content":"    public void replaceStudentName(Name newName, Name oldName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"softmagnet"},"content":"        studentNameList.replaceStudentName(newName, oldName);","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yourally2":37,"s7u4rt99":21,"Ongzl":70,"softmagnet":104,"bernardwan":15}},{"path":"src/main/java/seedu/times/model/tuitionclass/UniqueClassList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.DuplicateClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.OverlappingClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.TuitionClassNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":" * A list of classes that makes sure there is no overlap between class timings.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"public class UniqueClassList implements Iterable\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    private final ObservableList\u003cTuitionClass\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    private final ObservableList\u003cTuitionClass\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"     * Adds a class to the list. TuitionClass must not overlap in timing with existing classes.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"     * @param toAdd The tuition class to add.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    public void add(TuitionClass toAdd) throws OverlappingClassException {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        if (!isValidTiming(toAdd)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"            throw new OverlappingClassException();","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"     * Deletes a TuitionClass from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"     * @param toDelete TuitionClass to be deleted.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    public void delete(TuitionClass toDelete) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"            throw new TuitionClassNotFoundException();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"     * Removes a name from all the classes in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"     * @param name to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"    public void removeStudent(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"            TuitionClass tuitionClass \u003d internalList.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"            StudentNameList nameList \u003d tuitionClass.getStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"            if (nameList.contains(name)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"                TuitionClass editedTuitionClass \u003d tuitionClass.removeStudent(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"                this.setClass(tuitionClass, editedTuitionClass);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"        requireNonNull(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"        //todo check that classes are unique","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"        List\u003cTuitionClass\u003e editedClasses \u003d new ArrayList\u003c\u003e(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"        for (int i \u003d 0; i \u003c editedClasses.size(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"            for (int j \u003d i + 1; j \u003c editedClasses.size(); j++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"                if (editedClasses.get(i).equals(editedClasses.get(j))) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"                    throw new DuplicateClassException();","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"        internalList.setAll(editedClasses);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        //internalList.setAll(classes);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"     * Checks if the class timing is valid (no overlaps with current classes).","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    public boolean isValidTiming(TuitionClass otherClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        requireNonNull(otherClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        for (TuitionClass tuitionClass : internalList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"            if (tuitionClass.isOverlapping(otherClass)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"     * Checks if there is a class with the timing specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"    public boolean classExistAt(ClassTiming timing) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"        //TODO: probably need to modify cos need to consider overlap","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        return internalList.stream().anyMatch(c -\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"            return c.getClassTiming().equals(timing);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        });","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"     * Checks if there is an identical class in the internalMap.","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    public boolean contains(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        return internalList.stream().anyMatch(tuitionClass::isSameClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"     * Returns the class at the specified timing.","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"     * Throws an error if the timing is invalid or no classes exist at that timing.","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"    public TuitionClass getClassAt(ClassTiming timing) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"        requireNonNull(timing);","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"        for (TuitionClass tuitionClass : internalList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"            if (tuitionClass.getClassTiming().equals(timing)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"                return tuitionClass;","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"        //if no class at specified timing returns null","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"        return null;","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"    public ObservableList\u003cTuitionClass\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"softmagnet"},"content":"    public Iterator\u003cTuitionClass\u003e iterator() {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"                || (other instanceof UniqueClassList // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 internalList.equals(((UniqueClassList) other).internalList));","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"softmagnet"},"content":"    public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"softmagnet"},"content":"        requireAllNonNull(target, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"            throw new TuitionClassNotFoundException();","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"        if (!target.isSameClass(editedClass) \u0026\u0026 contains(editedClass)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"        //check for overlapping ClassTiming.","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"        for (TuitionClass tuitionClass : internalList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"Ongzl"},"content":"            if (tuitionClass.isSameClass(target)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"                continue;","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"            } else if (tuitionClass.isOverlapping(editedClass)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"softmagnet"},"content":"                throw new OverlappingClassException();","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"softmagnet"},"content":"        internalList.set(index, editedClass);","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"softmagnet"},"content":"    //TODO: need a personsAreUnique method probably","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yourally2":29,"Ongzl":54,"softmagnet":46,"bernardwan":47}},{"path":"src/main/java/seedu/times/model/tuitionclass/exceptions/DuplicateClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":" * Exception thrown when user attempts at adding to unique class list a tuition class  that has same timing","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":" * as an already existing tuition class","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"public class DuplicateClassException extends RuntimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"    public static final String DUPLICATE_CLASS_ERROR_MESSAGE \u003d \"Operation would result in classes with same timing!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"    public DuplicateClassException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"        super(DUPLICATE_CLASS_ERROR_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Ongzl":1,"softmagnet":11}},{"path":"src/main/java/seedu/times/model/tuitionclass/exceptions/DuplicateStudentInClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"public class DuplicateStudentInClassException extends RuntimeException {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"    public DuplicateStudentInClassException(Name duplicatedName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"        super(duplicatedName.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":2,"softmagnet":7}},{"path":"src/main/java/seedu/times/model/tuitionclass/exceptions/OverlappingClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":" * Signals that the operation will result in a invalid class (Classes are considered invalid if they have overlapping","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":" * timings with existing classes in the list).","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"public class OverlappingClassException extends RuntimeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"    public static final String OVERLAP_ERROR_MESSAGE \u003d \"Operation would result in overlapping class timings\";","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"    public OverlappingClassException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"        super(OVERLAP_ERROR_MESSAGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Ongzl":1,"softmagnet":11}},{"path":"src/main/java/seedu/times/model/tuitionclass/exceptions/TuitionClassNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass.exceptions;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":" * Signals that the TuitionClass was not found.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"public class TuitionClassNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"    public TuitionClassNotFoundException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"        super(\"Tuition Class not found.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Ongzl":1,"bernardwan":9}},{"path":"src/main/java/seedu/times/model/tuitionclass/predicates/ClassNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass.predicates;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"public class ClassNameContainsKeywordsPredicate implements Predicate\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public ClassNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    public boolean test(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"        String classNameLowerCase \u003d tuitionClass.getClassName().className.toLowerCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"                .anyMatch(keyword -\u003e classNameLowerCase.contains(keyword.toLowerCase()));","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"                || (other instanceof ClassNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"                \u0026\u0026 keywords.equals(((ClassNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Ongzl":3,"softmagnet":26}},{"path":"src/main/java/seedu/times/model/tuitionclass/predicates/ClassTimingContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass.predicates;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.StringUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"public class ClassTimingContainsKeywordsPredicate implements Predicate\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    public ClassTimingContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public boolean test(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tuitionClass.getClassTiming().value, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"                || (other instanceof ClassTimingContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 keywords.equals(((ClassTimingContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Ongzl":26,"softmagnet":3}},{"path":"src/main/java/seedu/times/model/util/Commons.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"public class Commons {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"    public static final int MAX_CHAR_COUNT \u003d 85;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Ongzl":1,"softmagnet":4}},{"path":"src/main/java/seedu/times/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":" * Contains utility methods for populating {@code TimesTable} with sample data.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private static Student[] getSamplePersons() {","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        return new Student[] {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@gmail.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Elise Yeoh\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"93292556\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"eliseyeoh@gmail.com\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Blk 30 Geylang Street 29, #06-40\")","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"A Math\", \"Sec 4\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@gmail.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Daniel Yu\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"87338920\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"danielyu@gmail.com\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Blk 28 Geylang Street 29, #08-30\")","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"C Math\", \"Sec 3\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@yahoo.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Annabeth Parker\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"94896758\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"annabethp@yahoo.com\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Blk 6 Petir Road, #07-16\")","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"H2 Physics\", \"JC2\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@gmail.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Jacob Li\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"84739056\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"jacobli@gmail.com\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"A Math\", \"Sec 4\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@yahoo.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Hafez Ibrahim\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"90308891\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"hafez@gmail.com\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Blk 47 Tampines Street 20, #17-35\")","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"H2 Math\", \"JC1\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@gmail.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"                    new Nok(","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Bob Balakrishnan\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"97776300\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"bobbyb@yahoo.com\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Blk 45 Aljunied Street 85, #11-31\")","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"                    ),","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"Chemistry\", \"Sec 3\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Angelica Holcomb\"), new Phone(\"85917748\"), new Email(\"lorem@magnased.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"                    new Address(\"Ap #909-605 Ante St\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"                    new Nok(","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Robert Holcomb\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"85998446\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"robhol@yahoo.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Ap #909-605 Ante St\")","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"                    ),","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"Math\", \"Sec 2\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Illana Page\"), new Phone(\"86549382\"), new Email(\"elit@dui.org\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"                    new Address(\"Ap #558-850 Amet, Rd\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"                    new Nok(","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Annabeth Page\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"97373300\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"annabp@yahoo.com\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"Ap #558-850 Amet, Rd\")","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"                    ),","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"Physical Sciences\", \"Sec 1\")),","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"bernardwan"},"content":"            new Student(new Name(\"Warren Campos\"), new Phone(\"87718622\"), new Email(\"magna@elit.ca\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"bernardwan"},"content":"                    new Address(\"Ap #824-4482 Egestas Avenue\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"                    new Nok(","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"                            new Name(\"Boris Roth\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"                            new Phone(\"81308576\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"                            new Email(\"aliquet.vel.vulputate@phasellusdapibus.ca\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"                            new Address(\"987-5408 Dignissim Road\")","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"                    ),","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"                    getTagSet(\"Chemistry\", \"Sec 1\"))","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"    private static TuitionClass[] getSampleClasses() {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"        return new TuitionClass[] {","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 4 A Math\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"MON 11:30-13:30\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"50\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"                    new StudentNameList(new Name(\"Alex Yeoh\"), new Name(\"David Li\"))),","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 3 C Math\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"MON 14:30-16:30\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"60\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"                    new StudentNameList(new Name(\"Bernice Yu\"))),","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 2 Physics\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"TUE 11:00-12:30\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"40\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"                    new StudentNameList(new Name(\"Charlotte Oliveiro\"))),","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 4 A Math 2\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"THU 11:30-13:30\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"50\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"                    new StudentNameList(new Name(\"Alex Yeoh\"), new Name(\"David Li\"))),","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"JC1 H2 Math\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"THU 16:30-18:30\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"50\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Bernice Yu\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"IB Year 5 HL Math\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"FRI 17:00-19:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"70\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Warren Campos\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 3 Chemistry\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"FRI 14:00-16:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Angelica Holcomb\"), new Name(\"David Li\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 1 Math\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"SAT 11:30-13:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Alex Yeoh\"), new Name(\"Angelica Holcomb\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"JC2 H2 Physics\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"SUN 11:30-13:30\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"60\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Charlotte Oliveiro\"), new Name(\"David Li\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"JC2 H1 Math\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"SUN 14:30-16:30\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"50\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Alex Yeoh\"), new Name(\"David Li\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 4 Physics\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"SAT 16:00-18:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Alex Yeoh\"), new Name(\"Irfan Ibrahim\"))),","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"bernardwan"},"content":"            new TuitionClass(new ClassName(\"Sec 1 Physical Sciences\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"bernardwan"},"content":"                    new ClassTiming(\"THU 09:30-11:00\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"bernardwan"},"content":"                    new Rate(\"35\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"bernardwan"},"content":"                    new StudentNameList(new Name(\"Illana Page\")))","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"bernardwan"},"content":"        };","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"yourally2"},"content":"    public static ReadOnlyTimesTable getSampleTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"yourally2"},"content":"        TimesTable sampleAb \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"        for (Student sampleStudent : getSamplePersons()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"softmagnet"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":183,"author":{"gitId":"bernardwan"},"content":"        for (TuitionClass sampleClass : getSampleClasses()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"bernardwan"},"content":"            sampleAb.addTuitionClass(sampleClass);","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yourally2":17,"Ongzl":16,"softmagnet":5,"bernardwan":128,"-":31}},{"path":"src/main/java/seedu/times/storage/JsonAdaptedNok.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":" * Jackson-friendly version of {@link Nok}.","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"class JsonAdaptedNok {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Nok\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"     * Constructs a {@code JsonAdaptedNok} with the given person details.","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedNok(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"                          @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address) {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"     * Converts a given {@code Nok} into this class for Jackson use.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedNok(Nok source) {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Nok} object.","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public Nok toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"        return new Nok(modelName, modelPhone, modelEmail, modelAddress);","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":11,"s7u4rt99":1,"Ongzl":7,"-":69}},{"path":"src/main/java/seedu/times/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    private final JsonAdaptedNok nok;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"                              @JsonProperty(\"nok\") JsonAdaptedNok nok,","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        this.nok \u003d nok;","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        nok \u003d source.getNok() !\u003d null ? new JsonAdaptedNok(source.getNok()) : null;","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        final Nok modelNok \u003d nok \u003d\u003d null ? null : nok.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelAddress, modelNok, modelTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":10,"s7u4rt99":2,"Ongzl":11,"softmagnet":1,"-":94}},{"path":"src/main/java/seedu/times/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ongzl":3,"-":45}},{"path":"src/main/java/seedu/times/storage/JsonAdaptedTuitionClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":" * Jackson-friendly version of {@link TuitionClass}.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"public class JsonAdaptedTuitionClass {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Class\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    private final String classTiming;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private final String className;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    private final String location;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    private final String rate;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    private final List\u003cString\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    public JsonAdaptedTuitionClass(@JsonProperty(\"classTiming\") String classTiming,","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"                              @JsonProperty(\"className\") String className,","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"                              @JsonProperty(\"rate\") String rate,","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"                              @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"                              @JsonProperty(\"students\") List\u003cString\u003e students) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        this.classTiming \u003d classTiming;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        this.className \u003d className;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        if (students !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"            this.students.addAll(students);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"     * Converts a given {@code TuitionClass} into this class for Jackson use.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    public JsonAdaptedTuitionClass(TuitionClass source) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        classTiming \u003d source.getClassTiming().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        className \u003d source.getClassName().className;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"        rate \u003d source.getRate().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        Iterator iterator \u003d source.getStudentList().iterator();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"            students.add(iterator.next().toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code TuitionClass} object.","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted TuitionClass.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    public TuitionClass toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        if (classTiming \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"                    ClassTiming.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"        if (!ClassTiming.isValidClassTiming(classTiming)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(ClassTiming.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        final ClassTiming modelTiming \u003d new ClassTiming(classTiming);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"        if (className \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"                    ClassName.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        if (!ClassName.isValidClassName(className)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(ClassName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"        final ClassName modelName \u003d new ClassName(className);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"        if (rate \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"                    Rate.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"        if (!Rate.isValidRate(rate)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"            throw new IllegalValueException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"        final Rate modelRate \u003d new Rate(rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"        final StudentNameList tuitionClassNameList \u003d new StudentNameList();","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"        for (String name : students) {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"            tuitionClassNameList.add(new Name(name));","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"        return new TuitionClass(modelName, modelTiming, modelLocation, modelRate, tuitionClassNameList);","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Ongzl":34,"softmagnet":1,"bernardwan":81}},{"path":"src/main/java/seedu/times/storage/JsonSerializableTimesTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":" * An Immutable TimesTable that is serializable to JSON format.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"@JsonRootName(value \u003d \"timestable\")","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"class JsonSerializableTimesTable {","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"Class list contains duplicate class(es).\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    private final List\u003cJsonAdaptedStudent\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    private final List\u003cJsonAdaptedTuitionClass\u003e classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"     * Constructs a {@code JsonSerializableTimesTable} with the given persons.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    public JsonSerializableTimesTable(@JsonProperty(\"persons\") List\u003cJsonAdaptedStudent\u003e persons,","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"                                      @JsonProperty(\"classes\") List\u003cJsonAdaptedTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        this.classes.addAll(classes);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"     * Converts a given {@code ReadOnlyTimesTable} into this class for Jackson use.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTimesTable}.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    public JsonSerializableTimesTable(ReadOnlyTimesTable source) {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        persons.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        classes.addAll(source.getTuitionClassList().stream().map(JsonAdaptedTuitionClass::new)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"     * Converts this address book into the model\u0027s {@code TimesTable} object.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    public TimesTable toModelType() throws IllegalValueException {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        TimesTable timesTable \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : persons) {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"            if (timesTable.hasPerson(student)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"            timesTable.addStudent(student);","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        for (JsonAdaptedTuitionClass jsonAdaptedTuitionClass : classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"            TuitionClass tuitionClass \u003d jsonAdaptedTuitionClass.toModelType();","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"            if (timesTable.hasTuitionClass(tuitionClass)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLASS);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"            timesTable.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        return timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":20,"s7u4rt99":2,"Ongzl":6,"softmagnet":12,"-":37}},{"path":"src/main/java/seedu/times/storage/JsonTimesTableStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.FileUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.JsonUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":" * A class to access TimesTable data stored as a json file on the hard disk.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"public class JsonTimesTableStorage implements TimesTableStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTimesTableStorage.class);","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    public JsonTimesTableStorage(Path filePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    public Optional\u003cReadOnlyTimesTable\u003e readTimesTable() throws DataConversionException {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        return readTimesTable(filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"     * Similar to {@link #readTimesTable()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"    public Optional\u003cReadOnlyTimesTable\u003e readTimesTable(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        Optional\u003cJsonSerializableTimesTable\u003e jsonTimesTable \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"                filePath, JsonSerializableTimesTable.class);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        if (!jsonTimesTable.isPresent()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"            return Optional.of(jsonTimesTable.get().toModelType());","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"    public void saveTimesTable(ReadOnlyTimesTable timesTable) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"        saveTimesTable(timesTable, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"     * Similar to {@link #saveTimesTable(ReadOnlyTimesTable)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"    public void saveTimesTable(ReadOnlyTimesTable timesTable, Path filePath) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"        requireNonNull(timesTable);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTimesTable(timesTable), filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":19,"Ongzl":7,"-":54}},{"path":"src/main/java/seedu/times/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.JsonUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ongzl":5,"-":42}},{"path":"src/main/java/seedu/times/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"public interface Storage extends TimesTableStorage, UserPrefsStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    Path getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    Optional\u003cReadOnlyTimesTable\u003e readTimesTable() throws DataConversionException, IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    void saveTimesTable(ReadOnlyTimesTable timesTable) throws IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yourally2":4,"Ongzl":5,"-":23}},{"path":"src/main/java/seedu/times/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":" * Manages storage of TimesTable in local storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private TimesTableStorage timesTableStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code StorageManager} with the given {@code TimesTableStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    public StorageManager(TimesTableStorage timesTableStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        this.timesTableStorage \u003d timesTableStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TimesTable methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"    public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        return timesTableStorage.getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    public Optional\u003cReadOnlyTimesTable\u003e readTimesTable() throws DataConversionException, IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        return readTimesTable(timesTableStorage.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"    public Optional\u003cReadOnlyTimesTable\u003e readTimesTable(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        return timesTableStorage.readTimesTable(filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    public void saveTimesTable(ReadOnlyTimesTable timesTable) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        saveTimesTable(timesTable, timesTableStorage.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"    public void saveTimesTable(ReadOnlyTimesTable timesTable, Path filePath) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        timesTableStorage.saveTimesTable(timesTable, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":16,"Ongzl":6,"-":57}},{"path":"src/main/java/seedu/times/storage/TimesTableStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":" * Represents a storage for {@link TimesTable}.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"public interface TimesTableStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    Path getTimesTableFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"     * Returns TimeTable data as a {@link ReadOnlyTimesTable}.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    Optional\u003cReadOnlyTimesTable\u003e readTimesTable() throws DataConversionException, IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"     * @see #getTimesTableFilePath()","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    Optional\u003cReadOnlyTimesTable\u003e readTimesTable(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"     * Saves the given {@link ReadOnlyTimesTable} to the storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"     * @param timesTable cannot be null.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    void saveTimesTable(ReadOnlyTimesTable timesTable) throws IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"     * @see #saveTimesTable(ReadOnlyTimesTable)","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    void saveTimesTable(ReadOnlyTimesTable timesTable, Path filePath) throws IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yourally2":42,"Ongzl":4}},{"path":"src/main/java/seedu/times/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":" * Represents a storage for {@link seedu.times.model.UserPrefs}.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"     * Saves the given {@link seedu.times.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ongzl":6,"-":30}},{"path":"src/main/java/seedu/times/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"         * @see seedu.times.logic.Logic#execute(String)","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Ongzl":5,"-":80}},{"path":"src/main/java/seedu/times/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-f11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ongzl":2,"bernardwan":1,"-":99}},{"path":"src/main/java/seedu/times/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.CommandObserver;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.Logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.classtab.ClassPanel;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.studenttab.StudentListPanel;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.timetabletab.TimetablePanel;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"public class MainWindow extends UiPart\u003cStage\u003e implements CommandObserver {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    private ClassPanel classPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    private TimetablePanel timetablePanel;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"    private StackPane classListPanelPlaceholder;","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"    private Tab studentsTab;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"    private Tab tuitionClassTab;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"    private StackPane timetablePanelPlaceholder;","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"    private Tab timetableTab;","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"yourally2"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"yourally2"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"yourally2"},"content":"        classPanel \u003d new ClassPanel(logic.getFilteredStudentList(), logic.getFilteredTuitionClassList());","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"yourally2"},"content":"        classListPanelPlaceholder.getChildren().add(classPanel.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"        hideTuitionClassStudentList();","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"        timetablePanel \u003d new TimetablePanel(logic.getFilteredTuitionClassList());","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"        timetablePanelPlaceholder.getChildren().add(timetablePanel.getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":159,"author":{"gitId":"yourally2"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"        studentsTab \u003d new Tab(\"Students\", studentListPanelPlaceholder);","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"        timetableTab \u003d new Tab(\"Timetable\", timetablePanelPlaceholder);","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"yourally2"},"content":"        tuitionClassTab \u003d new Tab(\"Class\", classListPanelPlaceholder);","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"        tabPane.setTabClosingPolicy(TabPane.TabClosingPolicy.UNAVAILABLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"    public void updateClass(Integer indexOfClassToSelect) {","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(indexOfClassToSelect);","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"yourally2"},"content":"        List\u003cTuitionClass\u003e lastShownList \u003d logic.getFilteredTuitionClassList();","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"s7u4rt99"},"content":"        ObservableList\u003cStudent\u003e newStudentList;","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass tuitionClass \u003d lastShownList.get(indexOfClassToSelect);","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"s7u4rt99"},"content":"        newStudentList \u003d logic.getFilteredStudentList().filtered(student -\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"s7u4rt99"},"content":"                tuitionClass.containsStudent(student.getName()));","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"yourally2"},"content":"        classPanel.setItems(newStudentList);","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"s7u4rt99"},"content":"    public void hideTuitionClassStudentList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"s7u4rt99"},"content":"        ObservableList\u003cStudent\u003e newStudentList \u003d logic.getFilteredStudentList().filtered(student -\u003e false);","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"s7u4rt99"},"content":"        classPanel.setItems(newStudentList);","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"s7u4rt99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"s7u4rt99"},"content":"    public void updateView(TabName tabToView) {","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(tabToView);","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"s7u4rt99"},"content":"        tabPane.getSelectionModel().select(tabToView.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"s7u4rt99"},"content":"        logger.info(\"Switched to \" + tabToView + \" because of updateView()\");","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":240,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"Ongzl"},"content":"     * @see seedu.times.logic.Logic#execute(String)","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yourally2":22,"s7u4rt99":43,"Ongzl":21,"-":181}},{"path":"src/main/java/seedu/times/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ongzl":1,"-":27}},{"path":"src/main/java/seedu/times/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":27}},{"path":"src/main/java/seedu/times/ui/StudentListViewCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.studenttab.StudentCard;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":" * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"public class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"        super.updateItem(student, empty);","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"        if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            setGraphic(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"            setText(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"            setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":19,"Ongzl":3}},{"path":"src/main/java/seedu/times/ui/TabName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * Represents the name of the tabs of Timestable.","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public enum TabName {","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    STUDENTS(0),","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    CLASSES(1),","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    TIMETABLE(2);","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    private final int index;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    TabName(int index) {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the index of the tab.","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     * @return Index of the tab in Timestable","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public int getIndex() {","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        return index;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"s7u4rt99":24,"Ongzl":1}},{"path":"src/main/java/seedu/times/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ongzl":1,"-":12}},{"path":"src/main/java/seedu/times/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.MainApp;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.StringUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.Logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/TimestableLogo.png\";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"            logic.setCommandObserver(this.mainWindow);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/RedTheme.css\");","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":1,"Ongzl":6,"-":82}},{"path":"src/main/java/seedu/times/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.MainApp;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ongzl":2,"-":85}},{"path":"src/main/java/seedu/times/ui/classtab/ClassPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":" * A UI for the Class Panel Tab.","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"public class ClassPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/ClassPanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClassPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    private StackPane tuitionClassListPlaceholder;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    private StackPane studentListPlaceholder;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    // Labels","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    private Label classLabel;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    private Label studentLabel;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    private final StudentClassPanel studentClassPanel;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    private final TuitionClassPanel tuitionClassPanel;","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    public ClassPanel(ObservableList\u003cStudent\u003e studentList, ObservableList\u003cTuitionClass\u003e tuitionClassList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        //right side","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        this.studentClassPanel \u003d new StudentClassPanel(studentList);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"        //left side","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        this.tuitionClassPanel \u003d new TuitionClassPanel(studentList, tuitionClassList);","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"        tuitionClassPanel.setStudentClassList(studentClassPanel.getStudentListView());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        studentListPlaceholder.getChildren().add(studentClassPanel.getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        tuitionClassListPlaceholder.getChildren().add(tuitionClassPanel.getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        // Set UI stuff","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        classLabel.setText(\"Your classes\");","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        studentLabel.setText(\"Students\");","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        logger.info(\"ClassPanel tab opened\");","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"    public void setItems(ObservableList\u003cStudent\u003e studentObservableList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"        studentClassPanel.setItems(studentObservableList);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":50,"s7u4rt99":10,"Ongzl":5}},{"path":"src/main/java/seedu/times/ui/classtab/StudentClassPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"public class StudentClassPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/StudentClassListPanel.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"     * Represents a Panel for the Students in a Tuition Class.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"     * @param studentList The studentList that it is supposed to display.","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    public StudentClassPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListClassTabViewCell());","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    public void setItems(ObservableList\u003cStudent\u003e studentObservableList) {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        studentListView.setItems(studentObservableList);","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    public ListView\u003cStudent\u003e getStudentListView() {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        return studentListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":27,"s7u4rt99":5,"Ongzl":3}},{"path":"src/main/java/seedu/times/ui/classtab/StudentClassTabCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"public class StudentClassTabCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/StudentListCard.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static final String ADDRESS_FIELD \u003d \"Address: \";","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private static final String MOBILE_FIELD \u003d \"Mobile: \";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private static final String EMAIL_FIELD \u003d \"Email: \";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    public final Student student;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    // Student","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code Student} with the given {@code Student} and index to display.","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public StudentClassTabCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        // Student","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        phone.setText(MOBILE_FIELD + student.getPhone().value);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        address.setText(ADDRESS_FIELD + student.getAddress().value);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        email.setText(EMAIL_FIELD + student.getEmail().value);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        if (!(other instanceof StudentClassTabCard)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        StudentClassTabCard card \u003d (StudentClassTabCard) other;","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":21,"Ongzl":3,"-":61}},{"path":"src/main/java/seedu/times/ui/classtab/StudentListClassTabViewCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":" * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"public class StudentListClassTabViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"    protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"        super.updateItem(student, empty);","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"        if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"            setGraphic(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"            setText(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"            setGraphic(new StudentClassTabCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":19,"Ongzl":2}},{"path":"src/main/java/seedu/times/ui/classtab/TuitionClassCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"public class TuitionClassCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/TuitionClassListCard.fxml\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"    private static final Character DOLLAR_SIGN \u003d \u0027$\u0027;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    private static final String PER_HOUR \u003d \"/hr\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String CLASS_TIMING_FIELD \u003d \"Timing: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static final String LOCATION_FIELD \u003d \"Location: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    private static final String RATE_FIELD \u003d \"Rate: \";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private static final String CLASS_SIZE_FIELD \u003d \"Size: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    public final TuitionClass tuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    // TuitionClass","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    private Label className;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    private Label id;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"    private Label classTiming;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    private Label classLocation;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    private Label rate;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"    private Label classSize;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    private final ListView\u003cStudent\u003e tuitionClassListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"     * Represents a Tuition Card to be shown in the GUI.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClass The class to display.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"     * @param displayedIndex The index to display.","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    public TuitionClassCard(TuitionClass tuitionClass, int displayedIndex,","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"                            ObservableList\u003cStudent\u003e studentList, ListView\u003cStudent\u003e tuitionClassListView) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"        super(FXML);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        this.tuitionClass \u003d tuitionClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        this.tuitionClassListView \u003d tuitionClassListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        int index \u003d tuitionClassListView.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"        tuitionClassListView.getSelectionModel().clearSelection(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        // TuitionClass","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        className.setText(tuitionClass.getClassName().className);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        classTiming.setText(CLASS_TIMING_FIELD + tuitionClass.getClassTiming().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        classLocation.setText(LOCATION_FIELD + tuitionClass.getLocation().value);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        rate.setText(RATE_FIELD + DOLLAR_SIGN + tuitionClass.getRate().value + PER_HOUR);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        classSize.setText(CLASS_SIZE_FIELD + String.valueOf(tuitionClass.getStudentList().size()));","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"    private void onMouseClick() {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        selectTuitionClass();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"     * Visually selects the tuition class and shows the Student List associated to it.","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"    public void selectTuitionClass() {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        ObservableList\u003cStudent\u003e newStudentList \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"                studentList.filtered(student -\u003e tuitionClass.containsStudent(student.getName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setItems(newStudentList);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setCellFactory(listView -\u003e new StudentListClassTabViewCell());","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"        if (!(other instanceof TuitionClassCard)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        TuitionClassCard card \u003d (TuitionClassCard) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"                \u0026\u0026 tuitionClass.equals(card.tuitionClass);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":37,"s7u4rt99":3,"Ongzl":63}},{"path":"src/main/java/seedu/times/ui/classtab/TuitionClassListViewCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":" * Custom {@code ListCell} that displays the graphics of a {@code TuitionClass} using a {@code TuitionClassCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"public class TuitionClassListViewCell extends ListCell\u003cTuitionClass\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    private final ListView\u003cStudent\u003e studentClassListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"     * Represents the cell displaying the tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"     * @param studentList The student list associated with the tuition class.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     * @param studentClassListView The UI associated with the tuition class.","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    public TuitionClassListViewCell(ObservableList\u003cStudent\u003e studentList, ListView\u003cStudent\u003e studentClassListView) {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        this.studentClassListView \u003d studentClassListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    protected void updateItem(TuitionClass tuitionClass, boolean empty) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        super.updateItem(tuitionClass, empty);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        if (empty || tuitionClass \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"            setGraphic(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"            setText(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"            setGraphic(new TuitionClassCard(tuitionClass, getIndex() + 1, studentList,","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"                    studentClassListView).getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":32,"s7u4rt99":6,"Ongzl":3}},{"path":"src/main/java/seedu/times/ui/classtab/TuitionClassPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.classtab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"public class TuitionClassPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/TuitionClassListPanel.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private final ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    private ListView\u003cTuitionClass\u003e tuitionClassListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"     * Represents a Panel for the Tuition Class.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"     * @param studentList The studentList is required for the Panel to filter out the students in the class.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClassList The tuitionClassList is required to show the classes in the panel.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    public TuitionClassPanel(ObservableList\u003cStudent\u003e studentList, ObservableList\u003cTuitionClass\u003e tuitionClassList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setItems(tuitionClassList);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"     * Creates the students given the studentListView.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"     * @param studentListView The given studentListView to create the students with.","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"    public void setStudentClassList(ListView\u003cStudent\u003e studentListView) {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        tuitionClassListView.setCellFactory(listView -\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"                new TuitionClassListViewCell(studentList, studentListView));","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":36,"Ongzl":4}},{"path":"src/main/java/seedu/times/ui/studenttab/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.studenttab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    private static final String ADDRESS_FIELD \u003d \"Address: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    private static final String MOBILE_FIELD \u003d \"Mobile: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    private static final String EMAIL_FIELD \u003d \"Email: \";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    public final Student student;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    // Student","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    // Nok","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    private Label nokName;","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"    private Label nokPhone;","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    private Label nokAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    private Label nokEmail;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code Student} with the given {@code Student} and index to display.","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        // Student","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        phone.setText(MOBILE_FIELD + student.getPhone().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"        address.setText(ADDRESS_FIELD + student.getAddress().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        email.setText(EMAIL_FIELD + student.getEmail().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        // Nok","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        if (student.getNok() !\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"            nokName.setText(student.getNok().getName().fullName);","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"            nokPhone.setText(student.getNok().getPhone().value);","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"            nokAddress.setText(student.getNok().getAddress().value);","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"            nokEmail.setText(student.getNok().getEmail().value);","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"            nokName.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"            nokPhone.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"            nokAddress.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"            nokEmail.setText(\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yourally2":33,"s7u4rt99":6,"Ongzl":8,"softmagnet":1,"-":61}},{"path":"src/main/java/seedu/times/ui/studenttab/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.studenttab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.StudentListViewCell;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"classTab/StudentClassListPanel.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yourally2":8,"Ongzl":5,"-":19}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableDay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"// Solution below adapted from","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"// https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/java/clzzz/helper/ui/calendar/CalendarDate.java","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * A Ui to display the Days at the left side of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableDay extends TimetableRegion {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    private static final int WIDTH \u003d 50;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableDay.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    private Label day;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new Timetable Day.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * @param dayStr Day to be created.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableDay(String dayStr) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, WIDTH);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        day.setText(dayStr);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the width of the TimetableDay UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"     * @return Width of the Timetable Day UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    public static int getWidth() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        return WIDTH;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":36,"Ongzl":1}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableEmptySlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"// Solution below adapted from","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"// https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/java/clzzz/helper/ui/calendar/CalendarBuffer.java","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the empty slot with no tuition class in the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableEmptySlot extends TimetableRegion {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableEmptySlot.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the empty slot with no tuition class.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     * @param startTime Start Timing of empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     * @param endTime End Timing of empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableEmptySlot(LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, startTime.until(endTime, ChronoUnit.MINUTES));","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":22,"Ongzl":1}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableHeader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the header of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableHeader extends TimetableRegion {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableHeader.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    private Label headerLabel;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new Timetable header with a string as its input and its width.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerStr String to be displayed on the header.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     * @param width Width of the header.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableHeader(String headerStr, int width) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, width);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        this.headerLabel.setText(headerStr);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":24,"Ongzl":1}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableHeaderLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the header label for the timetable.","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableHeaderLabel extends TimetableHeader {","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new TimetableHeaderLabel with a string as its input and its width.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerStr String to be displayed on the header.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"     * @param width Width of the header.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableHeaderLabel(String headerStr, int width) {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        super(headerStr, width);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":17,"Ongzl":1}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableHeaderTiming.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the header timing of the timetable.","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableHeaderTiming extends TimetableHeader {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    private static final int TIMETABLE_HEADER_SLOT_LENGTH \u003d 60;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a new TimetableHeaderTiming with a start time and end time.","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerStartTime Start time of the header.","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"     * @param headerEndTime End time of the header.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableHeaderTiming(LocalTime headerStartTime, LocalTime headerEndTime) {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        super(headerStartTime.toString() + \"-\" + headerEndTime.toString(), TIMETABLE_HEADER_SLOT_LENGTH);","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"s7u4rt99":21,"Ongzl":1}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetablePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"// Solution below adapted from","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"// https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/java/clzzz/helper/ui/calendar/CalendarPanel.java","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the Timetable Panel Tab.","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"public class TimetablePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetablePanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    private static final LocalTime DEFAULT_LATEST_HOUR \u003d LocalTime.parse(\"18:00\",","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    private static final LocalTime DEFAULT_EARLIEST_HOUR \u003d LocalTime.parse(\"09:00\",","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TimetablePanel.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    private GridPane timetable;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a {@code TimetablePanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    public TimetablePanel(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"        build(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        timetable.maxWidth(1539);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        if (tuitionClasses !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"            tuitionClasses.addListener(new ListChangeListener\u003cTuitionClass\u003e() {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"                @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                public void onChanged(Change\u003c? extends TuitionClass\u003e change) {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"                    while (change.next()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"                        build(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"                        logger.info(\"Changes made to uniqueClassList, rebuilding timetable.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"                    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"            });","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the UI of the timetable panel.","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClasses List of tuitionClass to retrieve the tuition class timings from for the timetable.","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    public void build(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(tuitionClasses);","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        clearTimetable();","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        buildHeader(tuitionClasses);","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"        buildDays();","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        if (tuitionClasses.isEmpty()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"            logger.info(\"No class in uniqueClassList.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"            logger.info(\"Building timetable from uniqueClassList.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"            buildClasses(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the header panel for the timetable panel ui.","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClasses List of tuitionClasses to retrieve the earliest tuition class start timing and","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"     *                       latest end timing.","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"    public void buildHeader(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(tuitionClasses);","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime earliestHour \u003d tuitionClasses.size() \u003d\u003d 0 ? DEFAULT_EARLIEST_HOUR : getEarliestHour(tuitionClasses);","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime latestHour \u003d tuitionClasses.size() \u003d\u003d 0 ? DEFAULT_LATEST_HOUR : getLatestHour(tuitionClasses);","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableHeaderLabel(\"Time Slots\", TimetableDay.getWidth()).getRoot(),","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"                0, 0, 50, 1);","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        int columnIndex \u003d TimetableDay.getWidth();","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"        while (earliestHour.isBefore(latestHour) || earliestHour.isBefore(DEFAULT_LATEST_HOUR)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"            if (earliestHour.equals(LocalTime.parse(\"23:30\", DateTimeFormatter.ofPattern(\"HH:mm\")))) {","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"                timetable.add(new TimetableHeaderTiming(earliestHour, earliestHour.plusMinutes(29)).getRoot(),","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"                        columnIndex, 0, 15, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"                break;","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"                timetable.add(new TimetableHeaderTiming(earliestHour, earliestHour.plusMinutes(30)).getRoot(),","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"                        columnIndex, 0, 15, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"            columnIndex +\u003d 30;","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"            earliestHour \u003d earliestHour.plusMinutes(30);","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the tuition class slot UI for the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClasses List of tuition classes to retrieve the tuition class timings.","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"    public void buildClasses(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"        requireNonNull(tuitionClasses);","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        LocalTime earliestHour \u003d getEarliestHour(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"        //earliest time is after the date","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"        ArrayList\u003cTuitionClass\u003e sortedList \u003d new ArrayList\u003c\u003e(tuitionClasses);","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"        sortedList.sort(Comparator.comparing(TuitionClass::getClassTiming));","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"        // build the timetable","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime previousTime \u003d earliestHour;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c sortedList.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"            TuitionClass currentTuitionClass \u003d sortedList.get(i);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"            if (currentTuitionClass.isAfter(previousTime)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"                addEmptySlot(previousTime, currentTuitionClass, getColumnIndex(earliestHour, previousTime));","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"            addTuitionClassSlot(currentTuitionClass, earliestHour);","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"            if (i !\u003d sortedList.size() - 1","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"s7u4rt99"},"content":"                    \u0026\u0026 currentTuitionClass.getDayToInt() \u003c sortedList.get(i + 1).getDayToInt()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"s7u4rt99"},"content":"                previousTime \u003d earliestHour;","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"                previousTime \u003d currentTuitionClass.getEndTime();","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a tuition class slot to be displayed on the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClass TuitionClass to add","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"s7u4rt99"},"content":"     * @param earliestTime Earliest class start time of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"    private void addTuitionClassSlot(TuitionClass tuitionClass, LocalTime earliestTime) {","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"        assert !tuitionClass.getStartTime().isBefore(earliestTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"        TimetableTuitionClassSlot timetableTuitionClassSlot \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"                new TimetableTuitionClassSlot(tuitionClass);","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"        int duration \u003d getTimeDifference(tuitionClass.getStartTime(), tuitionClass.getEndTime());","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"        int columnIndex \u003d getColumnIndex(earliestTime, tuitionClass.getStartTime());","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(timetableTuitionClassSlot.getRoot(), columnIndex, tuitionClass.getDayToInt(),","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"                duration, 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the column index which the tuition class timing starts from on the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"     * @param earliestTime Earliest class start time of the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"     * @param timeToIndex Time which we want to find the column index of.","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"     * @return Column index of the timeToIndex.","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"    private int getColumnIndex(LocalTime earliestTime, LocalTime timeToIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"        return TimetableDay.getWidth() + getTimeDifference(earliestTime, timeToIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"     * Creates an empty slot to be displayed on the timetable.","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"     * @param startTime Start Time of the empty slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClass TuitionClass after the empty slot.","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"     * @param column Column to add the empty slot to.","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"    private void addEmptySlot(LocalTime startTime, TuitionClass tuitionClass, int column) {","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"        LocalTime endTime \u003d tuitionClass.getStartTime();","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"        assert startTime.isBefore(endTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"        TimetableEmptySlot emptySlot \u003d new TimetableEmptySlot(startTime, endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"        int duration \u003d getTimeDifference(startTime, endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(emptySlot.getRoot(), column, tuitionClass.getDayToInt(), duration, 1);","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the time difference from two timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"     * @param startTime Start time of the two timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"     * @param endTime End time of the two timings.","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"     * @return Time difference between the start time and the end time.","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"    public int getTimeDifference(LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"        assert startTime.isBefore(endTime) || startTime.equals(endTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"        return (int) startTime.until(endTime, ChronoUnit.MINUTES);","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the earliest hour of the earliest class timing from the list of students.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClasses List of tuition classes to get the earliest hour from.","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"s7u4rt99"},"content":"     * @return Earliest hour of the earliest class timing.","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"yourally2"},"content":"    public LocalTime getEarliestHour(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"yourally2"},"content":"        LocalTime earliestTime \u003d getEarliestTime(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"s7u4rt99"},"content":"        if (earliestTime.isAfter(DEFAULT_EARLIEST_HOUR)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":221,"author":{"gitId":"s7u4rt99"},"content":"            return DEFAULT_EARLIEST_HOUR;","lastModifiedDate":"2021-11-07"},{"lineNumber":222,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"s7u4rt99"},"content":"        String earliestTimeStr \u003d earliestTime.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"s7u4rt99"},"content":"        String earliestHourWithoutMinutes \u003d earliestTimeStr.split(\":\")[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"s7u4rt99"},"content":"        String earliestHourStr \u003d earliestHourWithoutMinutes + \":00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"s7u4rt99"},"content":"        return LocalTime.parse(earliestHourStr, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the earliest class timing of the list of students.","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"     * @param tuitionClasses List of students to get the earliest class timing from.","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"softmagnet"},"content":"     * @return Earliest class timing from StudentNameList.","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"yourally2"},"content":"    public LocalTime getEarliestTime(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"yourally2"},"content":"        return tuitionClasses.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"yourally2"},"content":"                .map(TuitionClass::getStartTiming)","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"s7u4rt99"},"content":"                .reduce((classTime1, classTime2) -\u003e classTime1.isBefore(classTime2) ? classTime1 : classTime2)","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"s7u4rt99"},"content":"                .get();","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the latest hour which all classes has ended.","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"softmagnet"},"content":"     * @param tuitionClasses List of students to get the latest hour from.","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"s7u4rt99"},"content":"     * @return Latest hour which all the classes has ended.","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"yourally2"},"content":"    public LocalTime getLatestHour(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"yourally2"},"content":"        LocalTime latestTime \u003d getLatestTime(tuitionClasses);","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"s7u4rt99"},"content":"        if (latestTime.isBefore(DEFAULT_LATEST_HOUR)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"s7u4rt99"},"content":"            return DEFAULT_LATEST_HOUR;","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"s7u4rt99"},"content":"        String latestTimeStr \u003d latestTime.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"        String latestHourMinutes \u003d latestTimeStr.split(\":\")[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"        if (latestHourMinutes.equals(\"00\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"s7u4rt99"},"content":"            return latestTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"s7u4rt99"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"            String latestHourWithoutMinutes \u003d latestTimeStr.split(\":\")[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"s7u4rt99"},"content":"            String latestHourStr \u003d latestHourWithoutMinutes + \":00\";","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"s7u4rt99"},"content":"            LocalTime latestHour \u003d LocalTime.parse(latestHourStr, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"s7u4rt99"},"content":"            return latestHour.equals(LocalTime.parse(\"23:00\", DateTimeFormatter.ofPattern(\"HH:mm\")))","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"s7u4rt99"},"content":"                    ? latestHour.plusMinutes(59)","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"s7u4rt99"},"content":"                    : latestHour.plusHours(1);","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"s7u4rt99"},"content":"     * Gets the latest class end time from the list of students.","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"softmagnet"},"content":"     * @param tuitionClasses List of students to get the latest class end time from.","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"s7u4rt99"},"content":"     * @return Latest class end time.","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"yourally2"},"content":"    public LocalTime getLatestTime(ObservableList\u003cTuitionClass\u003e tuitionClasses) {","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"yourally2"},"content":"        assert tuitionClasses !\u003d null \u0026\u0026 tuitionClasses.size() \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"yourally2"},"content":"        return tuitionClasses.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"yourally2"},"content":"                .map(TuitionClass::getEndTiming)","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"s7u4rt99"},"content":"                .reduce((classTime1, classTime2) -\u003e classTime1.isAfter(classTime2) ? classTime1 : classTime2)","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"s7u4rt99"},"content":"                .get();","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the days side panel of the timetable panel ui.","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"s7u4rt99"},"content":"    public void buildDays() {","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Mon\").getRoot(), 0, 1, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Tue\").getRoot(), 0, 2, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Wed\").getRoot(), 0, 3, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Thu\").getRoot(), 0, 4, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Fri\").getRoot(), 0, 5, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Sat\").getRoot(), 0, 6, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"s7u4rt99"},"content":"        timetable.add(new TimetableDay(\"Sun\").getRoot(), 0, 7, 50, 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":305,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":306,"author":{"gitId":"s7u4rt99"},"content":"     * Clears the previously constructed timetable.","lastModifiedDate":"2021-10-18"},{"lineNumber":307,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"s7u4rt99"},"content":"    private void clearTimetable() {","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"s7u4rt99"},"content":"        timetable.getChildren().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":310,"author":{"gitId":"s7u4rt99"},"content":"        timetable.getRowConstraints().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":311,"author":{"gitId":"s7u4rt99"},"content":"        timetable.getColumnConstraints().clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":312,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":313,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yourally2":29,"s7u4rt99":277,"Ongzl":4,"softmagnet":3}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableRegion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.UiPart;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"// Solution below adapted from","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"// https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/java/clzzz/helper/ui/calendar/CalendarRegion.java","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":" * A UI for the timetable region.","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableRegion extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    private HBox slot;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"     * Creates the timetable region UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"     * @param fxml Specified file path of the fxml to construct the timetable region.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"     * @param scale Amount to scale the Ui by.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableRegion(String fxml, long scale) {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        super(fxml);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        slot.setPrefWidth(scale * 2);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        slot.setMinWidth(scale * 2);","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":28,"Ongzl":2}},{"path":"src/main/java/seedu/times/ui/timetabletab/TimetableTuitionClassSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui.timetabletab;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"// Solution below adapted from","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"// https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/java/clzzz/helper/ui/calendar/CalendarSlot.java","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":" * Ui for the timetable tuition class slot.","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"public class TimetableTuitionClassSlot extends TimetableRegion {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    private static final String FXML \u003d \"timetableTab/TimetableTuitionClassSlot.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    private Label time;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    private Label className;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * Creates a timetable tuition class slot on the Timetable Ui.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClass tuitionClass to be built into the Timetable Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public TimetableTuitionClassSlot(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        super(FXML, tuitionClass.getStartTime().until(tuitionClass.getEndTime(), ChronoUnit.MINUTES));","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        className.setText(tuitionClass.getClassNameString());","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        time.setText(tuitionClass.getClassTiming().getClassTiming());","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":32,"Ongzl":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003cStackPane styleClass\u003d\"command-box\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"yourally2":1,"-":8}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"    \u003cImage url\u003d\"@/images/TimestableLogo.png\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"      \u003cHBox alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: #7e4147;\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"yourally2":2,"Ongzl":1,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"         title\u003d\"TimesTable\" minWidth\u003d\"1280\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    \u003cImage url\u003d\"@/images/TimestableLogo.png\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        \u003cURL value\u003d\"@RedTheme.css\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        \u003cURL value\u003d\"@timetableTab/Timetable.css\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        \u003cURL value\u003d\"@classTab/ClassPanel.css\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"                   minHeight\u003d\"200\" prefHeight\u003d\"200\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        \u003cTabPane fx:id\u003d\"tabPane\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"          \u003cTab fx:id\u003d\"studentsTab\" text\u003d\"Students\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"            \u003cVBox fx:id\u003d\"studentNameList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"                  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"              \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"          \u003cTab fx:id\u003d\"tuitionClassTab\" text\u003d\"Classes\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"            \u003cVBox fx:id\u003d\"tuitionClassList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"                  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"              \u003cStackPane fx:id\u003d\"classListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"          \u003cTab fx:id\u003d\"timetableTab\" text\u003d\"Timetable\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"            \u003cVBox fx:id\u003d\"timetableList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"                  VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: derive(#722F37, 20%)\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"              \u003cStackPane fx:id\u003d\"timetablePanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: derive(#722F37, 20%)\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yourally2":7,"s7u4rt99":20,"Ongzl":8,"softmagnet":1,"-":54}},{"path":"src/main/resources/view/RedTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"/* Colors */","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"/*  main-color: #722F37;*/","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"/*  secondary-color: #7e4147;*/","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"/*  third-color: #86565d */","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"/*  selected-color: #7a2a33 */","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"    background-color: #7e4147; /* Used in the default.html file */","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    -fx-text-fill: #484848;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    -fx-text-fill: #797979;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    -fx-base: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    -fx-control-inner-background: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"    -fx-text-fill: #7e4147;","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"    -fx-border-color: transparent transparent transparent #86565d;","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #7e4147;","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #86565d;","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #7a2a33;","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"    -fx-border-color: #7a2a33;","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"yourally2"},"content":"     -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"yourally2"},"content":".command-box {","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #7e4147;","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"     -fx-background-color: derive(#722F37, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"     -fx-border-color: derive(#7e4147, 10%);","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 30%);","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 30%) !important;","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 30%);","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"yourally2"},"content":"    -fx-border-color: derive(#7e4147, 25%);","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#7e4147, 30%);","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"yourally2"},"content":"    -fx-border-color: derive(#722F37, 30%);","lastModifiedDate":"2021-10-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":196,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 30%);","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 50%);","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"yourally2"},"content":".menu-button:hover, .menu-button:focused, .menu-button:showing {","lastModifiedDate":"2021-10-30"},{"lineNumber":223,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":224,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":225,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":226,"author":{"gitId":"yourally2"},"content":".menu-item:focused {","lastModifiedDate":"2021-10-30"},{"lineNumber":227,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"yourally2"},"content":"  -fx-text-fill: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 25%);","lastModifiedDate":"2021-10-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 50%);","lastModifiedDate":"2021-10-30"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #722F37;","lastModifiedDate":"2021-10-30"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"s7u4rt99"},"content":"#filterField, #personListPanel, #personWebpage #timetablePanel {","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: derive(#722F37, 10%);","lastModifiedDate":"2021-10-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"s7u4rt99"},"content":".tab-header-background{","lastModifiedDate":"2021-10-17"},{"lineNumber":361,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-17"},{"lineNumber":362,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":363,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":364,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":365,"author":{"gitId":"s7u4rt99"},"content":".tab-label {","lastModifiedDate":"2021-10-17"},{"lineNumber":366,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-17"},{"lineNumber":367,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":368,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":369,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #a85862;","lastModifiedDate":"2021-10-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":384,"author":{"gitId":"yourally2"},"content":"/* For tab css */","lastModifiedDate":"2021-10-29"},{"lineNumber":385,"author":{"gitId":"yourally2"},"content":".tab-header-background {","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"yourally2"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":388,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":389,"author":{"gitId":"yourally2"},"content":".tab-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"yourally2"},"content":"    -fx-tab-min-width: 90px;","lastModifiedDate":"2021-10-29"},{"lineNumber":391,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":392,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":393,"author":{"gitId":"yourally2"},"content":".tab {","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #a85862;","lastModifiedDate":"2021-10-30"},{"lineNumber":395,"author":{"gitId":"yourally2"},"content":"    -fx-pref-height: 35;","lastModifiedDate":"2021-10-30"},{"lineNumber":396,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"yourally2"},"content":".tab:selected {","lastModifiedDate":"2021-10-29"},{"lineNumber":399,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #b74159;","lastModifiedDate":"2021-10-30"},{"lineNumber":400,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"yourally2"},"content":".tab:hover {","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"yourally2"},"content":"    -fx-background-color: #c27882;","lastModifiedDate":"2021-10-30"},{"lineNumber":404,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":405,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":406,"author":{"gitId":"yourally2"},"content":"/* Reused from https://stackoverflow.com/a/34247033/12499338 */","lastModifiedDate":"2021-10-30"},{"lineNumber":407,"author":{"gitId":"yourally2"},"content":".tab-pane:focused \u003e .tab-header-area \u003e .headers-region \u003e .tab:selected .focus-indicator {","lastModifiedDate":"2021-10-30"},{"lineNumber":408,"author":{"gitId":"yourally2"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-30"},{"lineNumber":409,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"yourally2":84,"s7u4rt99":12,"-":313}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        \u003cInsets top\u003d\"21.5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"nokName\" text\u003d\"\\$nok_first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"      \u003cFlowPane /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_phone\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_address\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_email\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":10,"s7u4rt99":2,"-":36}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":1,"-":7}},{"path":"src/main/resources/view/classTab/ClassPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":".studentLabel, .classLabel {","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"    -fx-padding: 15;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"    -fx-font-size: 25;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"    -fx-label-padding: 0 10 0 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":6}},{"path":"src/main/resources/view/classTab/ClassPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"  \u003cVBox fx:id\u003d\"displayInformationViewContainer\" styleClass\u003d\"pane-transparent\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"    \u003cListView fx:id\u003d\"displayInformationView\" minWidth\u003d\"0\" prefWidth\u003d\"0\" HBox.hgrow\u003d\"NEVER\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"  \u003cHBox VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    \u003cVBox fx:id\u003d\"classes\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"500\"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"          VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"classLabel\" styleClass\u003d\"classLabel\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"      \u003cStackPane fx:id\u003d\"tuitionClassListPlaceholder\" styleClass\u003d\"pane-transparent\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    \u003cVBox fx:id\u003d\"students\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"500\"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"          VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"studentLabel\" styleClass\u003d\"studentLabel\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"      \u003cStackPane fx:id\u003d\"studentListPlaceholder\" styleClass\u003d\"pane-transparent\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"yourally2":33}},{"path":"src/main/resources/view/classTab/StudentCardClassTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        \u003cInsets top\u003d\"21.5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        \u003cLabel fx:id\u003d\"nokName\" text\u003d\"\\$nok_first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"      \u003cFlowPane /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_phone\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_address\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"      \u003cLabel fx:id\u003d\"nokEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nok_email\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"yourally2":48}},{"path":"src/main/resources/view/classTab/StudentClassListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"    \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":8}},{"path":"src/main/resources/view/classTab/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yourally2":8}},{"path":"src/main/resources/view/classTab/TuitionClassListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" onMouseClicked\u003d\"#onMouseClick\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"                \u003cLabel fx:id\u003d\"className\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"classTiming\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classTiming\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"classLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"rate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rate\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"            \u003cLabel fx:id\u003d\"classSize\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classSize\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yourally2":2,"Ongzl":34}},{"path":"src/main/resources/view/classTab/TuitionClassListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"    \u003cListView fx:id\u003d\"tuitionClassListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Ongzl":8}},{"path":"src/main/resources/view/timetableTab/Timetable.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":".timetable-day {","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 25;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":".timetable-day-box {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    -fx-border-color: #C0888E;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":".timetable-scroll {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"    -fx-fit-to-height: true;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    -fx-max-width: 3750;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":".timetable-class-slot-box {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #C26565;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 15;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    -fx-border-color: #C6949A;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":".timetable-time-panel {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: #BA7C83;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 10;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    -fx-max-height: 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-alignment: right;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    -fx-border-color: #C6949A;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":".timetable-label {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":".timetable-empty-slot-box {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-color: derive(#7e4147, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-insets: 5 0 5 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"    -fx-padding: 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"s7u4rt99":43}},{"path":"src/main/resources/view/timetableTab/TimetableDay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--Solution below adapted from--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/resources/view/calendar/CalendarDate.fxml--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" alignment\u003d\"CENTER\" styleClass\u003d\"timetable-day-box\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox alignment\u003d\"CENTER\" \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"day\" styleClass\u003d\"timetable-day\" text\u003d\"\\$day\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":13}},{"path":"src/main/resources/view/timetableTab/TimetableEmptySlot.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--Solution below adapted from--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/resources/view/calendar/CalendarBuffer.fxml--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"      styleClass\u003d\"timetable-empty-slot-box\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox prefHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":10}},{"path":"src/main/resources/view/timetableTab/TimetableHeader.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" styleClass\u003d\"timetable-time-panel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"headerLabel\" styleClass\u003d\"timetable-label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"s7u4rt99":10}},{"path":"src/main/resources/view/timetableTab/TimetablePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--Solution below adapted from--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/resources/view/calendar/CalendarPanel.fxml--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"timetable-scroll\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"1000\" style\u003d\"-fx-background-color: derive(#7e4147, 20%)\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"        \u003cGridPane fx:id\u003d\"timetable\" VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"2750\" style\u003d\"-fx-background-color: derive(#7e4147, 20%)\"/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":13}},{"path":"src/main/resources/view/timetableTab/TimetableTuitionClassSlot.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7u4rt99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--Solution below adapted from--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"\u003c!--https://github.com/AY1920S2-CS2103-W15-4/main/blob/master/src/main/resources/view/calendar/CalendarSlot.fxml--\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"\u003cHBox fx:id\u003d\"slot\" styleClass\u003d\"timetable-class-slot-box\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"    \u003cVBox prefHeight\u003d\"50\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"className\" wrapText\u003d\"true\" styleClass\u003d\"timetable-label\" text\u003d\"\\$className\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"        \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"timetable-label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"s7u4rt99":13}},{"path":"src/test/java/seedu/times/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Ongzl":1,"-":57}},{"path":"src/test/java/seedu/times/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Ongzl":1,"-":26}},{"path":"src/test/java/seedu/times/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":2,"-":133}},{"path":"src/test/java/seedu/times/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.core.index;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Ongzl":2,"-":58}},{"path":"src/test/java/seedu/times/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Ongzl":2,"-":34}},{"path":"src/test/java/seedu/times/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Ongzl":3,"-":105}},{"path":"src/test/java/seedu/times/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Config;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ongzl":4,"-":112}},{"path":"src/test/java/seedu/times/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":2,"-":21}},{"path":"src/test/java/seedu/times/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.SerializableTestClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TestUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":3,"-":42}},{"path":"src/test/java/seedu/times/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.commons.util;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Ongzl":2,"-":141}},{"path":"src/test/java/seedu/times/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.NAME_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PREFIX_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ListCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.JsonTimesTableStorage;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"import seedu.times.storage.StorageManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        JsonTimesTableStorage timesTableStorage \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"                new JsonTimesTableStorage(temporaryFolder.resolve(\"timestable.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        StorageManager storage \u003d new StorageManager(timesTableStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        // Setup LogicManager with JsonTimesTableIoExceptionThrowingStub","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        JsonTimesTableStorage timesTableStorage \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"                new JsonTimesTableIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTimesTable.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        StorageManager storage \u003d new StorageManager(timesTableStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"                + ADDRESS_DESC_AMY + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"                + ADDRESS_DESC_NOK;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        Student expectedStudent \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        //expectedModel.addTuitionClass(expectedStudent.getClassList().get(0));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"yourally2"},"content":"    private static class JsonTimesTableIoExceptionThrowingStub extends JsonTimesTableStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"        private JsonTimesTableIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"yourally2"},"content":"        public void saveTimesTable(ReadOnlyTimesTable timestable, Path filePath) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yourally2":15,"Ongzl":34,"softmagnet":3,"-":122}},{"path":"src/test/java/seedu/times/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        Student studentInList \u003d model.getTimesTable().getStudentList().get(0);","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        assertCommandFailure(new AddCommand(studentInList), model,","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yourally2":7,"Ongzl":11,"-":28}},{"path":"src/test/java/seedu/times/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.personsAdded);","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        Student validStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        Student alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        Student bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"        public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        public void setTimesTableFilePath(Path timesTableFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"        public void setTimesTable(ReadOnlyTimesTable newData) {","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"yourally2"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"        public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"        public void deleteTuitionClass(TuitionClass target) {","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"yourally2"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"yourally2"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"        public void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"        public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"        public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"        public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"        public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"        public void updateClassStudentLists(Name newName, Name oldName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"        public void sortStudents(Comparator\u003c? super Student\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"        public void sortClasses(Comparator\u003c? super TuitionClass\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"yourally2"},"content":"        private final Student student;","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"yourally2"},"content":"        ModelStubWithPerson(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"yourally2"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"yourally2"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"yourally2"},"content":"            return this.student.isSamePerson(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"yourally2"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"Ongzl"},"content":"        final ArrayList\u003cTuitionClass\u003e tuitionClassesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"yourally2"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"yourally2"},"content":"            return personsAdded.stream().anyMatch(student::isSamePerson);","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"yourally2"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"yourally2"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"yourally2"},"content":"            personsAdded.add(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"Ongzl"},"content":"            requireNonNull(tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"Ongzl"},"content":"            tuitionClassesAdded.add(tuitionClass);","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"yourally2"},"content":"        public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"yourally2"},"content":"            return new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yourally2":33,"s7u4rt99":28,"Ongzl":51,"-":149}},{"path":"src/test/java/seedu/times/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public void execute_emptyTimesTable_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    public void execute_nonEmptyTimesTable_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        expectedModel.setTimesTable(new TimesTable());","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yourally2":5,"Ongzl":7,"-":20}},{"path":"src/test/java/seedu/times/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Ongzl":1,"-":53}},{"path":"src/test/java/seedu/times/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import static seedu.times.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASSTIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_CLASS_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.FIND_REGEX_WITH_COMMA_DELIMITER;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditClassDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    //// SAMPLE STUDENT INFO","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_NAME_NOK \u003d \"Papa\";","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_PHONE_NOK \u003d \"33333333\";","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_EMAIL_NOK \u003d \"papa@example.com\";","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_ADDRESS_NOK \u003d \"Block 456, Squid Street 69\";","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"    public static final String VALID_PREFIX_NOK \u003d \" \" + PREFIX_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    public static final String NAME_DESC_NOK \u003d \" \" + PREFIX_NAME + VALID_NAME_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    public static final String PHONE_DESC_NOK \u003d \" \" + PREFIX_PHONE + VALID_PHONE_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    public static final String EMAIL_DESC_NOK \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    public static final String ADDRESS_DESC_NOK \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_NOK;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"    //// SAMPLE CLASS INFO","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSNAME_IB_PHYSICS \u003d \"IB Physics\";","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSNAME_IB_MATHS \u003d \"IB Maths\";","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSTIMING_IB_PHYSICS \u003d \"tue 13:00-14:00\";","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_CLASSTIMING_IB_MATHS \u003d \"mon 10:00-11:00\";","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_RATE_IB_PHYSICS \u003d \"70\";","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_RATE_IB_MATHS \u003d \"80\";","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_LOCATION_IB_PHYSICS \u003d \"Block 312, Adams Street 1\";","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"    public static final String VALID_LOCATION_IB_MATHS \u003d \"Block 123, Brown Street 3\";","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"    public static final String[] VALID_STUDENTLIST_IB_PHYSICS \u003d {\"Benson Meier\", \"Alice Pauline\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    public static final String[] VALID_STUDENTLIST_IB_MATHS \u003d {\"Carl Kurz\", \"Daniel Meier\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"    public static final String[] VALID_EMPTY_STUDENTLIST \u003d { };","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"    public static final String CLASSNAME_DESC_PHYSICS \u003d \" \" + PREFIX_CLASS_NAME + VALID_CLASSNAME_IB_PHYSICS;","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"    public static final String CLASSNAME_DESC_MATHS \u003d \" \" + PREFIX_CLASS_NAME + VALID_CLASSNAME_IB_MATHS;","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"    public static final String RATE_DESC_PHYSICS \u003d \" \" + PREFIX_RATE + VALID_RATE_IB_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"    public static final String RATE_DESC_MATHS \u003d \" \" + PREFIX_RATE + VALID_RATE_IB_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"    public static final String CLASSTIMING_DESC_PHYSICS \u003d \" \" + PREFIX_CLASSTIMING + VALID_CLASSTIMING_IB_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"    public static final String CLASSTIMING_DESC_MATHS \u003d \" \" + PREFIX_CLASSTIMING + VALID_CLASSTIMING_IB_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"    public static final String LOCATION_DESC_PHYSICS \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_IB_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"    public static final String LOCATION_DESC_MATHS \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_IB_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"    public static final String CLASS_NAME_DESC_PHYSICS \u003d \" \" + PREFIX_CLASS_NAME + VALID_CLASSNAME_IB_PHYSICS;","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"    public static final String CLASS_NAME_DESC_MATHS \u003d \" \" + PREFIX_CLASS_NAME + VALID_CLASSNAME_IB_MATHS;","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"    public static final String INVALID_RATE_DESC \u003d \" \" + PREFIX_RATE + \"-32\"; // negative rate not allowed for rate","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"    // empty string not allowed for classTiming","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"    public static final String INVALID_CLASSTIMING_DESC \u003d \" \" + PREFIX_CLASSTIMING;","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for locations","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"    // non-alphanumeric not allowed for className","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"    public static final String INVALID_CLASSNAME_DESC \u003d \" \" + PREFIX_CLASS_NAME + \"IB_MATHS!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"    public static final EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"    public static final EditClassDescriptor DESC_IB_PHYSICS;","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"    public static final EditClassDescriptor DESC_IB_MATHS;","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"                .withTags(VALID_TAG_FRIEND).withNokName(VALID_NAME_NOK).withNokPhone(VALID_PHONE_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"                .withNokAddress(VALID_ADDRESS_NOK).withNokEmail(VALID_EMAIL_NOK).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withNokName(VALID_NAME_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"                .withNokPhone(VALID_PHONE_NOK).withNokAddress(VALID_ADDRESS_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"                .withNokEmail(VALID_EMAIL_NOK).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"        DESC_IB_PHYSICS \u003d new EditClassDescriptorBuilder().withClassName(VALID_CLASSNAME_IB_PHYSICS)","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"                .withClassTiming(VALID_CLASSTIMING_IB_PHYSICS).withRate(VALID_RATE_IB_PHYSICS)","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"                .withLocation(VALID_LOCATION_IB_PHYSICS).withStudentList(VALID_STUDENTLIST_IB_PHYSICS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"        DESC_IB_MATHS \u003d new EditClassDescriptorBuilder().withClassName(VALID_CLASSNAME_IB_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"                .withClassTiming(VALID_CLASSTIMING_IB_MATHS).withRate(VALID_RATE_IB_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"                .withLocation(VALID_LOCATION_IB_MATHS).withStudentList(VALID_STUDENTLIST_IB_PHYSICS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"yourally2"},"content":"        TimesTable expectedTimesTable \u003d new TimesTable(actualModel.getTimesTable());","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":176,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedTimesTable, actualModel.getTimesTable());","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Student at the given {@code targetIndex} in the","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"yourally2"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":187,"author":{"gitId":"yourally2"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"yourally2"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":191,"author":{"gitId":"yourally2"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"     * Updates {@code model}\u0027s filtered list to show only the classes at the given {@code targetIndex} in the","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"s7u4rt99"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"    public static void showClassAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTuitionClassList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass tuitionClass \u003d model.getFilteredTuitionClassList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"Ongzl"},"content":"        final String[] splitName \u003d tuitionClass.getClassName().toString().split(FIND_REGEX_WITH_COMMA_DELIMITER);","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredClassList(new ClassNameContainsKeywordsPredicate(Arrays.asList(splitName)));","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, model.getFilteredTuitionClassList().size());","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yourally2":11,"s7u4rt99":16,"Ongzl":46,"softmagnet":37,"bernardwan":1,"-":97}},{"path":"src/test/java/seedu/times/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        showStudentAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        showStudentAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTimesTable().getStudentList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yourally2":10,"s7u4rt99":1,"Ongzl":13,"softmagnet":12,"-":73}},{"path":"src/test/java/seedu/times/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastStudent);","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditStudentDescriptor());","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        showStudentAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        Student editedStudent \u003d new PersonBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"        showStudentAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"        Student studentInList \u003d model.getTimesTable().getStudentList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"                new EditPersonDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"        showStudentAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTimesTable().getStudentList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"softmagnet"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yourally2":25,"s7u4rt99":6,"Ongzl":21,"softmagnet":17,"-":104}},{"path":"src/test/java/seedu/times/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        EditCommand.EditStudentDescriptor descriptorWithSameValues \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        EditCommand.EditStudentDescriptor editedAmy \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"                new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -  \u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yourally2":4,"Ongzl":9,"-":45}},{"path":"src/test/java/seedu/times/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Ongzl":5,"-":15}},{"path":"src/test/java/seedu/times/logic/commands/FindNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand findFirstCommand \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand findSecondCommand \u003d new FindNameCommand(secondPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand findFirstCommandCopy \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        // different predicate with different list of keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    public void execute_singleKeywords_noPersonFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Jeremiah\");","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"    public void execute_singleKeywords_singlePersonFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz\");","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"    public void execute_singleKeywords_multiplePersonFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Meier\");","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"    public void execute_multpleKeywords_multiplePersonFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"carl elle meier\");","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yourally2":2,"Ongzl":8,"softmagnet":40,"-":45}},{"path":"src/test/java/seedu/times/logic/commands/FindTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BENSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.DANIEL;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"                new TagsContainsKeywordsPredicate(Collections.singletonList(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"                new TagsContainsKeywordsPredicate(Collections.singletonList(\"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand findMathsCommand \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand findPhysicsCommand \u003d new FindTagCommand(secondPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertTrue(findMathsCommand.equals(findMathsCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand findMathsCommandCopy \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertTrue(findMathsCommand.equals(findMathsCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        assertFalse(findMathsCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        assertFalse(findMathsCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        // different predicate with different list of keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        assertFalse(findMathsCommand.equals(findPhysicsCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"    public void execute_singleKeyword_multiplePersonsFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d preparePredicate(\"Maths\");","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d preparePredicate(\"maths physics\");","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"     * Parses {@code userInput} into a {@code TagsContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    private TagsContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        return new TagsContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"yourally2":5,"s7u4rt99":3,"Ongzl":11,"softmagnet":71}},{"path":"src/test/java/seedu/times/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Ongzl":5,"-":15}},{"path":"src/test/java/seedu/times/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        showStudentAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yourally2":2,"Ongzl":8,"softmagnet":1,"-":28}},{"path":"src/test/java/seedu/times/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTableReverseClasses;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTableReverseStudents;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"class SortCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    void execute_nameInDescOrder_sortNameAsc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTableReverseStudents(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_ASC), model,","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"                String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.STUDENT_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_ASC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    void execute_nameInAscOrder_sortNameAsc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_ASC), model,","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"                String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.STUDENT_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_ASC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    void execute_nameInDescOrder_sortNameDesc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTableReverseStudents(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_DESC), model,","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"                String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.STUDENT_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_DESC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"    void execute_nameInAscOrder_sortNameDesc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTimesTableReverseStudents(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_DESC), model,","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"                String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.STUDENT_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_NAME, SortCommand.DIRECTION_OF_SORT_DESC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    void execute_classInAscOrder_sortTimingAsc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_ASC),","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"                model, String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.CLASSES_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_ASC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"    void execute_classInDescOrder_sortTimingAsc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTableReverseClasses(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_ASC),","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"                model, String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.CLASSES_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_ASC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"    void execute_classInAscOrder_sortTimingDesc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTimesTableReverseClasses(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_DESC),","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"                model, String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.CLASSES_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_DESC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"    void execute_classInDescOrder_sortTimingDesc() {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTableReverseClasses(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new SortCommand(SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_DESC),","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"                model, String.format(SortCommand.MESSAGE_SUCCESS, SortCommand.CLASSES_TAB_SORTED,","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"                        SortCommand.SORT_BY_CLASS_TIMING, SortCommand.DIRECTION_OF_SORT_DESC), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortNameAsc \u003d new SortCommand(\"name\", \"asc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortNameDesc \u003d new SortCommand(\"name\", \"desc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortTimingAsc \u003d new SortCommand(\"timing\", \"asc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"        SortCommand sortTimingDesc \u003d new SortCommand(\"timing\", \"desc\");","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"        //same object","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortNameAsc.equals(sortNameAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortNameDesc.equals(sortNameDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortTimingAsc.equals(sortTimingAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(sortTimingDesc.equals(sortTimingDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"        //same values","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"name\", \"asc\").equals(sortNameAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"name\", \"desc\").equals(sortNameDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"timing\", \"asc\").equals(sortTimingAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new SortCommand(\"timing\", \"desc\").equals(sortTimingDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"        //different types","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameAsc.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"        //null","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameDesc.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"        //different values","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameAsc.equals(sortNameDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortNameDesc.equals(sortTimingAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortTimingAsc.equals(sortTimingDesc));","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(sortTimingDesc.equals(sortNameAsc));","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yourally2":16,"s7u4rt99":97,"Ongzl":8}},{"path":"src/test/java/seedu/times/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        ViewCommand viewTimetable \u003d new ViewCommand(TabName.TIMETABLE);","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"        ViewCommand viewStudents \u003d new ViewCommand(TabName.STUDENTS);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"        ViewCommand viewClasses \u003d new ViewCommand(TabName.CLASSES);","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        //same object","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(viewClasses.equals(viewClasses));","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(viewTimetable.equals(viewTimetable));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(viewStudents.equals(viewStudents));","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        //same values","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ViewCommand(TabName.TIMETABLE).equals(viewTimetable));","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ViewCommand(TabName.STUDENTS).equals(viewStudents));","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ViewCommand(TabName.CLASSES).equals(viewClasses));","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"        //different types","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(viewClasses.equals(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        //null","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(viewClasses.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        //different values","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(viewClasses.equals(viewStudents));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"s7u4rt99":36,"Ongzl":2}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/AddClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandResult;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TimesTableBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TuitionClassBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"public class AddClassCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    public void constructor_nullTuitionClass_throwsNullPointerException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClassCommand(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    public void execute_tuitionClassAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        ModelStubAcceptingTuitionClassAdded modelStub \u003d new ModelStubAcceptingTuitionClassAdded();","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        //create TuitionClass to be added","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        TuitionClass classToAdd \u003d new TuitionClassBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        CommandResult commandResult \u003d new AddClassCommand(classToAdd).execute(modelStub);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        assertEquals(String.format(AddClassCommand.MESSAGE_SUCCESS, classToAdd), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"        assertEquals(Arrays.asList(classToAdd), modelStub.tuitionClassesAdded);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    public void execute_duplicateTuitionClass_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        TuitionClass validTuitionClass \u003d new TuitionClassBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addClassCommand \u003d new AddClassCommand(validTuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"        ModelStub modelStub \u003d new ModelStubWithTuitionClass(validTuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_CLASHING_CLASS_TIMING, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"            -\u003e addClassCommand.execute(modelStub));","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    public void execute_tuitionClassWithOverlappingClassTiming_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        TuitionClass validTuitionClass1 \u003d new TuitionClassBuilder().withClassTiming(\"SUN 11:30-13:30\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        TuitionClass validTuitionClass2 \u003d new TuitionClassBuilder().withClassTiming(\"SUN 09:30-12:00\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addClassCommand \u003d new AddClassCommand(validTuitionClass2);","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        ModelStub modelStub \u003d new ModelStubWithTuitionClass(validTuitionClass1);","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_CLASHING_CLASS_TIMING, ()","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"            -\u003e addClassCommand.execute(modelStub));","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    public void equals_className() {","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        TuitionClass classTiming13 \u003d new TuitionClassBuilder().withClassName(\"Maths\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"        TuitionClass classTiming12 \u003d new TuitionClassBuilder().withClassName(\"Timing13\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addTiming12ClassCommand \u003d new AddClassCommand(classTiming13);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addTiming13ClassCommand \u003d new AddClassCommand(classTiming12);","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"        assertTrue(addTiming12ClassCommand.equals(addTiming12ClassCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addTiming12ClassCommandCopy \u003d new AddClassCommand(classTiming13);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"        assertTrue(addTiming12ClassCommand.equals(addTiming12ClassCommandCopy));","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        assertFalse(addTiming12ClassCommand.equals(\"null\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        assertFalse(addTiming12ClassCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        // different tuition class -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"        assertFalse(addTiming12ClassCommand.equals(addTiming13ClassCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"    public void equals_classTiming() {","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        TuitionClass classTiming12 \u003d new TuitionClassBuilder().withClassTiming(\"TUE 12:00-13:30\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        TuitionClass classTiming13 \u003d new TuitionClassBuilder().withClassTiming(\"TUE 13:00-15:00\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addTiming12ClassCommand \u003d new AddClassCommand(classTiming12);","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addTiming13ClassCommand \u003d new AddClassCommand(classTiming13);","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"        assertTrue(addTiming12ClassCommand.equals(addTiming12ClassCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"        AddClassCommand addTiming12ClassCommandCopy \u003d new AddClassCommand(classTiming12);","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"        assertTrue(addTiming12ClassCommand.equals(addTiming12ClassCommandCopy));","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        assertFalse(addTiming12ClassCommand.equals(\"null\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"        assertFalse(addTiming12ClassCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"        // different tuition class -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"        assertFalse(addTiming12ClassCommand.equals(addTiming13ClassCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"yourally2"},"content":"        public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"yourally2"},"content":"        public void setTimesTableFilePath(Path timesTableFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"yourally2"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"yourally2"},"content":"        public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"yourally2"},"content":"        public void setTimesTable(ReadOnlyTimesTable newData) {","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"yourally2"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"yourally2"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"Ongzl"},"content":"        public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"Ongzl"},"content":"        public void deleteTuitionClass(TuitionClass target) {","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"yourally2"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"Ongzl"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"Ongzl"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"Ongzl"},"content":"        public void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"Ongzl"},"content":"        public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"Ongzl"},"content":"        public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":223,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"Ongzl"},"content":"        public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-11-03"},{"lineNumber":227,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":229,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"Ongzl"},"content":"        public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":233,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":235,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"Ongzl"},"content":"        public void updateClassStudentLists(Name newName, Name oldName) {","lastModifiedDate":"2021-11-03"},{"lineNumber":237,"author":{"gitId":"Ongzl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"s7u4rt99"},"content":"        public void sortStudents(Comparator\u003c? super Student\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"s7u4rt99"},"content":"        public void sortClasses(Comparator\u003c? super TuitionClass\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":250,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"Ongzl"},"content":"     * A Model stub that contains a single tuition class.","lastModifiedDate":"2021-11-03"},{"lineNumber":253,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":254,"author":{"gitId":"Ongzl"},"content":"    private class ModelStubWithTuitionClass extends ModelStub {","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"yourally2"},"content":"        private final TimesTable timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":256,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":257,"author":{"gitId":"Ongzl"},"content":"        ModelStubWithTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"Ongzl"},"content":"            requireNonNull(tuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"yourally2"},"content":"            this.timesTable \u003d new TimesTableBuilder().withTuitionClass(tuitionClass).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":263,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"Ongzl"},"content":"            requireNonNull(tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"yourally2"},"content":"            timesTable.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":268,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":269,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"Ongzl"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"Ongzl"},"content":"    private class ModelStubAcceptingTuitionClassAdded extends ModelStub {","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"Ongzl"},"content":"        final ArrayList\u003cTuitionClass\u003e tuitionClassesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":274,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"Ongzl"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-03"},{"lineNumber":277,"author":{"gitId":"Ongzl"},"content":"            requireNonNull(tuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"Ongzl"},"content":"            tuitionClassesAdded.add(tuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"Ongzl"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":282,"author":{"gitId":"yourally2"},"content":"        public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":283,"author":{"gitId":"yourally2"},"content":"            return new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":284,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":285,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":286,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"yourally2":13,"s7u4rt99":11,"Ongzl":262}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/AddToClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.AddToClassCommand.MESSAGE_ADD_SUCCESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.MESSAGE_DUPLICATE_STUDENT;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TestUtil.getClassOneBased;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TestUtil.getIndexList;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TestUtil.getStudentOneBased;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BENSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_CHEMISTRY;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TuitionClassBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"public class AddToClassCommandTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public void execute_addSingleStudentToClass_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        //create model to used in actual execution","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        //create command to be tested","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand addToClassCommand \u003d new AddToClassCommand(getIndexList(1, 3));","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        //create expected model by manually setting target class to updated class","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(getTypicalTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        TuitionClass classToAddto \u003d getClassOneBased(expectedModel, 1);","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder(classToAddto)","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"                .withStudentList(classToAddto.getStudentList().getNames()).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        editedClass.addStudent(getStudentOneBased(model, 3).getName());","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        expectedModel.setClass(classToAddto, editedClass);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        //run assertCommand function with corresponding message","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d MESSAGE_ADD_SUCCESS;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(addToClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    public void execute_addMultipleStudentsToClass_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand addToClassCommand \u003d new AddToClassCommand(getIndexList(2, 1, 2));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(getTypicalTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        TuitionClass classToAddto \u003d getClassOneBased(expectedModel, 2);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder(classToAddto)","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"                .withStudentList(classToAddto.getStudentList().getNames()).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        editedClass.addAllStudents(","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"                getStudentOneBased(model, 1).getName(),","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"                getStudentOneBased(model, 2).getName()","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        );","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        expectedModel.setClass(classToAddto, editedClass);","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d MESSAGE_ADD_SUCCESS;","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(addToClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"    public void execute_classIndexOutOfRange_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand addToClassCommand \u003d new AddToClassCommand(getIndexList(22, 1, 2));","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(addToClassCommand, model, MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"    public void execute_indexOutOfRange_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand addToClassCommand \u003d new AddToClassCommand(getIndexList(1, 12, 2));","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(addToClassCommand, model, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    public void execute_addDuplicateStudentsToClass_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(new TimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        model.addStudent(BENSON);","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        TuitionClass newClass \u003d new TuitionClassBuilder(JC_CHEMISTRY).withStudentList(BENSON.getName().fullName)","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        model.addTuitionClass(newClass);","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand addToClassCommand \u003d new AddToClassCommand(getIndexList(1, 1));","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d MESSAGE_DUPLICATE_STUDENT + BENSON.getName();","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(addToClassCommand, model, expectedMessage);","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand standardCommand \u003d new AddToClassCommand(getIndexList(1, 2, 3));","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"        // failure","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"        //null returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        //different value returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"        assertFalse(standardCommand.equals(new AddToClassCommand(getIndexList(1, 4, 3))));","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"        //different command returns false","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        // success","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"        //same obj returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"        //same value returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"        assertTrue(standardCommand.equals(new AddToClassCommand(getIndexList(1, 2, 3))));","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"yourally2":8,"Ongzl":20,"softmagnet":97}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/DeleteClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.DeleteClassCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"public class DeleteClassCommandTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        DeleteClassCommand deleteClassCommand \u003d new DeleteClassCommand(INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"        TuitionClass tuitionClass \u003d model.getFilteredTuitionClassList().get(0);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        expectedModel.deleteTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        assertCommandSuccess(deleteClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    public void execute_invalidIndexUnfilteredList_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTuitionClassList().size() + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        DeleteClassCommand deleteClassCommand \u003d new DeleteClassCommand(outOfBoundIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        assertCommandFailure(deleteClassCommand, model, Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        CommandTestUtil.showClassAtIndex(model, INDEX_SECOND);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        DeleteClassCommand deleteClassCommand \u003d new DeleteClassCommand(INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"        TuitionClass tuitionClass \u003d model.getFilteredTuitionClassList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        expectedModel.deleteTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"        expectedModel.updateFilteredClassList(p -\u003e false);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        assertCommandSuccess(deleteClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"    public void execute_invalidIndexFilteredList_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        CommandTestUtil.showClassAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"        DeleteClassCommand deleteClassCommand \u003d new DeleteClassCommand(outOfBoundIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"        assertCommandFailure(deleteClassCommand, model, Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yourally2":3,"Ongzl":14,"bernardwan":50}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/EditClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.MESSAGE_EDIT_CLASS_SUCCESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.tuitionclass.exceptions.DuplicateClassException.DUPLICATE_CLASS_ERROR_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.tuitionclass.exceptions.OverlappingClassException.OVERLAP_ERROR_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditClassDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TuitionClassBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"public class EditClassCommandTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        //create model to used in actual execution","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        //create command to be tested","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        //create descriptor","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder(editedClass).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        //create command","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        //create expected model by manually setting target class to updated class","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        expectedModel.setClass(model.getFilteredTuitionClassList().get(targetIndex.getZeroBased()), editedClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        //run assertCommand function with corresponding message","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_CLASS_SUCCESS, editedClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(editClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder(JC_PHYSICS).withClassName(\"Discrete Maths\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder().withClassName(\"Discrete Maths\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"        expectedModel.setClass(model.getFilteredTuitionClassList().get(targetIndex.getZeroBased()), editedClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_CLASS_SUCCESS, editedClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(editClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"    public void execute_editedClassIsSameAsOriginal_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass editedClass \u003d JC_PHYSICS;","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder(JC_PHYSICS).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        Model expectedModel \u003d new ModelManager(new TimesTable(model.getTimesTable()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_CLASS_SUCCESS, editedClass);;","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(editClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"    public void execute_editedClassIsDuplicateOfOther_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder(JC_MATHS).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d DUPLICATE_CLASS_ERROR_MESSAGE;","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(editClassCommand, model, expectedMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"    public void execute_editedClassOverlapClassTiming_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        //overlap with JC_MATHS","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder(editedClass).withClassTiming(\"Wed 14:00-16:00\")","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d OVERLAP_ERROR_MESSAGE;","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(editClassCommand, model, expectedMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"    public void execute_indexOutOfRange_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"        Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d Index.fromOneBased(999);","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder(editedClass).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d MESSAGE_INVALID_CLASS_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"        assertCommandFailure(editClassCommand, model, expectedMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder(editedClass).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand \u003d new EditClassCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand editClassCommand2 \u003d new EditClassCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"        //same obj -\u003e true","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"        assertTrue(editClassCommand.equals(editClassCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"softmagnet"},"content":"        //same values -\u003e true","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"softmagnet"},"content":"        assertTrue(editClassCommand.equals(editClassCommand2));","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"        //different Index -\u003e false","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"        editClassCommand2 \u003d new EditClassCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"softmagnet"},"content":"        assertFalse(editClassCommand.equals(editClassCommand2));","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"        //different descriptor -\u003e false","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor2 \u003d new EditClassDescriptorBuilder(editedClass).withLocation(\"Wellington Street\")","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"        editClassCommand2 \u003d new EditClassCommand(INDEX_FIRST, descriptor2);","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"        assertFalse(editClassCommand.equals(editClassCommand2));","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"yourally2":9,"s7u4rt99":3,"Ongzl":21,"softmagnet":115}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/EditClassDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.DESC_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.DESC_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_STUDENTLIST_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditClassDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"public class EditClassDescriptorTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        // shallow copy -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptorWithSameValues \u003d new EditClassDescriptor(DESC_IB_MATHS);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        assertTrue(DESC_IB_MATHS.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        //deep copy with  null studentNameList -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor editClassDescriptor1 \u003d new EditClassDescriptorBuilder()","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"                .withClassName(VALID_CLASSNAME_IB_PHYSICS).withClassTiming(VALID_CLASSTIMING_IB_PHYSICS)","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"                .withRate(VALID_RATE_IB_PHYSICS).withLocation(VALID_LOCATION_IB_PHYSICS).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor editClassDescriptor2 \u003d new EditClassDescriptorBuilder()","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"                .withClassName(VALID_CLASSNAME_IB_PHYSICS).withClassTiming(VALID_CLASSTIMING_IB_PHYSICS)","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"                .withRate(VALID_RATE_IB_PHYSICS).withLocation(VALID_LOCATION_IB_PHYSICS).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        assertTrue(editClassDescriptor1.equals(editClassDescriptor2));","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        assertTrue(DESC_IB_MATHS.equals(DESC_IB_MATHS));","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        assertFalse(DESC_IB_MATHS.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        assertFalse(DESC_IB_MATHS.equals(5));","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        assertFalse(DESC_IB_MATHS.equals(DESC_IB_PHYSICS));","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        // different class name -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"        EditClassDescriptor editedIbPhysics \u003d new EditClassDescriptorBuilder(DESC_IB_PHYSICS)","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"                .withClassName(VALID_CLASSNAME_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(DESC_IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        // different class timing -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new EditClassDescriptorBuilder(DESC_IB_PHYSICS)","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"                .withClassTiming(VALID_CLASSTIMING_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(DESC_IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        // different rate -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new EditClassDescriptorBuilder(DESC_IB_PHYSICS)","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"                .withRate(VALID_RATE_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(DESC_IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        //different location -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new EditClassDescriptorBuilder(DESC_IB_PHYSICS)","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"                .withLocation(VALID_LOCATION_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(DESC_IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        //different student list -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new EditClassDescriptorBuilder(DESC_IB_PHYSICS)","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"                .withStudentList(VALID_STUDENTLIST_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(DESC_IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"s7u4rt99":13,"Ongzl":14,"softmagnet":52}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/FindClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_CLASSES_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_CHEMISTRY;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_CHEMISTRY_DAY;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_PHYSICS_CLASS_TIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_PHYSICS_DAY;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_PHYSICS_TIME;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_CHEMISTRY;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_CHEMISTRY_DAY;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_MATHS_TIME;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_PHYSICS_CLASS_TIMING;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_PHYSICS_DAY;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.SEC_PHYSICS_TIME;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"public class FindClassCommandTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    // model stub with a class containing JC_PHYISCS, SEC_PHYSICS, JC_MATHS, SEC_MATHS,","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    //                JC_CHEMISTRY, SEC_CHEMISTRY","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        ClassTimingContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"                new ClassTimingContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"        ClassTimingContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"                new ClassTimingContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        FindClassCommand findClassFirstCommand \u003d new FindClassCommand(firstPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        FindClassCommand findClassSecondCommand \u003d new FindClassCommand(secondPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"        assertTrue(findClassFirstCommand.equals(findClassFirstCommand));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        FindClassCommand findClassFirstCommandCopy \u003d new FindClassCommand(firstPredicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        assertTrue(findClassFirstCommand.equals(findClassFirstCommandCopy));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        assertFalse(findClassFirstCommand.equals(1));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"        assertFalse(findClassFirstCommand.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        // different predicate with different list of keywords -\u003e returns false","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        assertFalse(findClassFirstCommand.equals(findClassSecondCommand));","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"    public void constructor_nullInput_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindClassCommand(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"    public void execute_findSingleClass_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        ClassTimingContainsKeywordsPredicate predicate \u003d preparePredicate(JC_PHYSICS_CLASS_TIMING);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        FindClassCommand command \u003d new FindClassCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(JC_PHYSICS), model.getFilteredTuitionClassList());","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"    public void execute_findTwoClasses_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        // Both JC Physics and Sec maths are at the same time but different day.","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"        ClassTimingContainsKeywordsPredicate predicate \u003d preparePredicate(JC_PHYSICS_TIME + \" \" + SEC_MATHS_TIME);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        FindClassCommand command \u003d new FindClassCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(JC_PHYSICS, SEC_MATHS), model.getFilteredTuitionClassList());","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        // Both JC Chemistry and Sec Chemistry are at the same day but different time.","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"        predicate \u003d preparePredicate(JC_CHEMISTRY_DAY + \" \" + SEC_CHEMISTRY_DAY);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        command \u003d new FindClassCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"        assertEquals(Arrays.asList(JC_CHEMISTRY, SEC_CHEMISTRY), model.getFilteredTuitionClassList());","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    public void execute_findTwoClassDayTimings_noClassFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"        // Expected behaviour is that when we specify two timings, no class matches this timing","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        // so it finds no classes, for the same timing, day, and class timing.","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"        ClassTimingContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"                preparePredicate(JC_PHYSICS_CLASS_TIMING + \" \" + SEC_PHYSICS_CLASS_TIMING);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"        FindClassCommand command \u003d new FindClassCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"        predicate \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"                preparePredicate(JC_PHYSICS_DAY + \" \" + SEC_PHYSICS_DAY);","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"        command \u003d new FindClassCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"        expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"yourally2"},"content":"        predicate \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"yourally2"},"content":"                preparePredicate(JC_PHYSICS_TIME + \" \" + SEC_PHYSICS_TIME);","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"yourally2"},"content":"        command \u003d new FindClassCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"yourally2"},"content":"        expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"yourally2"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"yourally2"},"content":"    private ClassTimingContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"yourally2"},"content":"        return new ClassTimingContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yourally2":123,"Ongzl":21}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/FindClassNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_CLASSES_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.FIND_REGEX_WITH_COMMA_DELIMITER;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"public class FindClassNameCommandTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private Model model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    public void execute_singleKeyword_noClassFound() {","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        ClassNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Geography\");","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        FindClassNameCommand command \u003d new FindClassNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"    public void execute_singleKeyword_multipleClassFound() {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        ClassNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Physics\");","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        FindClassNameCommand command \u003d new FindClassNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"    public void execute_multipleTerms_multipleClassFound() {","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 6);","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        ClassNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"sec, jc\");","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        FindClassNameCommand command \u003d new FindClassNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    public void execute_multipleKeywords_singleClassFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLASSES_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        ClassNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"jc physics\");","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        FindClassNameCommand command \u003d new FindClassNameCommand(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        expectedModel.updateFilteredClassList(predicate);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        //same obj","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"        FindClassNameCommand command \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"                new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(Arrays.asList(\"Physics\", \"Maths\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        //same values","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        FindClassNameCommand command2 \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"                new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(Arrays.asList(\"Physics\", \"Maths\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        assertTrue(command.equals(command2));","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        //different values","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        command2 \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"                new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(Arrays.asList(\"Chemistry\", \"Maths\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        assertFalse(command.equals(command2));","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"    private ClassNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"        return new ClassNameContainsKeywordsPredicate(Arrays.asList(userInput.trim()","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"                .split(FIND_REGEX_WITH_COMMA_DELIMITER)));","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yourally2":2,"Ongzl":16,"softmagnet":64}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/ListClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.showClassAtIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ModelManager;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"class ListClassCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    private Model model;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        model \u003d new ModelManager(getTypicalTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        expectedModel \u003d new ModelManager(model.getTimesTable(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public void execute_classListIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new ListClassCommand(), model, ListClassCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    public void execute_classListIsFiltered_showsEverything() {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        showClassAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertCommandSuccess(new ListClassCommand(), model, ListClassCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"yourally2":2,"s7u4rt99":24,"Ongzl":8,"softmagnet":1}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/RemoveFromClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.RemoveFromClassCommand.MESSAGE_REMOVE_SUCCESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TestUtil.getIndexList;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.CARL;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalStudents;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.Messages;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Person;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.UniqueStudentList;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.UniqueClassList;","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"public class RemoveFromClassCommandTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    public void constructor_nullInput_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RemoveFromClassCommand(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    public void execute_removeSingleStudent_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"        // model stub with a class containing ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass modelStubWithClass \u003d new ModelStubWithClass(getTypicalStudents());","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand command \u003d new RemoveFromClassCommand(getIndexList(1, 1));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"        // expected model","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"        List\u003cStudent\u003e studentList \u003d getTypicalStudents();","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"        studentList.remove(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass expectedModelStub \u003d new ModelStubWithClass(studentList);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d MESSAGE_REMOVE_SUCCESS;","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"        assertCommandSuccess(command, modelStubWithClass, expectedMessage, expectedModelStub);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"    public void execute_removeMultipleStudents_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        // model stub with a class containing ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass modelStubWithClass \u003d new ModelStubWithClass(getTypicalStudents());","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand command \u003d new RemoveFromClassCommand(getIndexList(1, 1, 3));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"        // expected model","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"        List\u003cStudent\u003e studentList \u003d getTypicalStudents();","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        studentList.remove(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"        studentList.remove(CARL);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass expectedModelStub \u003d new ModelStubWithClass(studentList);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d MESSAGE_REMOVE_SUCCESS;","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"        assertCommandSuccess(command, modelStubWithClass, expectedMessage, expectedModelStub);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"    public void execute_duplicateStudentIndexes_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        // model stub with a class containing ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass modelStubWithClass \u003d new ModelStubWithClass(getTypicalStudents());","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand command \u003d new RemoveFromClassCommand(getIndexList(1, 1, 3, 1));","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"        // expected model","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"        List\u003cStudent\u003e studentList \u003d getTypicalStudents();","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"        studentList.remove(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"        studentList.remove(CARL);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass expectedModelStub \u003d new ModelStubWithClass(studentList);","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d MESSAGE_REMOVE_SUCCESS;","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"        assertCommandSuccess(command, modelStubWithClass, expectedMessage, expectedModelStub);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"    public void execute_studentIndexGreaterThanNumberOfStudents_throwsCommandException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"        // model stub with a class containing ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass modelStubWithClass \u003d new ModelStubWithClass(getTypicalStudents());","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand command \u003d new RemoveFromClassCommand(getIndexList(1, 8));","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(modelStubWithClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"    public void execute_classIndexGreaterThanClassNumber_throwsCommandException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"        // model stub with a class containing ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE.","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass modelStubWithClass \u003d new ModelStubWithClass(getTypicalStudents());","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand command \u003d new RemoveFromClassCommand(getIndexList(2, 1));","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(modelStubWithClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"    public void execute_removeSingleStudentFromEmptyClass_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"        // model stub with a empty class;","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass modelStubWithClass \u003d new ModelStubWithClass(new ArrayList\u003cStudent\u003e());","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"        // command to execute","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand command \u003d new RemoveFromClassCommand(getIndexList(1, 1));","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(modelStubWithClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"bernardwan"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"bernardwan"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"bernardwan"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"bernardwan"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"yourally2"},"content":"        public Path getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"yourally2"},"content":"        public void setTimesTableFilePath(Path timesTableFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"yourally2"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"        public void setTimesTable(ReadOnlyTimesTable newData) {","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"yourally2"},"content":"        public ReadOnlyTimesTable getTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"yourally2"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"yourally2"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"bernardwan"},"content":"        public boolean hasTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"bernardwan"},"content":"        public void addTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"bernardwan"},"content":"        public void deleteTuitionClass(TuitionClass target) {","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"yourally2"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"bernardwan"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"bernardwan"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"bernardwan"},"content":"        public void updateFilteredClassList(Predicate\u003cTuitionClass\u003e predicate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"bernardwan"},"content":"        public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"bernardwan"},"content":"        public void setClass(TuitionClass target, TuitionClass editedClass) {","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"bernardwan"},"content":"        public void setClasses(List\u003cTuitionClass\u003e classes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"bernardwan"},"content":"        public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"bernardwan"},"content":"        public void updateClassStudentLists(Name newName, Name oldName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"bernardwan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"s7u4rt99"},"content":"        public void sortStudents(Comparator\u003c? super Student\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":261,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"s7u4rt99"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"s7u4rt99"},"content":"        public void sortClasses(Comparator\u003c? super TuitionClass\u003e c) {","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"s7u4rt99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"bernardwan"},"content":"     * A Model stub that contains a single tuition class.","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"bernardwan"},"content":"    private class ModelStubWithClass extends ModelStub {","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"bernardwan"},"content":"        private TuitionClass tuitionClass;","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"bernardwan"},"content":"        private List\u003cStudent\u003e studentList;","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"bernardwan"},"content":"        ModelStubWithClass(List\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"bernardwan"},"content":"            requireNonNull(studentList);","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"bernardwan"},"content":"            this.studentList \u003d studentList;","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"bernardwan"},"content":"            Name[] names \u003d studentList.stream().map(Person::getName)","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"bernardwan"},"content":"                    .collect(Collectors.toList()).toArray(new Name[]{});","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"bernardwan"},"content":"            StudentNameList nameList \u003d new StudentNameList(names);","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"bernardwan"},"content":"            this.tuitionClass \u003d new TuitionClass(new ClassName(\"class\"), new ClassTiming(\"MON 13:30-14:30\"),","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"bernardwan"},"content":"                    new Location(\"Home\"), new Rate(\"60\"), nameList);","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"bernardwan"},"content":"        public ObservableList\u003cTuitionClass\u003e getFilteredTuitionClassList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"bernardwan"},"content":"            UniqueClassList classList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"bernardwan"},"content":"            classList.add(this.tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"bernardwan"},"content":"            return new FilteredList\u003c\u003e(classList.asUnmodifiableObservableList());","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"bernardwan"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"bernardwan"},"content":"            UniqueStudentList studentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"bernardwan"},"content":"            for (Student student : this.studentList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"bernardwan"},"content":"                studentList.add(student);","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"bernardwan"},"content":"            return new FilteredList\u003c\u003e(studentList.asUnmodifiableObservableList());","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"bernardwan"},"content":"        public void setClass(TuitionClass classToRemoveFrom, TuitionClass editedClass) {","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"bernardwan"},"content":"            this.tuitionClass \u003d editedClass;","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"bernardwan"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"bernardwan"},"content":"            // short circuit if same object","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"bernardwan"},"content":"            if (obj \u003d\u003d this) {","lastModifiedDate":"2021-11-04"},{"lineNumber":314,"author":{"gitId":"bernardwan"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":317,"author":{"gitId":"bernardwan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"bernardwan"},"content":"            if (!(obj instanceof ModelStubWithClass)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"bernardwan"},"content":"                return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"bernardwan"},"content":"            // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"bernardwan"},"content":"            ModelStubWithClass other \u003d (ModelStubWithClass) obj;","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"bernardwan"},"content":"            return this.tuitionClass.equals(other.tuitionClass);","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yourally2":8,"s7u4rt99":11,"Ongzl":25,"bernardwan":283}},{"path":"src/test/java/seedu/times/logic/commands/classcommands/SelectClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.times.logic.commands.classcommands;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":" * Note that the changes done by the SelectClassCommand is not reflected in the model, so the changes","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":" * cannot be tested.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"public class SelectClassCommandTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    void testEquals() {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        SelectClassCommand selectClassCommand \u003d new SelectClassCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        //same object","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        assertTrue(selectClassCommand.equals(selectClassCommand));","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        //same values","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        assertTrue(new SelectClassCommand(Index.fromOneBased(1)).equals(selectClassCommand));","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        //different values","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        assertFalse(selectClassCommand.equals(new SelectClassCommand(Index.fromOneBased(2))));","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        //different types","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        assertFalse(selectClassCommand.equals(1));","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        //null","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        assertFalse(selectClassCommand.equals(null));","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yourally2":37}},{"path":"src/test/java/seedu/times/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.NAME_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PREFIX_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MAX_TAG_LENGTH;","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MAX_TAG_NUMBER;","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MESSAGE_CONSTRAINTS_TOO_LONG;","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MESSAGE_CONSTRAINTS_TOO_MANY;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        Student expectedStudent \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        Student expectedStudentMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"                        + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"                new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        Student expectedStudent \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"                        + ADDRESS_DESC_AMY + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"                        + VALID_ADDRESS_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"        // missing nok prefix","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"                + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"                        + VALID_ADDRESS_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK, expectedMessage);","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"softmagnet"},"content":"                        + EMAIL_DESC_NOK + ADDRESS_DESC_NOK, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"        // invalid nok","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + VALID_PREFIX_NOK,","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"softmagnet"},"content":"                + INVALID_ADDRESS_DESC + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"softmagnet"},"content":"                + ADDRESS_DESC_NOK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_BOB + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"softmagnet"},"content":"                        + ADDRESS_DESC_NOK + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"yourally2"},"content":"        // Too many tags","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"yourally2"},"content":"        String userInput \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c MAX_TAG_NUMBER + 1; i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"yourally2"},"content":"            userInput +\u003d TAG_DESC_FRIEND + i;","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"yourally2"},"content":"        userInput +\u003d VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK;","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, userInput, MESSAGE_CONSTRAINTS_TOO_MANY);","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"yourally2"},"content":"        // Tag too many characters","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"yourally2"},"content":"        String invalidTag \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c MAX_TAG_LENGTH + 1; i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"yourally2"},"content":"            invalidTag +\u003d \"A\";","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"yourally2"},"content":"                + TAG_DESC_HUSBAND + invalidTag","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"yourally2"},"content":"                + VALID_PREFIX_NOK + NAME_DESC_NOK + PHONE_DESC_NOK + EMAIL_DESC_NOK + ADDRESS_DESC_NOK,","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"yourally2"},"content":"                MESSAGE_CONSTRAINTS_TOO_LONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yourally2":28,"s7u4rt99":17,"Ongzl":52,"softmagnet":28,"bernardwan":1,"-":72}},{"path":"src/test/java/seedu/times/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Ongzl":1,"-":149}},{"path":"src/test/java/seedu/times/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Ongzl":3,"-":35}},{"path":"src/test/java/seedu/times/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Ongzl":6,"softmagnet":1,"-":25}},{"path":"src/test/java/seedu/times/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_CLASSTIMING_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MAX_TAG_LENGTH;","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MAX_TAG_NUMBER;","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MESSAGE_CONSTRAINTS_TOO_LONG;","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"import static seedu.times.model.tag.Tag.MESSAGE_CONSTRAINTS_TOO_MANY;","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.EditCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"        // no such thing as invalid tag anymore thus no need to test for invalid tags","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + INVALID_CLASSTIMING_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"                         + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"        // Too many tags","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"        String userInput \u003d \"1\";","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c MAX_TAG_NUMBER + 1; i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"            userInput +\u003d TAG_DESC_FRIEND + i;","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, userInput, MESSAGE_CONSTRAINTS_TOO_MANY);","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"yourally2"},"content":"        // Tag too many characters","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"        String invalidTag \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"        for (int i \u003d 0; i \u003c MAX_TAG_LENGTH + 1; i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"            invalidTag +\u003d \"A\";","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"1\" + invalidTag, MESSAGE_CONSTRAINTS_TOO_LONG);","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"yourally2"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"yourally2"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"softmagnet"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"softmagnet"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"bernardwan"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":225,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"yourally2"},"content":"        EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yourally2":26,"s7u4rt99":2,"Ongzl":39,"softmagnet":13,"bernardwan":1,"-":152}},{"path":"src/test/java/seedu/times/logic/parser/FindNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindNameCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    private FindNameCommandParser parser \u003d new FindNameCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    public void parse_validArgs_returnsFindNameCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand expectedFindNameCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"                new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \"Alice, Bob\", expectedFindNameCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \" \\n Alice, \\n \\t Bob  \\t\", expectedFindNameCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Ongzl":8,"softmagnet":10,"-":20}},{"path":"src/test/java/seedu/times/logic/parser/FindTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindTagCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"public class FindTagCommandParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    private FindTagCommandParser parser \u003d new FindTagCommandParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    public void parse_validArgs_returnsFindTagCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        FindTagCommand expectedFindTagCommand \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"                new FindTagCommand(new TagsContainsKeywordsPredicate(Arrays.asList(\"Maths\", \"Physics\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \"Maths, Physics\", expectedFindTagCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \" \\n Maths, \\n \\t Physics  \\t\", expectedFindTagCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Ongzl":8,"softmagnet":25}},{"path":"src/test/java/seedu/times/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    private static final String INVALID_CLASSTIMIMG \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"    private static final String INVALID_RATE \u003d \"-32\";","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"    private static final String INVALID_TAG \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"    private static final String VALID_LOCATION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    private static final String VALID_CLASSTIMING \u003d \"Mon 13:00-14:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    private static final String VALID_RATE \u003d \"70\";","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"bernardwan"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"bernardwan"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"bernardwan"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"bernardwan"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"bernardwan"},"content":"        Location expectedAddress \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"bernardwan"},"content":"        assertEquals(expectedAddress, ParserUtil.parseLocation(addressWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseClassTiming((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClassTiming(INVALID_CLASSTIMIMG));","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_validValueWithoutWhitespace_returnsClassTiming() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"        ClassTiming expectedClassTiming \u003d new ClassTiming(VALID_CLASSTIMING);","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(expectedClassTiming, ParserUtil.parseClassTiming(VALID_CLASSTIMING));","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"s7u4rt99"},"content":"    public void parseClassTiming_validValueWithWhitespace_returnsTrimmedClassTiming() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"        String classTimingWithWhitespace \u003d WHITESPACE + VALID_CLASSTIMING + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"        ClassTiming expectedAddress \u003d new ClassTiming(VALID_CLASSTIMING);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(expectedAddress, ParserUtil.parseClassTiming(classTimingWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRate((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"softmagnet"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRate(INVALID_RATE));","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_validValueWithoutWhitespace_returnsRate() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"softmagnet"},"content":"        Rate expectedRate \u003d new Rate(VALID_RATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"softmagnet"},"content":"        assertEquals(expectedRate, ParserUtil.parseRate(VALID_RATE));","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"softmagnet"},"content":"    public void parseRate_validValueWithWhitespace_returnsTrimmedRate() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"softmagnet"},"content":"        String rateWithWhitespace \u003d WHITESPACE + VALID_RATE + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"softmagnet"},"content":"        Rate expectedRate \u003d new Rate(VALID_RATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"softmagnet"},"content":"        assertEquals(expectedRate, ParserUtil.parseRate(rateWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"s7u4rt99":26,"Ongzl":13,"softmagnet":27,"bernardwan":25,"-":183}},{"path":"src/test/java/seedu/times/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.SortCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"class SortCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_emptyArg_throwParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_tooManyArgs_throwParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"name asc desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timing desc asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"name timing desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timing name asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"name ascending\",","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_DIRECTIONOFSORT));","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timing descending\",","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_DIRECTIONOFSORT));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"classes desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_SORTBY));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"students asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.INVALID_SORTBY));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_validArgs_returnsSortCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"name asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"name\", \"asc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"name desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"name\", \"desc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"timing asc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"timing\", \"asc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"timing desc\",","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"                new SortCommand(\"timing\", \"desc\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    void checkSortBy_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.checkSortBy(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkSortBy(\"null\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkSortBy(\"names\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkSortBy(\"timings\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"    void checkDirectionOfSort_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.checkDirectionOfSort(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkDirectionOfSort(\"null\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkDirectionOfSort(\"ascending\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(ParseException.class, () -\u003e parser.checkDirectionOfSort(\"descending\")); // invalid keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"s7u4rt99":79,"Ongzl":7}},{"path":"src/test/java/seedu/times/logic/parser/TimesTableParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ClearCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.DeleteCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.EditCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ExitCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.FindNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.HelpCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ListCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"public class TimesTableParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    private final TimesTableParser parser \u003d new TimesTableParser();","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(student));","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditPersonDescriptorBuilder(student).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"    public void parseCommand_findname() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        FindNameCommand command \u003d (FindNameCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"                FindNameCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\", \")));","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        assertEquals(new FindNameCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yourally2":7,"s7u4rt99":2,"Ongzl":19,"softmagnet":6,"-":66}},{"path":"src/test/java/seedu/times/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.ViewCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.ui.TabName;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_emptyArg_throwParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_tooManyArgs_throwParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timetable two\",","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"classes cat\",","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"students seat\",","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"students timetable classes\",","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_invalidArgs_throwParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"timetables\",","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"class\",","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertParseFailure(parser, \"student\",","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.INVALID_TAB));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"timetable\",","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"                new ViewCommand(TabName.TIMETABLE));","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"classes\",","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"               new ViewCommand(TabName.CLASSES));","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        assertParseSuccess(parser, \"students\",","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"                new ViewCommand(TabName.STUDENTS));","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"s7u4rt99":54,"Ongzl":6}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/AddClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASSNAME_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASSNAME_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASSTIMING_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASSTIMING_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_CLASSNAME_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_CLASSTIMING_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.INVALID_RATE_DESC;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.LOCATION_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.LOCATION_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.RATE_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.RATE_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMPTY_STUDENTLIST;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.AddClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TuitionClassBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"public class AddClassCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    private AddClassCommandParser parser \u003d new AddClassCommandParser();","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    public void parse_allFieldsPresentAndValid_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"        TuitionClass expectedTuitionClass \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"                new TuitionClassBuilder().withClassName(VALID_CLASSNAME_IB_PHYSICS)","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                        .withClassTiming(VALID_CLASSTIMING_IB_PHYSICS).withLocation(VALID_LOCATION_IB_PHYSICS)","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"                        .withRate(VALID_RATE_IB_PHYSICS).withStudentList(VALID_EMPTY_STUDENTLIST).build();","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        //whitespace only preamble","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"                + LOCATION_DESC_PHYSICS + RATE_DESC_PHYSICS, new AddClassCommand(expectedTuitionClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        //multiple className - last name accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, CLASSNAME_DESC_MATHS + CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"                + LOCATION_DESC_PHYSICS + RATE_DESC_PHYSICS, new AddClassCommand(expectedTuitionClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        //multiple classTiming - last timing accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_MATHS + CLASSTIMING_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"                + LOCATION_DESC_PHYSICS + RATE_DESC_PHYSICS, new AddClassCommand(expectedTuitionClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        //multiple location - last location accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS + LOCATION_DESC_MATHS","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"                + LOCATION_DESC_PHYSICS + RATE_DESC_PHYSICS, new AddClassCommand(expectedTuitionClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"        //multiple rate - last rate accepted","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS + LOCATION_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"                + RATE_DESC_MATHS + RATE_DESC_PHYSICS, new AddClassCommand(expectedTuitionClass));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"                AddClassCommand.MESSAGE_USAGE)); //nothing","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"                AddClassCommand.MESSAGE_USAGE)); //whitespace","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"    public void parse_missingFieldS_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"        //missing className","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSTIMING_DESC_PHYSICS + RATE_DESC_PHYSICS + LOCATION_DESC_PHYSICS,","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        //missing classTiming","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSNAME_DESC_PHYSICS + RATE_DESC_PHYSICS + LOCATION_DESC_PHYSICS,","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"        //missing location","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS + RATE_DESC_PHYSICS,","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"        //missing rate","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS + LOCATION_DESC_PHYSICS,","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"    public void parse_invalidFields_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"        //invalid className","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, INVALID_CLASSNAME_DESC + CLASSTIMING_DESC_PHYSICS + LOCATION_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"                + RATE_DESC_PHYSICS, String.format(ClassName.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        //invalid classTiming","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSNAME_DESC_PHYSICS + INVALID_CLASSTIMING_DESC + LOCATION_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"                + RATE_DESC_PHYSICS, String.format(ClassTiming.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        //invalid location","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS + INVALID_LOCATION_DESC","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"                + RATE_DESC_PHYSICS, String.format(Location.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"        //invalid rate","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, CLASSNAME_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS + LOCATION_DESC_PHYSICS","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"                + INVALID_RATE_DESC, String.format(Rate.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Ongzl":107}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/AddToClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.index.Index.fromOneBased;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.AddToClassCommand.NO_STUDENT_INDEX_PROVIDED_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.AddToClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.AddToClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"public class AddToClassCommandParserTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    private Index validIndex1 \u003d fromOneBased(1);","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    private Index validIndex2 \u003d fromOneBased(2);","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    private Index validIndex3 \u003d fromOneBased(3);","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    private AddToClassCommandParser parser \u003d new AddToClassCommandParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE)); //nothing","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"  \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE)); //whitespace","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    public void parse_noStudentIndex_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"1\", NO_STUDENT_INDEX_PROVIDED_MESSAGE); //without trailing space","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"2  \", NO_STUDENT_INDEX_PROVIDED_MESSAGE); //with trailing space","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public void parse_invalidClassIndex_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        //non-digit with no student index","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"ds\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        //non-digit with student index","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"dsajkdha 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        //negative","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"-3 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        //zero","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"0 3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"    public void parse_invalidStudentIndex_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        //non-digit","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"3 dsa\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"        //negative","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"3 -3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"        //zero","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"3 0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        //first valid second invalid","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"3 2 0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"                AddToClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"    public void parse_all_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        //add single student","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        List\u003cIndex\u003e indexArray1 \u003d Arrays.asList(validIndex1, validIndex2);","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand expectedCommand1 \u003d new AddToClassCommand(indexArray1);","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \"1 2\", expectedCommand1);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        //add multiple students","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"        List\u003cIndex\u003e indexArray2 \u003d Arrays.asList(validIndex1, validIndex1, validIndex2, validIndex3);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand expectedCommand2 \u003d new AddToClassCommand(indexArray2);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \"1 1 2 3\", expectedCommand2);","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        //duplicate student indices in command will parse sucessfully with only one index in result","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"        List\u003cIndex\u003e indexArray3 \u003d Arrays.asList(validIndex1, validIndex1, validIndex3);","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        AddToClassCommand expectedCommand3 \u003d new AddToClassCommand(indexArray3);","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, \"1 1 1 3\", expectedCommand3);","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Ongzl":29,"softmagnet":58,"bernardwan":1}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/DeleteClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.DeleteClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.DeleteClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"public class DeleteClassCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    private DeleteClassCommandParser parser \u003d new DeleteClassCommandParser();","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteClassCommand(INDEX_FIRST));","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        //no args","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"        //empty args","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        //negative args","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        //zero","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"0\",","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        //float","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1.2\",","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        //char","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Ongzl":7,"bernardwan":40}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/EditClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASSTIMING_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASSTIMING_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASS_NAME_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.CLASS_NAME_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.LOCATION_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.LOCATION_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.RATE_DESC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.RATE_DESC_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.EditClassCommand.MESSAGE_NO_FIELD_PROVIDED;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.EditClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.EditClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.EditClassDescriptorBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"public class EditClassCommandParserTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"    private EditClassCommandParser parser \u003d new EditClassCommandParser();","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        //zero index","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"0 n/classname\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"                EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        //negative index","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"-1 n/classname\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"                EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"    public void parse_noMatchingPrefix_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        //invalid prefix","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"1 bn/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"                EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        //random string","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"1 asdoiaudouidskhja\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"                EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        //empty args","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"                EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        //whitespaces","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"   \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"                EditClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        //index provided but no field is provided","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"        //index provided but no field is provided, with trailing spaces","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"        assertParseFailure(parser, \"1     \", MESSAGE_NO_FIELD_PROVIDED);","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"    public void parse_singleFieldsSpecified_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"        //class name","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"        String userInput \u003d targetIndex.getOneBased() + CLASS_NAME_DESC_MATHS;","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder().withClassName(VALID_CLASSNAME_IB_MATHS)","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand expectedCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        //class timing","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"        userInput \u003d targetIndex.getOneBased() + CLASSTIMING_DESC_MATHS;","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptorBuilder().withClassTiming(VALID_CLASSTIMING_IB_MATHS)","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"        expectedCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"        //rate","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        userInput \u003d targetIndex.getOneBased() + RATE_DESC_MATHS;","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptorBuilder().withRate(VALID_RATE_IB_MATHS)","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"        expectedCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"softmagnet"},"content":"        //location","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_MATHS;","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptorBuilder().withLocation(VALID_LOCATION_IB_MATHS)","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"        expectedCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"        //note that studentNameList is not included because you can\u0027t edit studentNameList with editclass command","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"softmagnet"},"content":"        String userInput \u003d targetIndex.getOneBased() + RATE_DESC_PHYSICS + CLASSTIMING_DESC_PHYSICS","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"softmagnet"},"content":"                + CLASS_NAME_DESC_PHYSICS + LOCATION_DESC_PHYSICS;","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder()","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"                .withClassName(VALID_CLASSNAME_IB_PHYSICS).withClassTiming(VALID_CLASSTIMING_IB_PHYSICS)","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"                .withRate(VALID_RATE_IB_PHYSICS).withLocation(VALID_LOCATION_IB_PHYSICS).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand expectedCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"        String userInput \u003d targetIndex.getOneBased() + RATE_DESC_MATHS + RATE_DESC_PHYSICS + LOCATION_DESC_MATHS","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"                + LOCATION_DESC_PHYSICS + CLASS_NAME_DESC_MATHS + CLASS_NAME_DESC_PHYSICS + CLASSTIMING_DESC_MATHS","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"softmagnet"},"content":"                + CLASSTIMING_DESC_PHYSICS;","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"        EditClassDescriptor descriptor \u003d new EditClassDescriptorBuilder()","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"                .withClassName(VALID_CLASSNAME_IB_PHYSICS).withClassTiming(VALID_CLASSTIMING_IB_PHYSICS)","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"softmagnet"},"content":"                .withRate(VALID_RATE_IB_PHYSICS).withLocation(VALID_LOCATION_IB_PHYSICS).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"softmagnet"},"content":"        EditClassCommand expectedCommand \u003d new EditClassCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"softmagnet"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"Ongzl":30,"softmagnet":110}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/FindClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.FindClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.FindClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassTimingContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"public class FindClassCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"    private FindClassCommandParser parser \u003d new FindClassCommandParser();","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    public void parse_validDayArgs_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"FRI\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"FRI\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    public void parse_invalidDayArgs_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"FRO\",","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"    public void parse_invalidMultiDayArgs_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"FRI SAN\",","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"    public void parse_validMultiDayArgs_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"FRI\", \"SAT\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"FRI SAT\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"    public void parse_validMultiDayArgsWithMultiSpaces_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"FRI\", \"SAT\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"FRI                   SAT\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    public void parse_validTimingArgs_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"11:30-12:30\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"11:30-12:30\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"11:30-23:59\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"11:30-23:59\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"23:30-23:59\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"23:30-23:59\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"    /* Check for boundary values around 23:59 */","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    public void parse_invalidTimingArgs_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"11:30-12:32\",","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"11:30-22:59\",","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"11:30-23:58\",","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"11:30-24:00\",","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"    public void parse_validMultiTimingArgs_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"                        new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"11:30-12:30\", \"12:30-13:30\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"11:30-12:30 12:30-13:30\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"    public void parse_validMultiTimingArgsWithMultiSpaces_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"                        new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"11:30-12:30\", \"12:30-13:30\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"11:30-12:30                   12:30-13:30\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"    public void parse_validTimingArgsWithTrailingSpaces_returnsFindClassCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        FindClassCommand expectedFindClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"                new FindClassCommand(","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"                        new ClassTimingContainsKeywordsPredicate(Arrays.asList(\"11:30-12:30\", \"12:30-13:30\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"                        11:30-12:30 12:30-13:30\", expectedFindClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yourally2":101,"Ongzl":7}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/FindClassNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_NO_SEARCH_TERMS_ENTERED;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.FindClassNameCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.FindClassNameCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.predicates.ClassNameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"public class FindClassNameCommandParserTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"    private FindClassNameCommandParser parser \u003d new FindClassNameCommandParser();","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"        //empty args","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"        //empty args with spaces","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClassNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"        //with only delimiter","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \",\",","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_NO_SEARCH_TERMS_ENTERED));","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"        //with delimiter and spaces","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"        assertParseFailure(parser, \"   ,   \",","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"                String.format(MESSAGE_NO_SEARCH_TERMS_ENTERED));","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    public void parse_validArgs_returnsFindClassNameCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        //single keywords, no leading and trailing whitespaces","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        FindClassNameCommand expectedCommand \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"                new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(Arrays.asList(\"Physics\", \"Maths\")));","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \"Physics, Maths\", expectedCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        //single keywords, whitespaces between search terms","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \"    Physics, Maths     \", expectedCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        //multiple keywords in each search term","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        expectedCommand \u003d new FindClassNameCommand(new ClassNameContainsKeywordsPredicate(Arrays.asList(\"JC Physics\",","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"                \"JC Chemistry\")));","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"        assertParseSuccess(parser, \"JC Physics, JC Chemistry\", expectedCommand);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Ongzl":55}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/RemoveFromClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.classcommands.RemoveFromClassCommand.NO_STUDENT_INDEX_PROVIDED_MESSAGE;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.RemoveFromClassCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.parser.classcommandparsers.RemoveFromClassCommandParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"public class RemoveFromClassCommandParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"    private RemoveFromClassCommandParser parser \u003d new RemoveFromClassCommandParser();","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public void parse_allValidInputs_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        Index validIndex2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        Index validIndex3 \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        // remove single student","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand removeFromClassCommand \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"                new RemoveFromClassCommand(Arrays.asList(validIndex, validIndex));","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"        assertParseSuccess(parser, \"1 1\", removeFromClassCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        // remove single student","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        RemoveFromClassCommand removeFromClassCommand2 \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"                new RemoveFromClassCommand(Arrays.asList(validIndex, validIndex, validIndex2, validIndex3));","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        assertParseSuccess(parser, \"1 1 2 3\", removeFromClassCommand2);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    public void parse_missingArgs_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1\", String.format(NO_STUDENT_INDEX_PROVIDED_MESSAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    public void parse_negativeStudentIndex_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 -1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 1 -1 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    public void parse_zeroStudentIndex_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 1 0 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"    public void parse_zeroClassIndex_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"0 1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"0 1 3 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"    public void parse_negativeClassIndex_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"-1 1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"-3 1 3 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"    public void parse_nonIntegerArguments_throwsParseException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"        //floats","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1.1 1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 1.3\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"        //other chars","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"asdf 1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 asdf\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1 1 asdf 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"1! 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"        assertParseFailure(parser, \"2 @#2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"                RemoveFromClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Ongzl":8,"bernardwan":89}},{"path":"src/test/java/seedu/times/logic/parser/classcommands/SelectClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yourally2"},"content":"package seedu.times.logic.parser.classcommands;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import static seedu.times.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"yourally2"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"import static seedu.times.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.commands.classcommands.SelectClassCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.parser.classcommandparsers.SelectClassCommandParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"public class SelectClassCommandParserTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    private SelectClassCommandParser parser \u003d new SelectClassCommandParser();","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"                SelectClassCommand.MESSAGE_USAGE)); //nothing","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"  \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"                SelectClassCommand.MESSAGE_USAGE)); //whitespace","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public void parse_validIndex_returnsSelectClassCommand() {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        SelectClassCommand expectedSelectClassCommand \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"                new SelectClassCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"1\", expectedSelectClassCommand);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"        expectedSelectClassCommand \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"                new SelectClassCommand(Index.fromOneBased(10));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"        assertParseSuccess(parser, \"10\", expectedSelectClassCommand);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    public void parse_invalidClassIndex_failure() {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        //non-digit","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"ds\", MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        //non-digit with student index","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"oiajsd 1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"                SelectClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        //negative","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"-4\", MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        //zero","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yourally2":48}},{"path":"src/test/java/seedu/times/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BENSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TimesTableBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        assertEquals(new TimesTable(), new TimesTable(modelManager.getTimesTable()));","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        userPrefs.setTimesTableFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"        userPrefs.setTimesTableFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    public void setTimesTableFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTimesTableFilePath(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    public void setTimesTableFilePath_validPath_setsTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        modelManager.setTimesTableFilePath(path);","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        assertEquals(path, modelManager.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"    public void hasPerson_personNotInTimesTable_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"    public void hasPerson_personInTimesTable_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        TimesTable timesTable \u003d new TimesTableBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"        TimesTable differentTimesTable \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        modelManager \u003d new ModelManager(timesTable, userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(timesTable, userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"        // different timesTable -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTimesTable, userPrefs)));","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"        assertFalse(modelManager.equals(new ModelManager(timesTable, userPrefs)));","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"yourally2"},"content":"        differentUserPrefs.setTimesTableFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"yourally2"},"content":"        assertFalse(modelManager.equals(new ModelManager(timesTable, differentUserPrefs)));","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"yourally2":25,"s7u4rt99":2,"Ongzl":8,"-":97}},{"path":"src/test/java/seedu/times/model/ModelTestUtils.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"public class ModelTestUtils {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"    public static final String LONG_STRING_121_CHAR \u003d \"dsadasdksjaldjakdasdksjaldjakdasdksjaldjakdasdksjald\"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"            + \"jakdasdksjaldsakdjsajkdslakjdsacomakdasdksjaldsakdjsajkdslakjdsadsada\";","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"    public static final String LONG_STRING_120_CHAR \u003d \"dsadasdksjaldjakdasdksjaldjakdasdksjaldjakdasdksjald\"","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"            + \"jakdasdksjaldsakdjsajkdslakjdsacomakdasdksjaldsakdjsajkdslakjdsasada\";","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"    public static final String LONG_STRING_86_CHAR \u003d \"cdsadasdksjaldjakdasdksjaldjakdasdksjaldjakd\"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"            + \"asdksjaldjakdasdksjaldsakdjsajkdslakjdsddd\";","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    public static final String LONG_STRING_85_CHAR \u003d \"dsadasdksjaldjakdasdksjaldjakdasdksjaldjakdasdksjald\"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"            + \"jakdasdksjaldsakdjsajkdslakjsadds\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Ongzl":1,"softmagnet":11}},{"path":"src/test/java/seedu/times/model/TimesTableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"public class TimesTableTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    private final TimesTable timesTable \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"        assertEquals(Collections.emptyList(), timesTable.getStudentList());","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e timesTable.resetData(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    public void resetData_withValidReadOnlyTimesTable_replacesData() {","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"        TimesTable newData \u003d getTypicalTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        timesTable.resetData(newData);","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        assertEquals(newData, timesTable);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"        TimesTableStub newData \u003d new TimesTableStub(newStudents);","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e timesTable.resetData(newData));","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e timesTable.hasPerson(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    public void hasPerson_personNotInTimesTable_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        assertFalse(timesTable.hasPerson(ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"    public void hasPerson_personInTimesTable_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        timesTable.addStudent(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        assertTrue(timesTable.hasPerson(ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"    public void hasPerson_personWithSameIdentityFieldsInTimesTable_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        timesTable.addStudent(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        assertTrue(timesTable.hasPerson(editedAlice));","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e timesTable.getStudentList().remove(0));","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"     * A stub ReadOnlyTimesTable whose persons list can violate interface constraints.","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    private static class TimesTableStub implements ReadOnlyTimesTable {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        TimesTableStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"            return students;","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"        public ObservableList\u003cTuitionClass\u003e getTuitionClassList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"yourally2":30,"Ongzl":11,"softmagnet":6,"-":63}},{"path":"src/test/java/seedu/times/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public void setTimesTableFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTimesTableFilePath(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yourally2":2,"Ongzl":2,"-":17}},{"path":"src/test/java/seedu/times/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_85_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_86_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Address.isValidAddress(LONG_STRING_86_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Address.isValidAddress(LONG_STRING_85_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ongzl":4,"softmagnet":2,"-":34}},{"path":"src/test/java/seedu/times/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    public static final String LONG_EMAIL_86_CHAR \u003d \"cdsadasdksjaldjakdasdksjaldjakdasdksjalddjakd\"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"            + \"asdksjaldjakdasdksjaldsakdjsaj@google.com\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String LONG_EMAIL_85_CHAR \u003d \"cdsadasdksjaldjakdasdksjaldjakdasdksjlddjakd\"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"            + \"asdksjaldjakdasdksjaldsakdjsaj@google.com\";","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Email.isValidEmail(LONG_EMAIL_86_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Email.isValidEmail(LONG_EMAIL_85_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ongzl":2,"softmagnet":6,"-":66}},{"path":"src/test/java/seedu/times/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        // different predicate which has different keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"        //todo ZW fix ur tests","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"        //predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        //assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        //todo ZW fix ur tests","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        //assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ongzl":8,"softmagnet":1,"-":69}},{"path":"src/test/java/seedu/times/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_120_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_121_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Name.isValidName(LONG_STRING_121_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Name.isValidName(LONG_STRING_120_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    public void compareTo() {","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"        Name alice \u003d new Name(\"Alice\");","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        Name bernard \u003d new Name(\"Bernard\");","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"        assertTrue(alice.compareTo(bernard) \u003c 0);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        assertTrue(alice.compareTo(alice) \u003d\u003d 0);","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        assertTrue(bernard.compareTo(bernard) \u003d\u003d 0);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        assertTrue(bernard.compareTo(alice) \u003e 0);","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ongzl":13,"softmagnet":2,"-":39}},{"path":"src/test/java/seedu/times/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Phone.isValidPhone(\"93123232233332153432323232\")); //\u003e 25 digits","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Phone.isValidPhone(\"9312323223333215343232323\")); // 25 digits","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ongzl":2,"softmagnet":4,"-":38}},{"path":"src/test/java/seedu/times/model/person/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"public class StudentTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"        Student student \u003d new PersonBuilder().build();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"        Student editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"        Student aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"    public void isAnyTagsMatching() {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"        // matches keyword -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ALICE.isAnyTagsMatching(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"        // no match -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ALICE.isAnyTagsMatching(\"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yourally2":7,"Ongzl":10,"softmagnet":9,"bernardwan":2,"-":72}},{"path":"src/test/java/seedu/times/model/person/TagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"public class TagsContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Maths\");","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"Maths\", \"Physics\");","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d new TagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate firstPredicateCopy \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        // different predicate which has different keywords -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    public void test_tagsMatchesKeywords_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        // One tag matches with one keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        TagsContainsKeywordsPredicate predicate \u003d new TagsContainsKeywordsPredicate(Collections.singletonList(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Maths\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        // Multiple tags match with multiple keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"Maths\", \"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Maths\", \"Physics\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"        // Only one tag matches with one keyword among many keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"Maths\", \"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Maths\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        // Mixed-case tag matches with Mixed-case keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"pHySics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"PhYsICS\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Ongzl":3,"softmagnet":58}},{"path":"src/test/java/seedu/times/model/person/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.person;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.PersonBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    private final UniqueStudentList uniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"        Student editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniqueStudentList) null));","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"        uniquePersonList.setPersons(expectedUniqueStudentList);","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"yourally2"},"content":"        uniquePersonList.setPersons(studentList);","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"yourally2"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"yourally2"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"yourally2"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"yourally2"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicateStudents));","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yourally2":27,"Ongzl":9,"softmagnet":1,"-":133}},{"path":"src/test/java/seedu/times/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"        String invalidTagName1 \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"        String invalidTagName2 \u003d \" sec 4 e math\";","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName1));","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName2));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    public void isNameMatchingIgnoreCase() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        Tag mathsTag \u003d new Tag(\"Maths\");","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        //same name, same letter case -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        assertTrue(mathsTag.isNameMatchingIgnoreCase(\"Maths\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        //same name, different letter case -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        assertTrue(mathsTag.isNameMatchingIgnoreCase(\"mAtHS\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        //different name -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        assertFalse(mathsTag.isNameMatchingIgnoreCase(\"Physics\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Ongzl":3,"softmagnet":16,"bernardwan":3,"-":22}},{"path":"src/test/java/seedu/times/model/tuitionclass/ClassNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_85_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_86_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class ClassNameTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ClassName(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        String invalidCLassName \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ClassName(invalidCLassName));","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    public void isValidClassName() {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        //null name","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassName.isValidClassName(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        //invalid name","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ClassName.isValidClassName(\"\")); // empty string","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ClassName.isValidClassName(\" \")); // spaces only","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ClassName.isValidClassName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ClassName.isValidClassName(\"physics*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ClassName.isValidClassName(\"A-Maths\")); //contains mix of alphanumeric and non-alphanumeric","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        assertFalse(ClassName.isValidClassName(LONG_STRING_86_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        //valid name","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ClassName.isValidClassName(\"403\")); //numbers only","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ClassName.isValidClassName(\"biology\")); //alphabet only","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ClassName.isValidClassName(\"sec 4 physics\")); //mix of alphanumeric","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ClassName.isValidClassName(\"CHEMISTRY\")); //capital letters","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ClassName.isValidClassName(\"Learning Lab Tuition center Chemistry Sec 4\")); //long name","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        assertTrue(ClassName.isValidClassName(LONG_STRING_85_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"s7u4rt99":2,"Ongzl":4,"softmagnet":40}},{"path":"src/test/java/seedu/times/model/tuitionclass/ClassTimingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"public class ClassTimingTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ClassTiming(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    public void constructor_invalidClassTiming_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        //Todo","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"        String invalidClassTiming \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ClassTiming(invalidClassTiming));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    public void isValidClassTiming() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"s7u4rt99"},"content":"        // null classTiming","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassTiming.isValidClassTiming(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"s7u4rt99"},"content":"        // invalid classTiming","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"mon 9:00-10:00\")); // incorrect timing format","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"mon 0900-1000\")); // incorrect timing format","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"mon 10:00\")); // missing end time","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"09:00-10:00\")); // missing day time","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"monday 10:00\")); // incorrect day format","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THUR 0900-1000\")); // incorrect day format","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THU 09:10-10:00\")); // does not start on the hour or 30 min mark","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THU 09:00-10:15\")); // does not end on the hour or 30 min mark","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(ClassTiming.isValidClassTiming(\"THU 09:00-23:58\")); // does not end at 23:59","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"        // valid classTiming","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(ClassTiming.isValidClassTiming(\"Mon 01:00-02:00\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(ClassTiming.isValidClassTiming(\"mON 01:00-23:30\")); // DAY in weird caps","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(ClassTiming.isValidClassTiming(\"mON 01:00-23:59\")); // DAY in weird caps","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"s7u4rt99"},"content":"    public void formatClassTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"s7u4rt99"},"content":"        // todo private method","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"    public void getDayToInt() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"Mon 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(2, new ClassTiming(\"Tue 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(3, new ClassTiming(\"Wed 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(4, new ClassTiming(\"Thu 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(5, new ClassTiming(\"Fri 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(6, new ClassTiming(\"Sat 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(7, new ClassTiming(\"Sun 01:00-02:00\").getDayToInt());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"    public void isEarlier() {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"        // same day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"wed 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"thu 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"fri 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        // same day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"wed 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"        // later day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"mon 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"        // later day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"tue 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"        // same day same time slot","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"wed 12:00-13:00\").isEarlier(new ClassTiming(\"wed 12:00-13:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"s7u4rt99"},"content":"    public void isAfter() {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"10:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"11:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"12:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(new ClassTiming(\"Sat 11:00-12:00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"s7u4rt99"},"content":"                .isAfter(LocalTime.parse(\"15:00\", DateTimeFormatter.ofPattern(\"HH:mm\"))));","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"    public void getStartTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"11:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getStartTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"11:01\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getStartTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"10:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getStartTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"00:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 00:00-23:30\").getStartTime());","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"    public void getEndTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"12:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getEndTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"12:01\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getEndTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(LocalTime.parse(\"15:00\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 11:00-12:00\").getEndTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(LocalTime.parse(\"23:30\", DateTimeFormatter.ofPattern(\"HH:mm\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"s7u4rt99"},"content":"                new ClassTiming(\"Sat 00:00-23:30\").getEndTime());","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"s7u4rt99"},"content":"    public void getClassTiming() {","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:59\", new ClassTiming(\"moN 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:59\", new ClassTiming(\"Tue 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:59\", new ClassTiming(\"wEd 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"THU 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"fri 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"sAT 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(\"00:00-23:30\", new ClassTiming(\"SuN 00:00-23:30\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(\"00:01-23:30\", new ClassTiming(\"MON 00:00-23:59\").getClassTiming());","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"s7u4rt99"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"s7u4rt99"},"content":"        // same day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(-1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"wed 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(-1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"thu 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"s7u4rt99"},"content":"        // earlier day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(-1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"fri 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"s7u4rt99"},"content":"        // same day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"wed 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"s7u4rt99"},"content":"        // later day earlier time","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"mon 15:00-16:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"s7u4rt99"},"content":"        // later day later time","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"tue 09:00-10:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"s7u4rt99"},"content":"        // same day same time slot","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(0, new ClassTiming(\"wed 12:00-13:00\").compareTo(new ClassTiming(\"wed 12:00-13:00\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yourally2":1,"s7u4rt99":159,"Ongzl":2}},{"path":"src/test/java/seedu/times/model/tuitionclass/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_85_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.model.ModelTestUtils.LONG_STRING_86_CHAR;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class LocationTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"        String invalidLocation2 \u003d \" \";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation2));","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"    public void isValidLocation() {","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        //null location","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        //invalid locations","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Location.isValidLocation(\"\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Location.isValidLocation(\" \"));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Location.isValidLocation(\" Serangoon\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Location.isValidLocation(LONG_STRING_86_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        //valid locations","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Location.isValidLocation(\"Nex Kumon\")); //no non-alpha numeric","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Location.isValidLocation(\"Hougang blk 111 #02-310\")); //contains non-alpha numeric","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Location.isValidLocation(LONG_STRING_85_CHAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"s7u4rt99":2,"Ongzl":4,"softmagnet":36}},{"path":"src/test/java/seedu/times/model/tuitionclass/RateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"softmagnet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"public class RateTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rate(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"    public void constructor_negativeRate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"        String negativeRate \u003d \"-32\";","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(negativeRate));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    public void constructor_emptyRate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        String emptyRate1 \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        String emptyRate2 \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(emptyRate1));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(emptyRate2));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"    public void isValidRate() {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        //null rate","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rate.isValidRate(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"        //invalid rate","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"-42\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"32.3232\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\".32\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\".3232\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"1000000\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        assertFalse(Rate.isValidRate(\"9999000\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        //valid rate","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"50\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"50.3\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"40.40\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        assertTrue(Rate.isValidRate(\"999999.99\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yourally2":1,"Ongzl":2,"softmagnet":50}},{"path":"src/test/java/seedu/times/model/tuitionclass/StudentNameListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.DuplicateStudentInClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":" * Tests for {@code StudentNameList}","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":" * Contains integration test with {@code Name}","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"public class StudentNameListTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    private Name amelia \u003d new Name(\"Amelia\");","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"    private Name jake \u003d new Name(\"Jake\");","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    private Name peter \u003d new Name(\"Peter\");","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"    private Name wang \u003d new Name(\"Wang Lu Xun\");","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"    private Name naomi \u003d new Name(\"Naomi\");","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"s7u4rt99"},"content":"    private Name terry \u003d new Name(\"Terry\");","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"s7u4rt99"},"content":"    private Name guoJun \u003d new Name(\"Guo Jun\");","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"s7u4rt99"},"content":"    private Name yaoMing \u003d new Name(\"Yao Ming\");","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"    private List\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e(Arrays.asList(amelia, jake, peter, wang));","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    private String[] validNames1 \u003d {\"Amelia\", \"Jake\", \"Peter\", \"Wang Lu Xun\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"    private String[] validNames2 \u003d {\"Guo Jun\", \"Naomi\", \"Terry\", \"Yao Ming\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    private String[] validNamesCombined \u003d {\"Amelia\", \"Jake\", \"Peter\", \"Wang Lu Xun\", \"Guo Jun\", \"Naomi\",","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"        \"Terry\", \"Yao Ming\"};","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    private StudentNameList studentNameListSampleOne \u003d new StudentNameList(validNames1);","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"    private StudentNameList studentNameListSampleTwo \u003d new StudentNameList(validNames2);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"    private StudentNameList studentNameListSampleCombined \u003d new StudentNameList(validNamesCombined);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    @Test void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        String[] validNames3 \u003d {\"Jake\", \"Amelia\", \"Peter\", \"Wang Lu Xun\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        //same obj returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(studentNameListSampleOne.equals(studentNameListSampleOne));","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        //list of same name returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(studentNameListSampleOne.equals(new StudentNameList(validNames1)));","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        //different list returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(studentNameListSampleOne.equals(studentNameListSampleTwo));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        //same list with different order returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(studentNameListSampleOne.equals(new StudentNameList(validNames3)));","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"    public void contains() {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        //null","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(NullPointerException.class, () -\u003e studentNameListSampleOne.contains(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"        //contains returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(studentNameListSampleOne.contains(amelia));","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(studentNameListSampleOne.contains(jake));","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(studentNameListSampleTwo.contains(guoJun));","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(studentNameListSampleTwo.contains(naomi));","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        //not contain returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(studentNameListSampleOne.contains(yaoMing));","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(studentNameListSampleOne.contains(terry));","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(studentNameListSampleTwo.contains(wang));","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(studentNameListSampleTwo.contains(peter));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"    public void add() {","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        StudentNameList studentList \u003d new StudentNameList(validNames1);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"        //null","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"        assertThrows(NullPointerException.class, () -\u003e studentList.add(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"softmagnet"},"content":"        //duplicate","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"        assertThrows(DuplicateStudentInClassException.class, () -\u003e studentList.add(jake));","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"        //non-duplicate adds successfully","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"        studentList.add(guoJun);","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"s7u4rt99"},"content":"        studentList.add(naomi);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"s7u4rt99"},"content":"        studentList.add(terry);","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"s7u4rt99"},"content":"        studentList.add(yaoMing);","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleCombined);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"softmagnet"},"content":"    public void addAll() {","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"        //duplicates are not added","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"softmagnet"},"content":"        StudentNameList studentList \u003d new StudentNameList(validNames1);","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"        studentList.addAll(studentNameListSampleOne);","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleOne);","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"        //new names are added successfully","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"        StudentNameList studentList2 \u003d new StudentNameList(validNames2);","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"        studentList.addAll(studentList2);","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleCombined);","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"softmagnet"},"content":"    public void remove() {","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"        StudentNameList studentList \u003d new StudentNameList(validNamesCombined);","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"        //remove a name that doesn\u0027t exists does nothing","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"        studentList.remove(new Name(\"Maurice\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleCombined);","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"softmagnet"},"content":"        //remove names that exist removes them successfully","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"s7u4rt99"},"content":"        studentList.remove(amelia);","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"s7u4rt99"},"content":"        studentList.remove(jake);","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"s7u4rt99"},"content":"        studentList.remove(peter);","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"s7u4rt99"},"content":"        studentList.remove(wang);","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleTwo);","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"    public void removeAll() {","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"        StudentNameList studentList \u003d new StudentNameList(validNamesCombined);","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"softmagnet"},"content":"        //remove names that don\u0027t exists does nothing","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"        studentList.removeAll(Arrays.asList(new Name(\"James\"), new Name(\"Kobe\")));","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleCombined);","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"        //remove names that exist removes them successfully","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"s7u4rt99"},"content":"        studentList.removeAll(Arrays.asList(peter, wang, jake, amelia));","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(studentList, studentNameListSampleTwo);","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"s7u4rt99":51,"Ongzl":3,"softmagnet":80}},{"path":"src/test/java/seedu/times/model/tuitionclass/TuitionClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_STUDENTLIST_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TuitionClassBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"public class TuitionClassTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"    private ClassName className \u003d new ClassName(\"test\");","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"    private Location location \u003d new Location(\"test\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"    private Rate rate \u003d new Rate(\"50\");","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"    public void isSameClass() {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"softmagnet"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"softmagnet"},"content":"        assertTrue(IB_PHYSICS.isSameClass(IB_PHYSICS));","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"        //null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        assertFalse(IB_PHYSICS.isSameClass(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        //same class timing, all other attribtues different -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withClassName(VALID_CLASSNAME_IB_MATHS)","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"                .withLocation(VALID_LOCATION_IB_MATHS).withRate(VALID_RATE_IB_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"                .withStudentList(VALID_STUDENTLIST_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(IB_PHYSICS.isSameClass(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"        //different class timing, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withClassTiming(VALID_CLASSTIMING_IB_MATHS).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(IB_PHYSICS.isSameClass(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass iBPhysicsCopy \u003d new TuitionClassBuilder(IB_PHYSICS).build();","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"s7u4rt99"},"content":"        assertTrue(IB_PHYSICS.equals(iBPhysicsCopy));","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"        assertTrue(IB_PHYSICS.equals(IB_PHYSICS));","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"softmagnet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"softmagnet"},"content":"        assertFalse(IB_PHYSICS.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"        assertFalse(IB_PHYSICS.equals(5));","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        // different classes -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        assertFalse(IB_PHYSICS.equals(IB_MATHS));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"        // different class name -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"        TuitionClass editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withClassName(VALID_CLASSNAME_IB_MATHS)","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        // different class timing -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withClassTiming(VALID_CLASSTIMING_IB_MATHS)","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        // different rate -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withRate(VALID_RATE_IB_MATHS)","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"softmagnet"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withLocation(VALID_LOCATION_IB_MATHS)","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"        // different student list -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"        editedIbPhysics \u003d new TuitionClassBuilder(IB_PHYSICS).withStudentList(VALID_STUDENTLIST_IB_MATHS)","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"softmagnet"},"content":"                .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"        assertFalse(IB_PHYSICS.equals(editedIbPhysics));","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"softmagnet"},"content":"    //// isOverlapping","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_overlappingTiming_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 16:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"        assertTrue(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"        assertTrue(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"    public void isOverlapping_oneClassWithinOther_returnsTrue() {","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 16:00-18:00\"), location, rate);","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 15:00-19:00\"), location, rate);","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        assertTrue(class1.isOverlapping(class2));","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        assertTrue(class2.isOverlapping(class1));","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_differentDay_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 16:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"TUE 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_sameDayNoOverlap_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 15:00-16:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"    public void isOverlapping_sameDayBackToBack_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class1 \u003d new TuitionClass(className, new ClassTiming(\"MON 15:00-17:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"        TuitionClass class2 \u003d new TuitionClass(className, new ClassTiming(\"MON 17:00-18:00\"), location, rate);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class1.isOverlapping(class2));","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"        assertFalse(class2.isOverlapping(class1));","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"s7u4rt99":17,"Ongzl":20,"softmagnet":49,"bernardwan":40}},{"path":"src/test/java/seedu/times/model/tuitionclass/UniqueClassListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.model.tuitionclass;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_CHEMISTRY;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.JC_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.DuplicateClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.OverlappingClassException;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.exceptions.TuitionClassNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TuitionClassBuilder;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"public class UniqueClassListTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    private final UniqueClassList uniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    public void contains_nullTuitionClass_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.contains(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    public void contains_tuitionClassNotInList_returnsFalse() {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"        assertFalse(uniqueClassList.contains(JC_CHEMISTRY));","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    public void contains_tuitionClassInList_returnsTrue() {","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        assertTrue(uniqueClassList.contains(JC_CHEMISTRY));","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    public void contains_tuitionClassWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        TuitionClass editedClass \u003d new TuitionClassBuilder(JC_CHEMISTRY).withRate(\"69\")","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"                .withLocation(\"Punggol Central Waterway Point #2-14\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        assertTrue(uniqueClassList.contains(editedClass));","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"    public void add_nullTuitionClass_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.add(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"    public void add_duplicateTuitionClass_throwsInvalidClassException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        assertThrows(OverlappingClassException.class, () -\u003e uniqueClassList.add(JC_CHEMISTRY));","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    public void setClass_nullTargetTuitionClass_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClass(null, JC_CHEMISTRY));","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"    public void setClass_nullEditedTuitionClass_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClass(JC_CHEMISTRY, null));","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    public void setClass_targetTuitionClassNotInList_throwsTuitionClassNotFoundException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"        assertThrows(TuitionClassNotFoundException.class, () -\u003e uniqueClassList.setClass(JC_CHEMISTRY, JC_CHEMISTRY));","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"    public void setClass_editedTuitionClassIsSameTuitionClass_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.setClass(JC_CHEMISTRY, JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"        expectedUniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    public void setClass_editedTuitionClassHasSameIdentity_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"        TuitionClass editedChem \u003d new TuitionClassBuilder(JC_CHEMISTRY).withRate(\"69\")","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"                .withLocation(\"Punggol Central Waterway Point #2-14\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.setClass(JC_CHEMISTRY, editedChem);","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        expectedUniqueClassList.add(editedChem);","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"    public void setClass_editedTuitionClassHasDifferentIdentity_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.setClass(JC_CHEMISTRY, JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        expectedUniqueClassList.add(JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"    public void setClass_editedTuitionClassHasNonUniqueIdentity_throwsDuplicateClassException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"        assertThrows(DuplicateClassException.class, () -\u003e uniqueClassList.setClass(JC_CHEMISTRY, JC_MATHS));","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"    public void delete_nullTuitionClass_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.delete(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"    public void delete_tuitionClassDoesNotExist_throwsTuitionClassNotFoundException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"        assertThrows(TuitionClassNotFoundException.class, () -\u003e uniqueClassList.delete(JC_CHEMISTRY));","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"    public void delete_existingTuitionClass_removesTuitionClass() {","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.delete(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"        assertEquals(uniqueClassList, expectedUniqueClassList);","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"    public void setClasses_nullUniqueClassList_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClasses((List\u003cTuitionClass\u003e) null));","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"    public void setClasses_uniqueClassList_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"        List\u003cTuitionClass\u003e tuitionClassList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"        tuitionClassList.add(JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.setClasses(tuitionClassList);","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        expectedUniqueClassList.add(JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"    public void setClasses_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClasses((List\u003cTuitionClass\u003e) null));","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"Ongzl"},"content":"    public void setClasses_listWithDuplicateTuitionClass_throwsDuplicateClassException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"Ongzl"},"content":"        List\u003cTuitionClass\u003e listWithDuplicateTuitionClass \u003d Arrays.asList(JC_CHEMISTRY, JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"        assertThrows(DuplicateClassException.class, () -\u003e uniqueClassList.setClasses(listWithDuplicateTuitionClass));","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"Ongzl"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"Ongzl"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"Ongzl"},"content":"            -\u003e uniqueClassList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"Ongzl"},"content":"    public void equals_twoUniqueClassListSameClassesDifferentOrder_notEquals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList.add(JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"Ongzl"},"content":"        UniqueClassList uniqueClassList2 \u003d new UniqueClassList();","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList2.add(JC_MATHS);","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"Ongzl"},"content":"        uniqueClassList2.add(JC_CHEMISTRY);","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"Ongzl"},"content":"        assertFalse(uniqueClassList.equals(uniqueClassList2));","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Ongzl":169,"softmagnet":1}},{"path":"src/test/java/seedu/times/storage/JsonAdaptedNokTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.storage.JsonAdaptedNok.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BENSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"public class JsonAdaptedNokTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    private static final Nok VALID_NOK \u003d BENSON.getNok();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NOK);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        assertEquals(VALID_NOK, nok.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"        JsonAdaptedNok nok \u003d new JsonAdaptedNok(VALID_NAME, VALID_PHONE, VALID_EMAIL, null);","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, nok::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Ongzl":10,"bernardwan":82}},{"path":"src/test/java/seedu/times/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.BENSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    private static final String INVALID_TAG \u003d \" \";","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    private static final JsonAdaptedNok VALID_NOK \u003d new JsonAdaptedNok(BENSON.getNok());","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    public void toModelType_nullNok_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        assertDoesNotThrow(() -\u003e new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"                null, VALID_TAGS));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"softmagnet"},"content":"                         VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"softmagnet"},"content":"                VALID_NOK, VALID_TAGS);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"yourally2"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"softmagnet"},"content":"                        VALID_NOK, invalidTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":31,"Ongzl":10,"softmagnet":10,"-":75}},{"path":"src/test/java/seedu/times/storage/JsonAdaptedTuitionClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.storage.JsonAdaptedTuitionClass.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"public class JsonAdaptedTuitionClassTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"    private static final String INVALID_CLASS_NAME \u003d \" \";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"    private static final String INVALID_CLASS_TIMING \u003d \"MON 11:00-10:00\";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"    private static final String INVALID_RATE \u003d \"Sixty\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"    private static final List\u003cString\u003e INVALID_STUDENT_NAME_LIST \u003d new ArrayList\u003c\u003e(Arrays.asList(\" \"));","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"Ongzl"},"content":"    private static final String VALID_CLASS_NAME \u003d IB_PHYSICS.getClassName().toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"Ongzl"},"content":"    private static final String VALID_CLASS_TIMING \u003d IB_PHYSICS.getClassTiming().toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"Ongzl"},"content":"    private static final String VALID_RATE \u003d IB_PHYSICS.getRate().toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"Ongzl"},"content":"    private static final String VALID_LOCATION \u003d IB_PHYSICS.getLocation().toString();","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"    private static final List\u003cString\u003e VALID_EMPTY_STUDENT_NAME_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_validTuitionClassDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(IB_PHYSICS);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"        assertEquals(IB_PHYSICS, tuitionClass.toModelType());","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_emptyStudentList_success() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        assertDoesNotThrow(() -\u003e new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, VALID_CLASS_NAME, VALID_RATE,","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"                VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST));","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_invalidClassTiming_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(INVALID_CLASS_TIMING, VALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"                VALID_RATE, VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d ClassTiming.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_nullClassTiming_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(null, VALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"                VALID_RATE, VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassTiming.class.getSimpleName());","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_invalidClassName_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, INVALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"                VALID_RATE, VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d ClassName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_nullClassName_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, null,","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"                VALID_RATE, VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassName.class.getSimpleName());","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_invalidRate_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, VALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"Ongzl"},"content":"                INVALID_RATE, VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d Rate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_nullRate_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, VALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"Ongzl"},"content":"                null, VALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Rate.class.getSimpleName());","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, VALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"                VALID_RATE, INVALID_LOCATION, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        JsonAdaptedTuitionClass tuitionClass \u003d new JsonAdaptedTuitionClass(VALID_CLASS_TIMING, VALID_CLASS_NAME,","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"                VALID_RATE, null, VALID_EMPTY_STUDENT_NAME_LIST);","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tuitionClass::toModelType);","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"Ongzl":110}},{"path":"src/test/java/seedu/times/storage/JsonSerializableTimesTableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.util.JsonUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.testutil.TypicalTimestable;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"public class JsonSerializableTimesTableTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTimesTableTest\");","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsTimesTable.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonTimesTable.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonTimesTable.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"        JsonSerializableTimesTable dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"                JsonSerializableTimesTable.class).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        TimesTable timesTableFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        TimesTable typicalPersonsTimesTable \u003d TypicalTimestable.getTypicalTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        assertEquals(timesTableFromFile, typicalPersonsTimesTable);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        JsonSerializableTimesTable dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"                JsonSerializableTimesTable.class).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        JsonSerializableTimesTable dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"                JsonSerializableTimesTable.class).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTimesTable.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yourally2":15,"Ongzl":6,"-":26}},{"path":"src/test/java/seedu/times/storage/JsonTimesTableStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"yourally2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.ALICE;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.HOON;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.IDA;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"public class JsonTimesTableStorageTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTimesTableStorageTest\");","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    @TempDir","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    public Path testFolder;","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"    public void readTimesTable_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTimesTable(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"    private java.util.Optional\u003cReadOnlyTimesTable\u003e readTimesTable(String filePath) throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        return new JsonTimesTableStorage(Paths.get(filePath)).readTimesTable(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"                : null;","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"yourally2"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"        assertFalse(readTimesTable(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTimesTable(\"notJsonFormatTimesTable.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"    public void readTimesTable_invalidPersonTimesTable_throwDataConversionException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTimesTable(\"invalidPersonTimesTable.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    public void readTimesTable_invalidAndValidPersonTimesTable_throwDataConversionException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTimesTable(\"invalidAndValidPersonTimesTable.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    public void readAndSaveTimesTable_allInOrder_success() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTimesTable.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"yourally2"},"content":"        TimesTable original \u003d getTypicalTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"yourally2"},"content":"        JsonTimesTableStorage jsonTimesTableStorage \u003d new JsonTimesTableStorage(filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"        jsonTimesTableStorage.saveTimesTable(original, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"        ReadOnlyTimesTable readBack \u003d jsonTimesTableStorage.readTimesTable(filePath).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"yourally2"},"content":"        assertEquals(original, new TimesTable(readBack));","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"        jsonTimesTableStorage.saveTimesTable(original, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"yourally2"},"content":"        readBack \u003d jsonTimesTableStorage.readTimesTable(filePath).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"        assertEquals(original, new TimesTable(readBack));","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"        jsonTimesTableStorage.saveTimesTable(original); // file path not specified","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"yourally2"},"content":"        readBack \u003d jsonTimesTableStorage.readTimesTable().get(); // file path not specified","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"yourally2"},"content":"        assertEquals(original, new TimesTable(readBack));","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    public void saveTimesTable_nullTimesTable_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTimesTable(null, \"SomeFile.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"yourally2"},"content":"     * Saves {@code timestable} at the specified {@code filePath}.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"yourally2"},"content":"    private void saveTimesTable(ReadOnlyTimesTable timesTable, String filePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"yourally2"},"content":"            new JsonTimesTableStorage(Paths.get(filePath))","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"yourally2"},"content":"                    .saveTimesTable(timesTable, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"yourally2"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"yourally2"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"yourally2"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    public void saveTimesTable_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTimesTable(new TimesTable(), null));","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yourally2":101,"Ongzl":9}},{"path":"src/test/java/seedu/times/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"        userPrefs.setTimesTableFilePath(Paths.get(\"timestable.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"yourally2":1,"Ongzl":5,"-":117}},{"path":"src/test/java/seedu/times/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.TypicalTimestable.getTypicalTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.GuiSettings;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.ReadOnlyTimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.UserPrefs;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"        JsonTimesTableStorage timesTableStorage \u003d new JsonTimesTableStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        storageManager \u003d new StorageManager(timesTableStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"    public void timesTableReadSave() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"yourally2"},"content":"         * {@link JsonTimesTableStorage} class.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"yourally2"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTimesTableStorageTest} class.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"yourally2"},"content":"        TimesTable original \u003d getTypicalTimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"yourally2"},"content":"        storageManager.saveTimesTable(original);","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"        ReadOnlyTimesTable retrieved \u003d storageManager.readTimesTable().get();","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        assertEquals(original, new TimesTable(retrieved));","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"    public void getTimesTableFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"        assertNotNull(storageManager.getTimesTableFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":11,"Ongzl":6,"-":51}},{"path":"src/test/java/seedu/times/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Ongzl":1,"-":33}},{"path":"src/test/java/seedu/times/testutil/EditClassDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.classcommands.EditClassCommand.EditClassDescriptor;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"public class EditClassDescriptorBuilder {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    private EditClassDescriptor descriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder() {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder(EditClassDescriptor descriptor) {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"        this.descriptor \u003d new EditClassDescriptor(descriptor);","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs an EditClassDescriptorBuilder with the information of the TuitionClass object.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * @param tuitionClass TuitionClass object to build the EditClassDescriptorBuilder with.","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder(TuitionClass tuitionClass) {","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        descriptor \u003d new EditClassDescriptor();","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassName(tuitionClass.getClassName());","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassTiming(tuitionClass.getClassTiming());","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        descriptor.setRate(tuitionClass.getRate());","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"        descriptor.setLocation(tuitionClass.getLocation());","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"        descriptor.setStudentList(tuitionClass.getStudentList());","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * Sets the class name of the EditClassDescriptorBuilder object to the given class name.","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"s7u4rt99"},"content":"     * @param className Class name to be set to.","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"s7u4rt99"},"content":"     * @return EditClassDescriptorBuilder object with the class name set to the given class name.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withClassName(String className) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassName(new ClassName(className));","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     * Sets the class timing of the EditClassDescriptorBuilder object to the given class timing.","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming Class timing to be set to.","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"     * @return EditClassDescriptorBuilder object with the class timing set to the given class timing.","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withClassTiming(String classTiming) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        descriptor.setClassTiming(new ClassTiming(classTiming));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"     * Sets the rate of the EditClassDescriptorBuilder object to the given rate.","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * @param rate Rate to be set to.","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     * @return EditClassDescriptorBuilder object with the rate set to the given rate.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withRate(String rate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        descriptor.setRate(new Rate(rate));","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"     * Sets the location of the EditClassDescriptorBuilder object to the given location.","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"     * @param location Location to be set to.","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"     * @return EditClassDescriptorBuilder object with the location set to the given location.","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"     * Sets the student list of the EditClassDescriptorBuilder object to the given student list.","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"     * @param studentList Student list to be set to.","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     * @return EditClassDescriptorBuilder object with the student list set to the given student list.","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptorBuilder withStudentList(String... studentList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        descriptor.setStudentList(new StudentNameList(studentList));","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"     * Builds the EditClassDescriptor with the information stored in the EditClassDescriptorBuilder object.","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"     * @return EditClassDescriptor built with the information stored in the EditClassDescriptorBuilder object.","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"softmagnet"},"content":"    public EditClassDescriptor build() {","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"        return descriptor;","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"s7u4rt99":44,"Ongzl":8,"softmagnet":48}},{"path":"src/test/java/seedu/times/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.commands.EditCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public EditPersonDescriptorBuilder(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"    public EditPersonDescriptorBuilder(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        descriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"        descriptor.setAddress(student.getAddress());","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokName(student.getNok().getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokPhone(student.getNok().getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokEmail(student.getNok().getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokAddress(student.getNok().getAddress());","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokName(new Name(name));","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokPhone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokPhone(new Phone(phone));","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokEmail} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokEmail(new Email(email));","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"    public EditPersonDescriptorBuilder withNokAddress(String address) {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"        descriptor.setNokAddress(new Address(address));","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yourally2":14,"Ongzl":43,"softmagnet":2,"-":67}},{"path":"src/test/java/seedu/times/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Address;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Email;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Name;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Nok;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Phone;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.util.SampleDataUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_NAME \u003d \"Zhenglin Ong\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_PHONE \u003d \"97762839\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_EMAIL \u003d \"zhenglin@gmail.com\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public static final String DEFAULT_NOK_ADDRESS \u003d \"345, Clementi Ave 6, #02-141\";","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Ongzl"},"content":"    private Name nokName;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Ongzl"},"content":"    private Phone nokPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Ongzl"},"content":"    private Email nokEmail;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"    private Address nokAddress;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Ongzl"},"content":"        nokName \u003d new Name(DEFAULT_NOK_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Ongzl"},"content":"        nokPhone \u003d new Phone(DEFAULT_NOK_PHONE);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Ongzl"},"content":"        nokEmail \u003d new Email(DEFAULT_NOK_EMAIL);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Ongzl"},"content":"        nokAddress \u003d new Address(DEFAULT_NOK_ADDRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"    public PersonBuilder(Student studentToCopy) {","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"yourally2"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"yourally2"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"        address \u003d studentToCopy.getAddress();","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"Ongzl"},"content":"        nokName \u003d studentToCopy.getNok().getName();","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"        nokPhone \u003d studentToCopy.getNok().getPhone();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Ongzl"},"content":"        nokEmail \u003d studentToCopy.getNok().getEmail();","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Ongzl"},"content":"        nokAddress \u003d studentToCopy.getNok().getAddress();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Ongzl"},"content":"        this.nokName \u003d new Name(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokPhone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Ongzl"},"content":"        this.nokPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokEmail} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Ongzl"},"content":"        this.nokEmail \u003d new Email(email);","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Ongzl"},"content":"     * Sets the {@code NokAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Ongzl"},"content":"    public PersonBuilder withNokAddress(String address) {","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Ongzl"},"content":"        this.nokAddress \u003d new Address(address);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Ongzl"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Ongzl"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Ongzl"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Ongzl"},"content":"     * Builds student with all details included in the builder.","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Ongzl"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"Ongzl"},"content":"     * @return Student with all the deatils included in the builder.","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Ongzl"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"yourally2"},"content":"    public Student build() {","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"Ongzl"},"content":"        Nok nok \u003d new Nok(nokName, nokPhone, nokEmail, nokAddress);","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"softmagnet"},"content":"        return new Student(name, phone, email, address, nok, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yourally2":11,"Ongzl":62,"softmagnet":1,"-":79}},{"path":"src/test/java/seedu/times/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.logic.commands.AddCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"import seedu.times.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tag.Tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(student);","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    public static String getPersonDetails(Student student) {","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        sb.append(PREFIX_ADDRESS + student.getAddress().value + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"Ongzl"},"content":"        student.getTags().stream().forEach(s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_NOK + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_NAME + student.getNok().getName().fullName + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_PHONE + student.getNok().getPhone().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_EMAIL + student.getNok().getEmail().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Ongzl"},"content":"        sb.append(PREFIX_ADDRESS + student.getNok().getAddress().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"    public static String getEditPersonDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"Ongzl"},"content":"        //if (descriptor.getTuitionClasses().isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Ongzl"},"content":"        //    List\u003cTuitionClass\u003e tuitionClasses \u003d descriptor.getTuitionClasses().get();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Ongzl"},"content":"        //    if(tuitionClasses.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Ongzl"},"content":"        //       sb.append()","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"        //    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Ongzl"},"content":"        //}","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"Ongzl"},"content":"        if (descriptor.getNokName().isPresent() || descriptor.getNokAddress().isPresent()","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Ongzl"},"content":"                || descriptor.getNokEmail().isPresent() || descriptor.getNokPhone().isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Ongzl"},"content":"            sb.append(PREFIX_NOK).append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Ongzl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Ongzl"},"content":"        descriptor.getNokAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yourally2":9,"Ongzl":31,"-":41}},{"path":"src/test/java/seedu/times/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ongzl":1,"-":71}},{"path":"src/test/java/seedu/times/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"softmagnet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"softmagnet"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.Model;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"yourally2"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"     * Returns the Student in the {@code model}\u0027s student list at {@code index} - 1.","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"    public static Student getStudentOneBased(Model model, int index) {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"        return model.getFilteredStudentList().get(index - 1);","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"softmagnet"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"     * Returns the tuition class in the {@code model}\u0027s student list at {@code index} - 1.","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"softmagnet"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"softmagnet"},"content":"    public static TuitionClass getClassOneBased(Model model, int index) {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"softmagnet"},"content":"        return model.getFilteredTuitionClassList().get(index - 1);","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"    public static List\u003cIndex\u003e getIndexList(int... indices) {","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"        List\u003cIndex\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"        Arrays.stream(indices).forEach(index -\u003e res.add(Index.fromOneBased(index)));","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"softmagnet"},"content":"        return res;","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yourally2":2,"Ongzl":5,"softmagnet":19,"-":46}},{"path":"src/test/java/seedu/times/testutil/TimesTableBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"yourally2"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"yourally2"},"content":" * A utility class to help with building TimesTable objects.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"yourally2"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"yourally2"},"content":" *     {@code TimesTable ab \u003d new TimesTableBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"yourally2"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"yourally2"},"content":"public class TimesTableBuilder {","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"yourally2"},"content":"    private TimesTable timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"yourally2"},"content":"    public TimesTableBuilder() {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"yourally2"},"content":"        timesTable \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"yourally2"},"content":"    public TimesTableBuilder(TimesTable timesTable) {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"yourally2"},"content":"        this.timesTable \u003d timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"yourally2"},"content":"     * Adds a new {@code Person} to the {@code TimesTable} that we are building.","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"yourally2"},"content":"    public TimesTableBuilder withStudent(Student student) {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"yourally2"},"content":"        timesTable.addStudent(student);","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"yourally2"},"content":"        return this;","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"yourally2"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"yourally2"},"content":"     * Adds a new {@code TuitionClass} to the {@code TimesTable} that we are building.","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"yourally2"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"yourally2"},"content":"    public TimesTableBuilder withTuitionClass(TuitionClass tuitionClass) {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"yourally2"},"content":"        timesTable.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"yourally2"},"content":"        return this;","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"yourally2"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"yourally2"},"content":"    public TimesTable build() {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"yourally2"},"content":"        return timesTable;","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"yourally2"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"yourally2":39,"Ongzl":4}},{"path":"src/test/java/seedu/times/testutil/TuitionClassBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassName;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.ClassTiming;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Location;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.Rate;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.StudentNameList;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"public class TuitionClassBuilder {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_CLASS_NAME \u003d \"O Levels English\";","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_RATE \u003d \"51\";","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Tuas Blk 111\";","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"softmagnet"},"content":"    public static final String DEFAULT_CLASS_TIMING \u003d \"sun 16:00-17:00\";","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"softmagnet"},"content":"    public static final String[] DEFAULT_NAME_LIST \u003d {\"Alice\", \"Benson\", \"Carl\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"softmagnet"},"content":"    private ClassName className;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"softmagnet"},"content":"    private ClassTiming classTiming;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"softmagnet"},"content":"    private Rate rate;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"softmagnet"},"content":"    private Location location;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"softmagnet"},"content":"    private StudentNameList studentNameList;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a new TuitionClassBuilder with the default information.","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder() {","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"softmagnet"},"content":"        className \u003d new ClassName(DEFAULT_CLASS_NAME);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"softmagnet"},"content":"        classTiming \u003d new ClassTiming(DEFAULT_CLASS_TIMING);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"softmagnet"},"content":"        rate \u003d new Rate(DEFAULT_RATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"softmagnet"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"softmagnet"},"content":"        studentNameList \u003d new StudentNameList(DEFAULT_NAME_LIST);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"s7u4rt99"},"content":"     * Constructs a new TuitionClassBuilder with the same information as the classToCopy.","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"s7u4rt99"},"content":"     * @param classToCopy TuitionClass to copy the information from.","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder(TuitionClass classToCopy) {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"        className \u003d classToCopy.getClassName();","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"softmagnet"},"content":"        classTiming \u003d classToCopy.getClassTiming();","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"softmagnet"},"content":"        rate \u003d classToCopy.getRate();","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"        location \u003d classToCopy.getLocation();","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"softmagnet"},"content":"        studentNameList \u003d classToCopy.getStudentList();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"s7u4rt99"},"content":"     * Changes the class name of the TuitionClassBuilder to the given name.","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"s7u4rt99"},"content":"     * @param className Name to be changed to.","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"s7u4rt99"},"content":"     * @return TuitionClassBuilder with the new name.","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withClassName(String className) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"        this.className \u003d new ClassName(className);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"s7u4rt99"},"content":"     * Changes the class timing of the TuitionClassBuilder to the given class timing.","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"s7u4rt99"},"content":"     * @param classTiming Class timing to be changed to.","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"s7u4rt99"},"content":"     * @return TuitionClassBuilder with the new class timing.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withClassTiming(String classTiming) {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"softmagnet"},"content":"        this.classTiming \u003d new ClassTiming(classTiming);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"s7u4rt99"},"content":"     * Changes the rate of the TuitionClassBuilder to the given rate.","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"s7u4rt99"},"content":"     * @param rate Rate to be changed to.","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"s7u4rt99"},"content":"     * @return TuitionClassBuilder with the new rate.","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withRate(String rate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"softmagnet"},"content":"        this.rate \u003d new Rate(rate);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"s7u4rt99"},"content":"     * Changes the location of the TuitionClassBuilder to the given location.","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"s7u4rt99"},"content":"     * @param location Location to be changed to.","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"s7u4rt99"},"content":"     * @return TuitionClassBuilder with the new location.","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withLocation(String location) {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"s7u4rt99"},"content":"     * Changes the student list of the TuitionClassBuilder to the given student list.","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"s7u4rt99"},"content":"     * @param studentList Student list to be changed to.","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"s7u4rt99"},"content":"     * @return TuitionClassBuilder with the new student list.","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"softmagnet"},"content":"    public TuitionClassBuilder withStudentList(String... studentList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"softmagnet"},"content":"        this.studentNameList \u003d new StudentNameList(studentList);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"softmagnet"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"s7u4rt99"},"content":"     * Builds a TuitionClass with the information of the TuitionClassBuilder object.","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"s7u4rt99"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"s7u4rt99"},"content":"     * @return TuitionClass with the information of the TuitionClassBuilder.","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"softmagnet"},"content":"    public TuitionClass build() {","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"softmagnet"},"content":"        return new TuitionClass(className, classTiming, location, rate, studentNameList);","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"softmagnet"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"s7u4rt99":43,"Ongzl":7,"softmagnet":61}},{"path":"src/test/java/seedu/times/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import seedu.times.commons.core.index.Index;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"softmagnet"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"softmagnet"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"softmagnet"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Ongzl":2,"softmagnet":3,"-":7}},{"path":"src/test/java/seedu/times/testutil/TypicalTimestable.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.testutil;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_ADDRESS_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSNAME_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_CLASSTIMING_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_EMAIL_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_LOCATION_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_NAME_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_PHONE_NOK;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_RATE_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_STUDENTLIST_IB_MATHS;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_STUDENTLIST_IB_PHYSICS;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":32,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.TimesTable;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.person.Student;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Ongzl"},"content":"import seedu.times.model.tuitionclass.TuitionClass;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"softmagnet"},"content":"public class TypicalTimestable {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"softmagnet"},"content":"    ///Typical Students","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"yourally2"},"content":"    public static final Student ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"softmagnet"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Long Chai Boon\")","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"325, Clementi State 3, #40-32\")","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"yourally2"},"content":"            .withNokEmail(\"longchatbooon@gmail.com\").withNokPhone(\"67785914\")","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"softmagnet"},"content":"            .withTags(\"Maths\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"yourally2"},"content":"    public static final Student BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Short Chai Boon\")","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"325, West State 3, #60-12\")","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(\"hahiihi@gmail.com\").withNokPhone(\"87759868\")","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"softmagnet"},"content":"            .withTags(\"Physics\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"yourally2"},"content":"    public static final Student CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"softmagnet"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"Campbell Road Ave 2, #11\")","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"softmagnet"},"content":"            .withNokName(\"Jamie Kurz\")","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"325, Bat Cave 3, #10-23\")","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(\"dontcallmeillcome@gmail.com\").withNokPhone(\"62212222\")","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"yourally2"},"content":"    public static final Student DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Bad Chai Boon\")","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"1, Happy Sad 3, #10-12\")","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(\"happyorsadyouchoose@gmail.com\").withNokPhone(\"88888888\")","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"softmagnet"},"content":"            .withTags(\"Maths\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"yourally2"},"content":"    public static final Student ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Bernard Wan\")","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"222, Berkeys State 4, #11-32\")","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"softmagnet"},"content":"            .withNokEmail(\"bernard@gmail.com\").withNokPhone(\"67785314\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"yourally2"},"content":"    public static final Student FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Ong Lin Zhen\")","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"323, Lin Estate 3, #44-31\")","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"yourally2"},"content":"            .withNokEmail(\"zhenngggii@gmail.com\").withNokPhone(\"67382344\")","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"yourally2"},"content":"    public static final Student GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"yourally2"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"yourally2"},"content":"            .withNokName(\"Hehe Chai Red\")","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"yourally2"},"content":"            .withNokAddress(\"999, Estate State 4, #10-32\")","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"yourally2"},"content":"            .withNokEmail(\"salmon@gmail.com\").withNokPhone(\"67111111\")","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"yourally2"},"content":"    public static final Student HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"softmagnet"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"softmagnet"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"yourally2"},"content":"    public static final Student IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"softmagnet"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":94,"author":{"gitId":"yourally2"},"content":"    public static final Student AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"softmagnet"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"Ongzl"},"content":"            .withNokName(VALID_NAME_NOK).withNokPhone(VALID_PHONE_NOK).withNokAddress(VALID_ADDRESS_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(VALID_EMAIL_NOK).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"yourally2"},"content":"    public static final Student BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":100,"author":{"gitId":"Ongzl"},"content":"            .withNokName(VALID_NAME_NOK).withNokPhone(VALID_PHONE_NOK).withNokAddress(VALID_ADDRESS_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Ongzl"},"content":"            .withNokEmail(VALID_EMAIL_NOK)","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"yourally2"},"content":"    // Typical Classes","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"yourally2"},"content":"    public static final String JC_PHYSICS_DAY \u003d \"Mon\";","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yourally2"},"content":"    public static final String JC_PHYSICS_TIME \u003d \"10:00-12:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"yourally2"},"content":"    public static final String JC_PHYSICS_CLASS_TIMING \u003d JC_PHYSICS_DAY + \" \" + JC_PHYSICS_TIME;","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_PHYSICS_DAY \u003d \"Tue\";","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_PHYSICS_TIME \u003d \"11:00-13:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_PHYSICS_CLASS_TIMING \u003d SEC_PHYSICS_DAY + \" \" + SEC_PHYSICS_TIME;","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"yourally2"},"content":"    public static final String JC_MATHS_DAY \u003d \"Wed\";","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"yourally2"},"content":"    public static final String JC_MATHS_TIME \u003d \"15:00-17:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"yourally2"},"content":"    public static final String JC_MATHS_CLASS_TIMING \u003d JC_MATHS_DAY + \" \" + JC_MATHS_TIME;","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_MATHS_DAY \u003d \"Thu\";","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_MATHS_TIME \u003d \"10:00-12:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_MATHS_CLASS_TIMING \u003d SEC_MATHS_DAY + \" \" + SEC_MATHS_TIME;","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"yourally2"},"content":"    public static final String JC_CHEMISTRY_DAY \u003d \"Fri\";","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"s7u4rt99"},"content":"    public static final String JC_CHEMISTRY_TIME \u003d \"13:00-16:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"yourally2"},"content":"    public static final String JC_CHEMISTRY_CLASS_TIMING \u003d JC_CHEMISTRY_DAY + \" \" + JC_CHEMISTRY_TIME;","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_CHEMISTRY_DAY \u003d \"Fri\";","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"s7u4rt99"},"content":"    public static final String SEC_CHEMISTRY_TIME \u003d \"17:00-18:00\";","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"yourally2"},"content":"    public static final String SEC_CHEMISTRY_CLASS_TIMING \u003d SEC_CHEMISTRY_DAY + \" \" + SEC_CHEMISTRY_TIME;","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"    public static final TuitionClass JC_PHYSICS \u003d new TuitionClassBuilder().withClassName(\"JC Physics\")","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"yourally2"},"content":"            .withClassTiming(JC_PHYSICS_CLASS_TIMING).withRate(\"70\").withLocation(\"Jaycee Tuition Center Nex\")","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"softmagnet"},"content":"            .withStudentList(VALID_STUDENTLIST_IB_PHYSICS).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass SEC_PHYSICS \u003d new TuitionClassBuilder().withClassName(\"Sec 4 Physics\")","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"yourally2"},"content":"            .withClassTiming(SEC_PHYSICS_CLASS_TIMING).withRate(\"77\").withLocation(\"Learning Lab Orchard\")","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"softmagnet"},"content":"            .withStudentList(VALID_STUDENTLIST_IB_MATHS).build();","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass JC_MATHS \u003d new TuitionClassBuilder().withClassName(\"JC Maths\")","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"yourally2"},"content":"            .withClassTiming(JC_MATHS_CLASS_TIMING).withRate(\"55\")","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"yourally2"},"content":"            .withLocation(\"Bukit Merah Block 614 #01-330\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass SEC_MATHS \u003d new TuitionClassBuilder().withClassName(\"Sec 4 Maths\")","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"yourally2"},"content":"            .withClassTiming(SEC_MATHS_CLASS_TIMING).withRate(\"60\")","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"yourally2"},"content":"            .withLocation(\"Merlion Tuition Center Kovan\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass JC_CHEMISTRY \u003d new TuitionClassBuilder().withClassName(\"JC Chemistry\")","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"yourally2"},"content":"            .withClassTiming(JC_CHEMISTRY_CLASS_TIMING).withRate(\"50\").withLocation(\"Hougang Blk 313 #11-394\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass SEC_CHEMISTRY \u003d new TuitionClassBuilder().withClassName(\"Sec 4 Chemistry\")","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"yourally2"},"content":"            .withClassTiming(SEC_CHEMISTRY_CLASS_TIMING).withRate(\"80\").withLocation(\"Kumon at Orchard\").build();","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"softmagnet"},"content":"    // Classes found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass IB_PHYSICS \u003d new TuitionClassBuilder().withClassName(VALID_CLASSNAME_IB_PHYSICS)","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"softmagnet"},"content":"            .withClassTiming(VALID_CLASSTIMING_IB_PHYSICS).withRate(VALID_RATE_IB_PHYSICS)","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"softmagnet"},"content":"            .withLocation(VALID_LOCATION_IB_PHYSICS).withStudentList(VALID_STUDENTLIST_IB_PHYSICS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"softmagnet"},"content":"    public static final TuitionClass IB_MATHS \u003d new TuitionClassBuilder().withClassName(VALID_CLASSNAME_IB_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"softmagnet"},"content":"            .withClassTiming(VALID_CLASSTIMING_IB_MATHS).withRate(VALID_RATE_IB_MATHS)","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"softmagnet"},"content":"            .withLocation(VALID_LOCATION_IB_MATHS).withStudentList(VALID_STUDENTLIST_IB_MATHS).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":151,"author":{"gitId":"softmagnet"},"content":"    private TypicalTimestable() {","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"Ongzl"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":155,"author":{"gitId":"yourally2"},"content":"     * Returns a {@code TimesTable} with all the typical students and classes.","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"softmagnet"},"content":"     * Contains 7 students and 6 classes.","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":158,"author":{"gitId":"yourally2"},"content":"    public static TimesTable getTypicalTimesTable() {","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"yourally2"},"content":"        TimesTable ab \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"s7u4rt99"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"softmagnet"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":164,"author":{"gitId":"Ongzl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"softmagnet"},"content":"        for (TuitionClass tuitionClass : getTypicalClasses()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"softmagnet"},"content":"            ab.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"softmagnet"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":172,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"yourally2"},"content":"     * Returns an {@code TimesTable} with all the typical students in reversed order, and classes.","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"s7u4rt99"},"content":"     * Contains 7 students and 6 classes.","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"yourally2"},"content":"    public static TimesTable getTypicalTimesTableReverseStudents() {","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"yourally2"},"content":"        TimesTable ab \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"s7u4rt99"},"content":"        List\u003cStudent\u003e studentList \u003d getTypicalStudents();","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c studentList.size(); i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"s7u4rt99"},"content":"            ab.addStudent(studentList.get(studentList.size() - 1 - i));","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"s7u4rt99"},"content":"        for (TuitionClass tuitionClass : getTypicalClasses()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"s7u4rt99"},"content":"            ab.addTuitionClass(tuitionClass);","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"s7u4rt99"},"content":"        return ab;","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"s7u4rt99"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"yourally2"},"content":"     * Returns a {@code TimesTable} with all the typical students, and classes in reversed order.","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"s7u4rt99"},"content":"     * Contains 7 students and 6 classes.","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"s7u4rt99"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"yourally2"},"content":"    public static TimesTable getTypicalTimesTableReverseClasses() {","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"yourally2"},"content":"        TimesTable ab \u003d new TimesTable();","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"s7u4rt99"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"s7u4rt99"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"s7u4rt99"},"content":"        List\u003cTuitionClass\u003e tuitionClassList \u003d getTypicalClasses();","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"s7u4rt99"},"content":"        for (int i \u003d 0; i \u003c tuitionClassList.size(); i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"s7u4rt99"},"content":"            ab.addTuitionClass(tuitionClassList.get(tuitionClassList.size() - 1 - i));","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"s7u4rt99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"s7u4rt99"},"content":"        return ab;","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"s7u4rt99"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":215,"author":{"gitId":"softmagnet"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"softmagnet"},"content":"    public static List\u003cTuitionClass\u003e getTypicalClasses() {","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"bernardwan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(JC_PHYSICS, SEC_PHYSICS, JC_MATHS, SEC_MATHS,","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"softmagnet"},"content":"                JC_CHEMISTRY, SEC_CHEMISTRY));","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"softmagnet"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"yourally2":66,"s7u4rt99":38,"Ongzl":37,"softmagnet":45,"bernardwan":3,"-":31}},{"path":"src/test/java/seedu/times/ui/TabNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"s7u4rt99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"s7u4rt99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"s7u4rt99"},"content":"class TabNameTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"s7u4rt99"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"s7u4rt99"},"content":"    void getIndex() {","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(0, TabName.STUDENTS.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(1, TabName.CLASSES.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"s7u4rt99"},"content":"        assertEquals(2, TabName.TIMETABLE.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(1, TabName.STUDENTS.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(2, TabName.STUDENTS.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(0, TabName.CLASSES.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(2, TabName.CLASSES.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"s7u4rt99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(0, TabName.TIMETABLE.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"s7u4rt99"},"content":"        assertNotEquals(1, TabName.TIMETABLE.getIndex());","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"s7u4rt99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"s7u4rt99"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"s7u4rt99":24,"Ongzl":1}},{"path":"src/test/java/seedu/times/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Ongzl":1,"-":34}},{"path":"src/test/java/seedu/times/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ongzl"},"content":"package seedu.times.ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ongzl"},"content":"import static seedu.times.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Ongzl"},"content":"import seedu.times.MainApp;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Ongzl":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003c?import seedu.times.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Ongzl":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Ongzl"},"content":"\u003cfx:root type\u003d\"seedu.times.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Ongzl":1,"-":5}}]
